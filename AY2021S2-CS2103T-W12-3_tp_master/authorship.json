[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W12-3/tp/actions)","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"* The `Link.me` project is a client managing program for insurance agents, both experienced","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"and inexperienced.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"* The overall design is very client-oriented, as personal details and other information will","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"be displayed under a client.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"* Meetings and events are displayed in a separate list.","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"* The project is an ongoing software project for a desktop application (called _Link.me_) used for client management.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"  * The project is written in OOP fashion with a dash of FP in stream usage.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"georgepwhuang":10,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"run {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Shuyang0"},"content":"    archiveName \u003d \u0027linkme.jar\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Shuyang0":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"## Project Team","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"### Kenny Chew Pu Yang","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"\u003cimg src\u003d\"images/knitidceladon23.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"[[github](http://github.com/KnitidCeladon23)]","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"[[portfolio](team/knitidceladon23.md)]","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"* Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"### Huang, Po-Wei","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"\u003cimg src\u003d\"images/georgepwhuang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"[[github](http://github.com/georgepwhuang)]","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"[[portfolio](team/georgepwhuang.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"* Responsibilities: Deliverables, IntelliJ, UI","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"### Koh Huai Ze","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"\u003cimg src\u003d\"images/huaize.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"[[github](http://github.com/HuaiZe)]","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"[[portfolio](team/huaize.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"* Responsibilities: Documentation, Code Quality","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"### Liu Shuyang","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"\u003cimg src\u003d\"images/shuyang0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"[[github](http://github.com/Shuyang0)]","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"[[portfolio](team/shuyang0.md)]","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"* Responsibilities: Integration, Git/GitHub","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"KnitidCeladon23":6,"georgepwhuang":6,"Shuyang0":4,"HuaiZe":6,"-":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"![Architecture Diagram](images/ArchitectureDiagram.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"each component.","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"the [diagrams](https://github.com/AY2021S2-CS2103T-W12-3/tp/tree/master/docs/diagrams) folder. Refer to the","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"[PlantUML Tutorial at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"and edit diagrams.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"**Note:** The lifeline for classes in sequence diagrams shown in this Developer\u0027s Guide should end at the destroy marker","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"(X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"called [`Main`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"and [`MainApp`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"is responsible for,","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"* exposes its functionality using a concrete `{Component Name} Manager` class (which implements the corresponding","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"An example of how the components interact with each other upon user input is given in the sequence diagram below.","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"The user input in this example is `delete 1`:","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"![Sequence Diagram of the Architecture](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"The sections below give more details about each individual component.","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Shuyang0"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":", `StatusBarFooter` etc.","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"The `NotifWindow` and `NotesWindow` classes inherit from the `Alert` class.","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"All other classes, including `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"the [`MainWindow`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"is specified","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Shuyang0"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"   help to the user.","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2021-04-11"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"call.","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Shuyang0"},"content":"**API** :","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"Shuyang0"},"content":"[`Model.java`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"* stores a `UserPref` object that represents the user’s preferences, including GUI sizings and more.","lastModifiedDate":"2021-04-12"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"* stores client data.","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"  the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"georgepwhuang"},"content":"* can save client data in json format and read it back.","lastModifiedDate":"2021-04-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"georgepwhuang"},"content":"These include configuration settings and common utilities.","lastModifiedDate":"2021-04-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"georgepwhuang"},"content":"This section describes some noteworthy details on how features added in this iteration are implemented.","lastModifiedDate":"2021-04-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"Shuyang0"},"content":"### Representing gender of clients","lastModifiedDate":"2021-04-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":154,"author":{"gitId":"Shuyang0"},"content":"The gender of each client is represented as a `String` with the full gender (Male/ Female/ Non-binary). However, the","lastModifiedDate":"2021-04-11"},{"lineNumber":155,"author":{"gitId":"georgepwhuang"},"content":"parse will accept any of `M`, `F`, `N`, `Male`, `Female`, `Non-binary` in any combination of upper and lower cases, and then","lastModifiedDate":"2021-04-12"},{"lineNumber":156,"author":{"gitId":"georgepwhuang"},"content":"convert it to the full gender. For example, `NoN-binARy` will be successfully recognized as non-binary.","lastModifiedDate":"2021-04-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":158,"author":{"gitId":"Shuyang0"},"content":"### Representing birthdate of clients","lastModifiedDate":"2021-04-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":160,"author":{"gitId":"Shuyang0"},"content":"The birthdate of each client is currently represented as a `LocalDate` object instead of a `String`. This allows us to","lastModifiedDate":"2021-04-11"},{"lineNumber":161,"author":{"gitId":"Shuyang0"},"content":"use `LocalDate.parse()` to check for the validity of dates, as well as restricting the range of input dates from","lastModifiedDate":"2021-04-11"},{"lineNumber":162,"author":{"gitId":"georgepwhuang"},"content":"`1900-01-01` to `LocalDate.now()`. Link.me supports only strict parsing, which means all invalid dates will not be","lastModifiedDate":"2021-04-12"},{"lineNumber":163,"author":{"gitId":"georgepwhuang"},"content":"recognized and common mistakes like inputting non-existent dates such as the 31st of September will not be automatically","lastModifiedDate":"2021-04-12"},{"lineNumber":164,"author":{"gitId":"georgepwhuang"},"content":"round down to the 30th of September.","lastModifiedDate":"2021-04-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":167,"author":{"gitId":"Shuyang0"},"content":"### Representing insurance premiums of insurance plans","lastModifiedDate":"2021-04-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":169,"author":{"gitId":"Shuyang0"},"content":"The premium of a client\u0027s insurance plan is represented and stored as a `String` to support large amounts without the","lastModifiedDate":"2021-04-11"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"risk of overflow. This is to support all currency values, including those that have a much lower value than SGD.","lastModifiedDate":"2021-04-12"},{"lineNumber":171,"author":{"gitId":"georgepwhuang"},"content":"The validity of the user\u0027s input amount is checked using regular expressions. Unnecessary leading zeroes in the input","lastModifiedDate":"2021-04-12"},{"lineNumber":172,"author":{"gitId":"georgepwhuang"},"content":"string are trimmed, and the input string is padded with zeroes as necessary to format it to 2 decimal places.","lastModifiedDate":"2021-04-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":174,"author":{"gitId":"HuaiZe"},"content":"### Adding or removing insurance plans of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":175,"author":{"gitId":"HuaiZe"},"content":"![PlanSequenceDiagram](images/PlanSequenceDiagram.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"HuaiZe"},"content":"The `PlanCommand` is created and parsed similar to other commands, as shown in the sequence diagram above. Depending","lastModifiedDate":"2021-04-12"},{"lineNumber":178,"author":{"gitId":"HuaiZe"},"content":"on the `Prefix` the user inputs (`i/` or `c/`), an `AddPlanCommand` or a `RemovePlanCommand` will be created and","lastModifiedDate":"2021-04-12"},{"lineNumber":179,"author":{"gitId":"HuaiZe"},"content":"returned respectively.","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"Shuyang0"},"content":"### Recording, viewing and clearing notes for clients","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"Shuyang0"},"content":"![NoteSequenceDiagram](images/NoteSequenceDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":184,"author":{"gitId":"HuaiZe"},"content":"The `NoteCommand` is created and parsed similar to other commands, as shown in the sequence diagram above. The `Prefix`","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"KnitidCeladon23"},"content":"that the user called the command with (`r/` to record note, `v/` to view notes, `c/` to clear notes) is stored as an","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"Shuyang0"},"content":"additional parameter in the `NoteCommand`.","lastModifiedDate":"2021-04-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":189,"author":{"gitId":"Shuyang0"},"content":"![NoteSequenceDiagramRef](images/NoteSequenceDiagramRef.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"Shuyang0"},"content":"Upon executing a `NoteCommand`, a different sequence of actions is performed by the `NoteCommand`, depending on the","lastModifiedDate":"2021-04-11"},{"lineNumber":192,"author":{"gitId":"Shuyang0"},"content":"`Prefix` stored in the `NoteCommand`.","lastModifiedDate":"2021-04-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"Shuyang0"},"content":"Viewing notes will simply create and return a `CommandResult`. This `CommandResult` contains the `Person` object","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"Shuyang0"},"content":"representing the appropriate `Person`. This `Person` is passed back to the `Ui`, which will display the notes of this","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"Shuyang0"},"content":"`Person` in the `NotesWindow`.","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"Shuyang0"},"content":"Recording and clearing notes will call the respective methods of the appropriate","lastModifiedDate":"2021-04-11"},{"lineNumber":199,"author":{"gitId":"Shuyang0"},"content":"`Person` that the user has indicated. The `Person` will return an updated `Person` object, and `NoteCommand`","lastModifiedDate":"2021-04-11"},{"lineNumber":200,"author":{"gitId":"Shuyang0"},"content":"will proceed to call the `ModelManager` to replace the original `Person` with the updated `Person`. A `CommandResult`","lastModifiedDate":"2021-04-11"},{"lineNumber":201,"author":{"gitId":"Shuyang0"},"content":"is then created and returned.","lastModifiedDate":"2021-04-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":204,"author":{"gitId":"KnitidCeladon23"},"content":"### Listing, Finding and filtering clients","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":206,"author":{"gitId":"KnitidCeladon23"},"content":"Upon executing a `ListCommand`, `FindCommand` or `FilterCommand`, a sequence of action is performed by the","lastModifiedDate":"2021-04-12"},{"lineNumber":207,"author":{"gitId":"KnitidCeladon23"},"content":"corresponding commands. All 3 commands work similarly: while `ListCommand` does not require any additional user","lastModifiedDate":"2021-04-12"},{"lineNumber":208,"author":{"gitId":"KnitidCeladon23"},"content":"inputs, additional users inputs for `FindCommand` and `FilterCommand` are required and will be parsed to create","lastModifiedDate":"2021-04-12"},{"lineNumber":209,"author":{"gitId":"KnitidCeladon23"},"content":"Predicate objects. As for the `ListCommand`, the Predicate object will simply return true. These predicates will then","lastModifiedDate":"2021-04-12"},{"lineNumber":210,"author":{"gitId":"KnitidCeladon23"},"content":"be used to determine which `Person` in the `UniquePersonList` found in the `AddressBook` will be added to the","lastModifiedDate":"2021-04-12"},{"lineNumber":211,"author":{"gitId":"KnitidCeladon23"},"content":"`FilteredList`, which will then be iteratively displayed to the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":213,"author":{"gitId":"Shuyang0"},"content":"### Scheduling meetings and Meeting List Display","lastModifiedDate":"2021-04-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"georgepwhuang"},"content":"The implementation of scheduling a meeting is as showcased below:","lastModifiedDate":"2021-04-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":217,"author":{"gitId":"georgepwhuang"},"content":"![ScheduleSequenceDiagramLogic](images/ScheduleSequenceDiagramLogic.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"georgepwhuang"},"content":"![ScheduleSequenceDiagramModel](images/ScheduleSequenceDiagramModel.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"georgepwhuang"},"content":"The current implementation of the `Meeting` class places `Meeting` as an attribute of `Person`. While it","lastModifiedDate":"2021-04-12"},{"lineNumber":221,"author":{"gitId":"georgepwhuang"},"content":"certainly makes more sense to adopt an implementation where `Person` is an attribute of `Meeting` in order to better","lastModifiedDate":"2021-04-12"},{"lineNumber":222,"author":{"gitId":"georgepwhuang"},"content":"support extensions and many-to-many relations, we would have to examine and update every `Meeting` object to edit the","lastModifiedDate":"2021-04-12"},{"lineNumber":223,"author":{"gitId":"georgepwhuang"},"content":"`Person` if we were to update and change a `Person` as the current implementation of `Person` does not contain an","lastModifiedDate":"2021-04-12"},{"lineNumber":224,"author":{"gitId":"georgepwhuang"},"content":"immutable and unique identifier.","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"georgepwhuang"},"content":"As a result, the current implementation of `UniqueMeetingList` takes in `Person` as the element of the list, and","lastModifiedDate":"2021-04-12"},{"lineNumber":227,"author":{"gitId":"georgepwhuang"},"content":"accesses the meeting attribute within the `Person` object when needed. `UniqueMeetingList` contains both a `TreeMap`","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"georgepwhuang"},"content":"with `Meeting` as the key and the owner `Person` as the value, as well as an internal `List`. Regarding the editing of","lastModifiedDate":"2021-04-12"},{"lineNumber":229,"author":{"gitId":"georgepwhuang"},"content":"the `UniqueMeetingList`, every time the `UniquePersonList` is edited, `UniqueMeetingList` is edited as well. Hence,","lastModifiedDate":"2021-04-12"},{"lineNumber":230,"author":{"gitId":"georgepwhuang"},"content":"alteration only remains on the `Model` and `Ui` components.","lastModifiedDate":"2021-04-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"georgepwhuang"},"content":"In future installments, this implementation may be scraped in favor for an implementation where the `Meeting` class acts","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"georgepwhuang"},"content":"as the wrapper for the `Person` class, or an implementation where `Person` and `Meeting` are separate entities,","lastModifiedDate":"2021-04-12"},{"lineNumber":234,"author":{"gitId":"georgepwhuang"},"content":"but for the sake of functionality and simplicity, we shall keep the current implementation as is.","lastModifiedDate":"2021-04-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"georgepwhuang"},"content":"### Unscheduling meetings","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"georgepwhuang"},"content":"The implementation of unscheduling meetings is very similar to scheduling meetings, so we skip the details of the","lastModifiedDate":"2021-04-11"},{"lineNumber":239,"author":{"gitId":"georgepwhuang"},"content":"implementations here and would like to ask the reader to refer to the implementation of scheduling meetings as reference.","lastModifiedDate":"2021-04-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":241,"author":{"gitId":"georgepwhuang"},"content":"The behavior of the unscheduling command and its options are shown as below.","lastModifiedDate":"2021-04-11"},{"lineNumber":242,"author":{"gitId":"georgepwhuang"},"content":"![UnscheduleActivityDiagram](images/UnscheduleActivityDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":244,"author":{"gitId":"georgepwhuang"},"content":"The internal operation of removing a `Meeting` involves locating the owner `Person` on the internal `List` stored in","lastModifiedDate":"2021-04-12"},{"lineNumber":245,"author":{"gitId":"georgepwhuang"},"content":"`UniqueMeetingList`, then use the `Meeting` (the key) to remove the owner `Person` (the value) from the internal","lastModifiedDate":"2021-04-12"},{"lineNumber":246,"author":{"gitId":"georgepwhuang"},"content":"`TreeMap`, then exporting the values in the `TreeMap` back into the internal `List`.","lastModifiedDate":"2021-04-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":248,"author":{"gitId":"georgepwhuang"},"content":"### Displaying Notifications","lastModifiedDate":"2021-04-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":250,"author":{"gitId":"georgepwhuang"},"content":"![NotifSequenceDiagram](images/NotifSequenceDiagram.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":252,"author":{"gitId":"georgepwhuang"},"content":"The implementation of showing notifications is separated into two parts. The first part handles the input `Command` and","lastModifiedDate":"2021-04-12"},{"lineNumber":253,"author":{"gitId":"georgepwhuang"},"content":"returns a `CommandResult` indicating whether the `Command` is a `NotifCommand` and returns it to the `MainWindow`. For the","lastModifiedDate":"2021-04-12"},{"lineNumber":254,"author":{"gitId":"georgepwhuang"},"content":"second part of the implementation, the `MainWindow` handles the `CommandResult` and requests the notifications from","lastModifiedDate":"2021-04-12"},{"lineNumber":255,"author":{"gitId":"georgepwhuang"},"content":"`Logic`, which in turn requests from `Model`. The `MainWindow` then sends the notification string to the `NotifWindow` to","lastModifiedDate":"2021-04-12"},{"lineNumber":256,"author":{"gitId":"georgepwhuang"},"content":"be displayed.","lastModifiedDate":"2021-04-01"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":258,"author":{"gitId":"georgepwhuang"},"content":"\u003c!--","lastModifiedDate":"2021-04-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"georgepwhuang"},"content":"--\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":273,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"KnitidCeladon23"},"content":"* is an insurance agent","lastModifiedDate":"2021-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"KnitidCeladon23"},"content":"* has a need to maintain close relations with clients over a long time period (usually 10+ years)","lastModifiedDate":"2021-03-02"},{"lineNumber":283,"author":{"gitId":"georgepwhuang"},"content":"* prefers desktop apps over other application types","lastModifiedDate":"2021-04-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"KnitidCeladon23"},"content":"**Value proposition**:","lastModifiedDate":"2021-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":290,"author":{"gitId":"KnitidCeladon23"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-02"},{"lineNumber":291,"author":{"gitId":"georgepwhuang"},"content":"* maintain notes on their client, their needs, their likes/dislikes, insurance plans etc.","lastModifiedDate":"2021-04-11"},{"lineNumber":292,"author":{"gitId":"georgepwhuang"},"content":"* get automated reminders about upcoming meetups and notifications on the client\u0027s birthday.","lastModifiedDate":"2021-04-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                                             | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"Shuyang0"},"content":"| -------- | ------------------------------------------ | ----------------------------------------------------------- | ---------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-04"},{"lineNumber":300,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent                            | add a new client along with their contact information       | be able to conveniently check their contact when I need to get in touch      |","lastModifiedDate":"2021-03-28"},{"lineNumber":301,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent                            | view a list of all clients                                  | get an overview of all my clients                                            |","lastModifiedDate":"2021-03-04"},{"lineNumber":302,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent                            | delete a client                                             | remove clients that I am no longer serving                                   |","lastModifiedDate":"2021-03-02"},{"lineNumber":303,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent                            | edit a client                                               | update clients\u0027 information without having to delete and add a new entry     |","lastModifiedDate":"2021-03-04"},{"lineNumber":304,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent with many clients          | find a client by name                                       | locate details of client without having to go through the entire list        |","lastModifiedDate":"2021-03-04"},{"lineNumber":305,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent with many clients          | filter clients by address, gender, age, tags, plan name     | locate clients without going through the entire list     |","lastModifiedDate":"2021-03-28"},{"lineNumber":306,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | new user                                   | clear all entries                                           | remove sample data and make it ready for me to use                           |","lastModifiedDate":"2021-03-04"},{"lineNumber":307,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent                            | add important dates (e.g. birthdays) related to each client | keep track of client\u0027s personal information more easily                      |","lastModifiedDate":"2021-03-04"},{"lineNumber":308,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent                            | add the current insurance plan of each client               | be aware of their current insurance requirements and coverage                |","lastModifiedDate":"2021-03-04"},{"lineNumber":309,"author":{"gitId":"Shuyang0"},"content":"| `* * *`  | insurance agent                            | schedule meetings with people or groups of people           | keep track of upcoming meetings                                              |","lastModifiedDate":"2021-03-04"},{"lineNumber":310,"author":{"gitId":"Shuyang0"},"content":"| `* * `   | insurance agent                            | check the age of each client                                | know if their insurance plan should be updated/ changed, as they get older   |","lastModifiedDate":"2021-03-28"},{"lineNumber":311,"author":{"gitId":"KnitidCeladon23"},"content":"| `* * `   | user with many clients in Link.me | sort clients by criteria (name/age/premium/contract length) | locate clients more easily                                                   |","lastModifiedDate":"2021-04-12"},{"lineNumber":312,"author":{"gitId":"Shuyang0"},"content":"| `* * `   | new user                                   | see usage instructions                                      | refer to instructions when I forget how to use the App                       |","lastModifiedDate":"2021-03-02"},{"lineNumber":313,"author":{"gitId":"Shuyang0"},"content":"| `* * `   | first-time user                            | see sample entries already in the app                       | get a good idea of the functionalities of the app before deciding to use it  |","lastModifiedDate":"2021-03-04"},{"lineNumber":314,"author":{"gitId":"Shuyang0"},"content":"| `* * `   | forgetful insurance agent                  | reminders when clients\u0027 important dates are approaching     | prepare a meaningful greeting/ gift                                          |","lastModifiedDate":"2021-03-04"},{"lineNumber":315,"author":{"gitId":"Shuyang0"},"content":"| `* * `   | insurance agent                            | record, view and clear notes regarding each client          | remind myself of things to take note of                                      |","lastModifiedDate":"2021-03-28"},{"lineNumber":316,"author":{"gitId":"Shuyang0"},"content":"| `* * `   | insurance agent                            | track the status of claims made on behalf of clients        | update clients of the claims progress                                        |","lastModifiedDate":"2021-03-04"},{"lineNumber":317,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | archive clients                                             | separate clients who have passed or have switched providers                  |","lastModifiedDate":"2021-03-28"},{"lineNumber":318,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | pin clients to the top of the app                           | easily access clients that I am currently actively dealing with              |","lastModifiedDate":"2021-03-28"},{"lineNumber":319,"author":{"gitId":"Shuyang0"},"content":"| `* `     | inexperienced insurance agent              | add photographs of each client                              | more easily identify them                                                    |","lastModifiedDate":"2021-03-28"},{"lineNumber":320,"author":{"gitId":"Shuyang0"},"content":"| `* `     | first-time user                            | go through an interactive tutorial                          | learn how to use the app                                                     |","lastModifiedDate":"2021-03-04"},{"lineNumber":321,"author":{"gitId":"Shuyang0"},"content":"| `* `     | social media savvy insurance agent         | add social media accounts of each client                    | keep up to date with their lives and be attentive                            |","lastModifiedDate":"2021-03-28"},{"lineNumber":322,"author":{"gitId":"Shuyang0"},"content":"| `* `     | expert user                                | create my own categories for grouping clients               | better organise and group my client contacts                                 |","lastModifiedDate":"2021-03-28"},{"lineNumber":323,"author":{"gitId":"Shuyang0"},"content":"| `* `     | expert user                                | create my own shortcuts for commonly performed actions      | save time on these actions                                                   |","lastModifiedDate":"2021-03-28"},{"lineNumber":324,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":325,"author":{"gitId":"Shuyang0"},"content":"\u003c!-- Removed user stories","lastModifiedDate":"2021-03-28"},{"lineNumber":326,"author":{"gitId":"Shuyang0"},"content":"| `* * `   | insurance agent                            | add likes \u0026 dislikes of each client                         | be thoughtful to them and prepare appropriate gifts                          |","lastModifiedDate":"2021-03-28"},{"lineNumber":327,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | track the financial status of each client                   | better recommend plans, such as for investment                               |","lastModifiedDate":"2021-03-28"},{"lineNumber":328,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | add basic medical information of each client                | refuse new contracts in case of terminal illness                             |","lastModifiedDate":"2021-03-28"},{"lineNumber":329,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent with few clients           | add potential clients                                       | contact and find new clients                                                 |","lastModifiedDate":"2021-03-28"},{"lineNumber":330,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | suggestions on what to do for clients\u0027 important dates      | save time on brainstorming for a gift                                        |","lastModifiedDate":"2021-03-04"},{"lineNumber":331,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | track the total claims amount made by each client           | recommend better plans and offerings if needed                               |","lastModifiedDate":"2021-03-04"},{"lineNumber":332,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | add hobbies of each client                                  | recommend certain plans if they partake in high-risk activities              |","lastModifiedDate":"2021-03-28"},{"lineNumber":333,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | add info on the insurance plans of clients\u0027 family members  | give insurance advice for client\u0027s family                                    |","lastModifiedDate":"2021-03-04"},{"lineNumber":334,"author":{"gitId":"Shuyang0"},"content":"| `* `     | insurance agent                            | add info on the previous insurance plans of each client     | have a reference when recommending insurance plans                           |","lastModifiedDate":"2021-03-04"},{"lineNumber":335,"author":{"gitId":"Shuyang0"},"content":"| `* `     | expert user                                | disable certain UI elements that I do not use               | have a cleaner UI                                                            |","lastModifiedDate":"2021-03-04"},{"lineNumber":336,"author":{"gitId":"Shuyang0"},"content":"--\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"KnitidCeladon23"},"content":"(For all use cases below, the **System** is the `Link.me` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2021-04-12"},{"lineNumber":341,"author":{"gitId":"georgepwhuang"},"content":"otherwise)","lastModifiedDate":"2021-04-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"HuaiZe"},"content":"**Use case: Add a client**","lastModifiedDate":"2021-04-10"},{"lineNumber":344,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":345,"author":{"gitId":"georgepwhuang"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":346,"author":{"gitId":"georgepwhuang"},"content":"1.  User adds a client with corresponding information","lastModifiedDate":"2021-04-12"},{"lineNumber":347,"author":{"gitId":"georgepwhuang"},"content":"2.  Link.me shows the list of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":348,"author":{"gitId":"georgepwhuang"},"content":"3.  Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":349,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"georgepwhuang"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":351,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":352,"author":{"gitId":"georgepwhuang"},"content":"* 1a. The user\u0027s input format is invalid","lastModifiedDate":"2021-04-12"},{"lineNumber":353,"author":{"gitId":"georgepwhuang"},"content":"    * 1a1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":354,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 1","lastModifiedDate":"2021-04-12"},{"lineNumber":355,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":356,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":357,"author":{"gitId":"HuaiZe"},"content":"**Use case: Edit a client**","lastModifiedDate":"2021-04-10"},{"lineNumber":358,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":359,"author":{"gitId":"georgepwhuang"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":360,"author":{"gitId":"georgepwhuang"},"content":"1.  User requests a list of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":361,"author":{"gitId":"KnitidCeladon23"},"content":"2.  Link.me shows the list of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":362,"author":{"gitId":"HuaiZe"},"content":"3.  User requests to edit a specific client in the list","lastModifiedDate":"2021-04-10"},{"lineNumber":363,"author":{"gitId":"KnitidCeladon23"},"content":"4.  Link.me edits the client","lastModifiedDate":"2021-04-12"},{"lineNumber":364,"author":{"gitId":"georgepwhuang"},"content":"5.  Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":365,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":366,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":367,"author":{"gitId":"georgepwhuang"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":368,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":369,"author":{"gitId":"georgepwhuang"},"content":"* 2a. The list is empty","lastModifiedDate":"2021-04-12"},{"lineNumber":370,"author":{"gitId":"georgepwhuang"},"content":"    * Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":371,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":372,"author":{"gitId":"georgepwhuang"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2021-04-12"},{"lineNumber":373,"author":{"gitId":"georgepwhuang"},"content":"    * 3a1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":374,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":375,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":376,"author":{"gitId":"georgepwhuang"},"content":"* 3b. No optional fields are given","lastModifiedDate":"2021-04-12"},{"lineNumber":377,"author":{"gitId":"georgepwhuang"},"content":"    * 3b1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":378,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":379,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":380,"author":{"gitId":"georgepwhuang"},"content":"* 3c. The user input is invalid","lastModifiedDate":"2021-04-12"},{"lineNumber":381,"author":{"gitId":"georgepwhuang"},"content":"    * 3c1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":382,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":384,"author":{"gitId":"HuaiZe"},"content":"**Use case: Delete a client**","lastModifiedDate":"2021-04-10"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"HuaiZe"},"content":"1.  User requests to list clients","lastModifiedDate":"2021-04-10"},{"lineNumber":388,"author":{"gitId":"KnitidCeladon23"},"content":"2.  Link.me shows a list of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":389,"author":{"gitId":"HuaiZe"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2021-04-10"},{"lineNumber":390,"author":{"gitId":"KnitidCeladon23"},"content":"4.  Link.me deletes the client","lastModifiedDate":"2021-04-12"},{"lineNumber":391,"author":{"gitId":"georgepwhuang"},"content":"5.  Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":394,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":396,"author":{"gitId":"georgepwhuang"},"content":"* 2a. The list is empty","lastModifiedDate":"2021-04-12"},{"lineNumber":397,"author":{"gitId":"georgepwhuang"},"content":"    * Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"georgepwhuang"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2021-04-12"},{"lineNumber":400,"author":{"gitId":"georgepwhuang"},"content":"    * 3a1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":401,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"KnitidCeladon23"},"content":"**Use case: Scheduling a meetup with a client**","lastModifiedDate":"2021-03-02"},{"lineNumber":404,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":405,"author":{"gitId":"KnitidCeladon23"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":406,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":407,"author":{"gitId":"KnitidCeladon23"},"content":"1. User requests to list clients","lastModifiedDate":"2021-03-02"},{"lineNumber":408,"author":{"gitId":"KnitidCeladon23"},"content":"2. Link.me shows a list of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":409,"author":{"gitId":"georgepwhuang"},"content":"3. User requests to schedule a meeting a specific client in the list at a specified date and time, alond with a description of the meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":410,"author":{"gitId":"georgepwhuang"},"content":"4. Link.me adds the specified client, as well as the specifics of the meeting, to the meeting list","lastModifiedDate":"2021-04-12"},{"lineNumber":411,"author":{"gitId":"georgepwhuang"},"content":"5. Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":412,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":413,"author":{"gitId":"KnitidCeladon23"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":414,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":415,"author":{"gitId":"georgepwhuang"},"content":"* 2a. The list is empty","lastModifiedDate":"2021-04-12"},{"lineNumber":416,"author":{"gitId":"georgepwhuang"},"content":"    * Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":417,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":418,"author":{"gitId":"georgepwhuang"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2021-04-12"},{"lineNumber":419,"author":{"gitId":"georgepwhuang"},"content":"    * 3a1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":420,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":421,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":422,"author":{"gitId":"georgepwhuang"},"content":"* 3b. The given meeting input is invalid (user input not formatted as DESCRIPTION @ yyyy-mm-dd HH:MM)","lastModifiedDate":"2021-04-12"},{"lineNumber":423,"author":{"gitId":"georgepwhuang"},"content":"    * 3b1. Link.me shows an error message and reminds the user of the correct format","lastModifiedDate":"2021-04-12"},{"lineNumber":424,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":425,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":426,"author":{"gitId":"georgepwhuang"},"content":"* 3c. The given date-and-time is invalid (eg. user input 2020-02-31 14:30)","lastModifiedDate":"2021-04-11"},{"lineNumber":427,"author":{"gitId":"KnitidCeladon23"},"content":"    * 3c1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":428,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":430,"author":{"gitId":"georgepwhuang"},"content":"* 3d. The given date-and-time coincides with the meeting with another client (eg. user is meeting 2 different clients at","lastModifiedDate":"2021-04-11"},{"lineNumber":431,"author":{"gitId":"georgepwhuang"},"content":"  the same date and time)","lastModifiedDate":"2021-04-11"},{"lineNumber":432,"author":{"gitId":"georgepwhuang"},"content":"    * 3d1. Link.me shows an error message alerting the user that the meeting coincides with another meeting with another client","lastModifiedDate":"2021-04-12"},{"lineNumber":433,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"KnitidCeladon23"},"content":"**Use case: Filter according to attributes**","lastModifiedDate":"2021-04-12"},{"lineNumber":436,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":437,"author":{"gitId":"georgepwhuang"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":438,"author":{"gitId":"KnitidCeladon23"},"content":"1.  User requests to search for clients with corresponding attribute information (at least one parameter is required)","lastModifiedDate":"2021-04-12"},{"lineNumber":439,"author":{"gitId":"KnitidCeladon23"},"content":"    * address: a/ADDRESS","lastModifiedDate":"2021-04-12"},{"lineNumber":440,"author":{"gitId":"KnitidCeladon23"},"content":"    * gender: g/GENDER","lastModifiedDate":"2021-04-12"},{"lineNumber":441,"author":{"gitId":"KnitidCeladon23"},"content":"    * tag: t/TAG","lastModifiedDate":"2021-04-12"},{"lineNumber":442,"author":{"gitId":"KnitidCeladon23"},"content":"    * age: age/[AGE] or age/[AGE_LOWER_BOUND]-[AGE_HIGHER_BOUND]","lastModifiedDate":"2021-04-12"},{"lineNumber":443,"author":{"gitId":"KnitidCeladon23"},"content":"    * insurance plan name: i/PLAN_NAME","lastModifiedDate":"2021-04-12"},{"lineNumber":444,"author":{"gitId":"KnitidCeladon23"},"content":"2.  Link.me shows the list of clients with matching attributes that match the user\u0027s search keywords","lastModifiedDate":"2021-04-12"},{"lineNumber":445,"author":{"gitId":"georgepwhuang"},"content":"3.  Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":447,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":449,"author":{"gitId":"KnitidCeladon23"},"content":"* 1a. The user inputs an invalid prefix.","lastModifiedDate":"2021-04-12"},{"lineNumber":450,"author":{"gitId":"KnitidCeladon23"},"content":"    * 1a1. Link.me shows an error message.","lastModifiedDate":"2021-04-12"},{"lineNumber":451,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 1","lastModifiedDate":"2021-04-12"},{"lineNumber":452,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":453,"author":{"gitId":"KnitidCeladon23"},"content":"* 1b. The user inputs an invalid age parameter or age range as an attribute to filter","lastModifiedDate":"2021-04-12"},{"lineNumber":454,"author":{"gitId":"KnitidCeladon23"},"content":"    * 1b1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":455,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 1","lastModifiedDate":"2021-04-12"},{"lineNumber":456,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":457,"author":{"gitId":"KnitidCeladon23"},"content":"* 1c. The user inputs an invalid gender parameter (must be \u0027M\u0027, \u0027F\u0027 or \u0027N\u0027)","lastModifiedDate":"2021-04-12"},{"lineNumber":458,"author":{"gitId":"KnitidCeladon23"},"content":"    * 1c1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":459,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 1","lastModifiedDate":"2021-04-12"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":461,"author":{"gitId":"KnitidCeladon23"},"content":"* 1d. The user does not input any filter parameters (eg. `filter ` instead of `filter age/25`)","lastModifiedDate":"2021-04-12"},{"lineNumber":462,"author":{"gitId":"KnitidCeladon23"},"content":"    * 1d1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":463,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 1","lastModifiedDate":"2021-04-12"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":465,"author":{"gitId":"KnitidCeladon23"},"content":"* 2a. The filtered list is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":466,"author":{"gitId":"Shuyang0"},"content":"    * Use case ends.","lastModifiedDate":"2021-03-28"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":468,"author":{"gitId":"KnitidCeladon23"},"content":"**Use case: Find by name**","lastModifiedDate":"2021-04-12"},{"lineNumber":469,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":470,"author":{"gitId":"KnitidCeladon23"},"content":"**MSS**","lastModifiedDate":"2021-04-12"},{"lineNumber":471,"author":{"gitId":"KnitidCeladon23"},"content":"1.  User requests to search for clients by name","lastModifiedDate":"2021-04-12"},{"lineNumber":472,"author":{"gitId":"KnitidCeladon23"},"content":"2.  Link.me shows the list of clients whose name matches the user\u0027s search keywords","lastModifiedDate":"2021-04-12"},{"lineNumber":473,"author":{"gitId":"georgepwhuang"},"content":"3.  Use case ends","lastModifiedDate":"2021-04-12"},{"lineNumber":474,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":475,"author":{"gitId":"KnitidCeladon23"},"content":"**Extensions**","lastModifiedDate":"2021-04-12"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":477,"author":{"gitId":"KnitidCeladon23"},"content":"* 1a. The user does not input any parameter (eg. `find ` instead of `find Alex`)","lastModifiedDate":"2021-04-12"},{"lineNumber":478,"author":{"gitId":"KnitidCeladon23"},"content":"    * 1d1. Link.me shows an error message","lastModifiedDate":"2021-04-12"},{"lineNumber":479,"author":{"gitId":"georgepwhuang"},"content":"    * Use case resumes at step 1","lastModifiedDate":"2021-04-12"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":481,"author":{"gitId":"KnitidCeladon23"},"content":"* 2a. The search result list is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":482,"author":{"gitId":"KnitidCeladon23"},"content":"    * Use case ends.","lastModifiedDate":"2021-04-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"HuaiZe"},"content":"2.  The software should not use any OS-dependent libraries and OS-specific features.","lastModifiedDate":"2021-03-02"},{"lineNumber":488,"author":{"gitId":"HuaiZe"},"content":"3.  Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-04-10"},{"lineNumber":489,"author":{"gitId":"georgepwhuang"},"content":"4.  A user with average typing speed for regular English text (i.e. not code, not system admin commands) should be able","lastModifiedDate":"2021-04-12"},{"lineNumber":490,"author":{"gitId":"georgepwhuang"},"content":"    to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-04-12"},{"lineNumber":491,"author":{"gitId":"HuaiZe"},"content":"5.  The software should work without requiring an installer.","lastModifiedDate":"2021-03-02"},{"lineNumber":492,"author":{"gitId":"HuaiZe"},"content":"6.  The software should not depend on a remote server.","lastModifiedDate":"2021-03-02"},{"lineNumber":493,"author":{"gitId":"HuaiZe"},"content":"7.  The data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2021-03-02"},{"lineNumber":494,"author":{"gitId":"HuaiZe"},"content":"8.  The software should be packaged into a single JAR file.","lastModifiedDate":"2021-03-02"},{"lineNumber":495,"author":{"gitId":"HuaiZe"},"content":"9.  The project is expected to adhere to a schedule that delivers a new iteration every two weeks.","lastModifiedDate":"2021-03-02"},{"lineNumber":496,"author":{"gitId":"HuaiZe"},"content":"10. The project JAR file should not exceed 100MB.","lastModifiedDate":"2021-03-02"},{"lineNumber":497,"author":{"gitId":"HuaiZe"},"content":"11. Project PDF files should not exceed 15MB each.","lastModifiedDate":"2021-03-02"},{"lineNumber":498,"author":{"gitId":"georgepwhuang"},"content":"12. The Developer Guide and User Guide should be PDF-friendly and should not contain expandable panels, embedded videos","lastModifiedDate":"2021-04-11"},{"lineNumber":499,"author":{"gitId":"georgepwhuang"},"content":"    and animated GIFs.","lastModifiedDate":"2021-04-11"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"georgepwhuang"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2021-03-02"},{"lineNumber":504,"author":{"gitId":"georgepwhuang"},"content":"* **CLI**: Command Line Interface, an interface that processes commands to a computer program in the form of lines of text","lastModifiedDate":"2021-04-12"},{"lineNumber":505,"author":{"gitId":"georgepwhuang"},"content":"* **GUI**: Graphic User Interface, an interface that allows users to interact with programs through graphical icons instead of text","lastModifiedDate":"2021-04-12"},{"lineNumber":506,"author":{"gitId":"georgepwhuang"},"content":"* **Tag**: Small and simple labels that can serve as an indicator of the client","lastModifiedDate":"2021-04-12"},{"lineNumber":507,"author":{"gitId":"georgepwhuang"},"content":"* **Note** : Longer and complex remarks that gives details about the client","lastModifiedDate":"2021-04-12"},{"lineNumber":508,"author":{"gitId":"georgepwhuang"},"content":"* **JAR** : Java Archive File, the deployment format of the Link.me application","lastModifiedDate":"2021-04-12"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":511,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"georgepwhuang"},"content":"* Initial launch","lastModifiedDate":"2021-04-12"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"georgepwhuang"},"content":"* Saving window preferences","lastModifiedDate":"2021-04-12"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"georgepwhuang"},"content":"### Scheduling a meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"georgepwhuang"},"content":"* Scheduling a meeting with a client","lastModifiedDate":"2021-04-12"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"HuaiZe"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-04-10"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `schedule 1 m/Insurance Plan Talk @ 2032-01-02 16:30`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":542,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Meeting scheduled with first client. Meeting list panel on the right should be updated.","lastModifiedDate":"2021-04-12"},{"lineNumber":543,"author":{"gitId":"georgepwhuang"},"content":"       Status bar should display a message indicating success.","lastModifiedDate":"2021-04-12"},{"lineNumber":544,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":545,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `schedule 0 m/Insurance Plan Talk @ 2032-01-02 16:30`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":546,"author":{"gitId":"georgepwhuang"},"content":"       Expected: No meeting is scheduled. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":547,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":548,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `schedule 1 m/Insurance Plan Talk 2032-01-02 16:30`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":549,"author":{"gitId":"georgepwhuang"},"content":"       Expected: No meeting is scheduled. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":550,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":551,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `schedule 1 m/Insurance Plan Talk`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":552,"author":{"gitId":"georgepwhuang"},"content":"       Expected: No meeting is scheduled. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":553,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":554,"author":{"gitId":"georgepwhuang"},"content":"    1. Other incorrect schedule commands to try: `schedule`, `schedule x m/ DESCRIPTION @ DATETIME` (where x is larger than the list size), `...`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":555,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":556,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":557,"author":{"gitId":"georgepwhuang"},"content":"### Unscheduling a meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":558,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":559,"author":{"gitId":"georgepwhuang"},"content":"* Unscheduling a meeting with a client","lastModifiedDate":"2021-04-12"},{"lineNumber":560,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":561,"author":{"gitId":"georgepwhuang"},"content":"    1. Prerequisites: Meetings are scheduled and shown in the Meeting List Panel on the right on the Ui","lastModifiedDate":"2021-04-12"},{"lineNumber":562,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":563,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `unschedule 2`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":564,"author":{"gitId":"georgepwhuang"},"content":"       Expected: First meeting on the meeting list panel removed.","lastModifiedDate":"2021-04-12"},{"lineNumber":565,"author":{"gitId":"georgepwhuang"},"content":"       Meeting list panel on the right should be updated.","lastModifiedDate":"2021-04-12"},{"lineNumber":566,"author":{"gitId":"georgepwhuang"},"content":"       Status bar should display a message indicating success.","lastModifiedDate":"2021-04-12"},{"lineNumber":567,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":568,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `unschedule expired`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":569,"author":{"gitId":"georgepwhuang"},"content":"       Expected: All meetings on the meeting list panel whose scheduled time has passed are removed.","lastModifiedDate":"2021-04-12"},{"lineNumber":570,"author":{"gitId":"georgepwhuang"},"content":"       Meeting list panel on the right should be updated.","lastModifiedDate":"2021-04-12"},{"lineNumber":571,"author":{"gitId":"georgepwhuang"},"content":"       Status bar should display a message indicating success.","lastModifiedDate":"2021-04-12"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `unschedule all`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":574,"author":{"gitId":"georgepwhuang"},"content":"       Expected: All meetings on the meeting list panel are removed.","lastModifiedDate":"2021-04-12"},{"lineNumber":575,"author":{"gitId":"georgepwhuang"},"content":"       Meeting list panel on the right should be updated.","lastModifiedDate":"2021-04-12"},{"lineNumber":576,"author":{"gitId":"georgepwhuang"},"content":"       Status bar should display a message indicating success.","lastModifiedDate":"2021-04-12"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `unschedule 0`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":579,"author":{"gitId":"georgepwhuang"},"content":"       Expected: No meeting is unscheduled. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":580,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":581,"author":{"gitId":"georgepwhuang"},"content":"    1. Other incorrect unschedule commands to try: `unschedule everything`, `unschedule x` (where x is negative), `...`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":582,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":583,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":584,"author":{"gitId":"georgepwhuang"},"content":"### Generating Notifications","lastModifiedDate":"2021-04-12"},{"lineNumber":585,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":586,"author":{"gitId":"georgepwhuang"},"content":"* Generating Notifications","lastModifiedDate":"2021-04-12"},{"lineNumber":587,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":588,"author":{"gitId":"georgepwhuang"},"content":"    1. Prerequisites: None","lastModifiedDate":"2021-04-12"},{"lineNumber":589,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":590,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `notif`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":591,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Notification window should pop up.","lastModifiedDate":"2021-04-12"},{"lineNumber":592,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":593,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: `notif 12345`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":594,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Notification window should pop up.","lastModifiedDate":"2021-04-12"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":596,"author":{"gitId":"georgepwhuang"},"content":"    1. Other correct notif commands to try: `notif x`(where x is any string appended)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":597,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"Shuyang0"},"content":"### Recording a note for a client","lastModifiedDate":"2021-04-12"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":601,"author":{"gitId":"georgepwhuang"},"content":"* Recording a note for a client when all clients are shown.","lastModifiedDate":"2021-04-12"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":603,"author":{"gitId":"Shuyang0"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":604,"author":{"gitId":"Shuyang0"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":605,"author":{"gitId":"Shuyang0"},"content":"    1. Test case: `note 1 r/TEST DATA`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":606,"author":{"gitId":"Shuyang0"},"content":"     Expected: New note is added to the first client. Updated number of notes is shown in the client information. Message of the note and client name shown in the status message. ","lastModifiedDate":"2021-04-12"},{"lineNumber":607,"author":{"gitId":"Shuyang0"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":608,"author":{"gitId":"Shuyang0"},"content":"    1. Test case: `note 0 r/TEST DATA`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":609,"author":{"gitId":"Shuyang0"},"content":"     Expected: No note is added. Error details shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":610,"author":{"gitId":"Shuyang0"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":611,"author":{"gitId":"Shuyang0"},"content":"    1. Other incorrect recording note commands to try: `note r/`, `note n r/` (where n is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":612,"author":{"gitId":"Shuyang0"},"content":"     Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":614,"author":{"gitId":"Shuyang0"},"content":"### Viewing notes for a client","lastModifiedDate":"2021-04-12"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":616,"author":{"gitId":"georgepwhuang"},"content":"* Viewing notes for a client when all clients are shown.","lastModifiedDate":"2021-04-12"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":618,"author":{"gitId":"Shuyang0"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":619,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":620,"author":{"gitId":"Shuyang0"},"content":"    1. Test case: `note 1 v/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":621,"author":{"gitId":"Shuyang0"},"content":"       Expected: Popup window appears, displaying all notes recorded for that client. Client name shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":622,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":623,"author":{"gitId":"Shuyang0"},"content":"    1. Test case: `note 0 v/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":624,"author":{"gitId":"Shuyang0"},"content":"       Expected: No popup window appears. Error details shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":625,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":626,"author":{"gitId":"Shuyang0"},"content":"    1. Other incorrect viewing note commands to try: `note v/`, `note n v/` (where n is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":627,"author":{"gitId":"Shuyang0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":628,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":629,"author":{"gitId":"Shuyang0"},"content":"### Clearing notes for a client","lastModifiedDate":"2021-04-12"},{"lineNumber":630,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":631,"author":{"gitId":"georgepwhuang"},"content":"* Clearing notes for a client when all clients are shown.","lastModifiedDate":"2021-04-12"},{"lineNumber":632,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":633,"author":{"gitId":"Shuyang0"},"content":"    1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":634,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":635,"author":{"gitId":"Shuyang0"},"content":"    1. Test case: `note 1 c/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":636,"author":{"gitId":"Shuyang0"},"content":"       Expected: Notes are cleared for the first client. Client information shows `You have no notes`. Client name shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":637,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":638,"author":{"gitId":"Shuyang0"},"content":"    1. Test case: `note 0 c/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":639,"author":{"gitId":"Shuyang0"},"content":"       Expected: Notes are not cleared. Error details shown in the status message.","lastModifiedDate":"2021-04-12"},{"lineNumber":640,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":641,"author":{"gitId":"Shuyang0"},"content":"    1. Other incorrect clearing note commands to try: `note c/`, `note n c/` (where n is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":642,"author":{"gitId":"Shuyang0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":643,"author":{"gitId":"Shuyang0"},"content":"       ","lastModifiedDate":"2021-04-12"},{"lineNumber":644,"author":{"gitId":"KnitidCeladon23"},"content":"### Listing all clients","lastModifiedDate":"2021-04-12"},{"lineNumber":645,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":646,"author":{"gitId":"georgepwhuang"},"content":"* Get a list of all clients","lastModifiedDate":"2021-04-12"},{"lineNumber":647,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":648,"author":{"gitId":"KnitidCeladon23"},"content":"    1. Test case: `list`, `list alex`, `list 123` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":649,"author":{"gitId":"KnitidCeladon23"},"content":"       Expected: All clients will be displayed in the list, additional parameters are ignored","lastModifiedDate":"2021-04-12"},{"lineNumber":650,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":651,"author":{"gitId":"KnitidCeladon23"},"content":"### Finding clients by name","lastModifiedDate":"2021-04-12"},{"lineNumber":652,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":653,"author":{"gitId":"georgepwhuang"},"content":"* Finding clients using (a) name(s) as keyword","lastModifiedDate":"2021-04-12"},{"lineNumber":654,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":655,"author":{"gitId":"KnitidCeladon23"},"content":"    1. Test case: `find Alex` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":656,"author":{"gitId":"KnitidCeladon23"},"content":"       Expected: All clients with that has \"Alex\" in their name will be displayed in the list","lastModifiedDate":"2021-04-12"},{"lineNumber":657,"author":{"gitId":"KnitidCeladon23"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":658,"author":{"gitId":"KnitidCeladon23"},"content":"    1. Test case: `find Alex Bernice` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":659,"author":{"gitId":"KnitidCeladon23"},"content":"       Expected: All clients with that has \"Alex\" OR \"Bernice\" in their name will be displayed in the list","lastModifiedDate":"2021-04-12"},{"lineNumber":660,"author":{"gitId":"KnitidCeladon23"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":661,"author":{"gitId":"KnitidCeladon23"},"content":"    1. Test case: `find` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":662,"author":{"gitId":"KnitidCeladon23"},"content":"       Expected: Error message \"Invalid command format!\" followed by instructions on how to properly use the find","lastModifiedDate":"2021-04-12"},{"lineNumber":663,"author":{"gitId":"KnitidCeladon23"},"content":"       command","lastModifiedDate":"2021-04-12"},{"lineNumber":664,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":665,"author":{"gitId":"georgepwhuang"},"content":"### Filtering clients using attributes","lastModifiedDate":"2021-04-15"},{"lineNumber":666,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":667,"author":{"gitId":"georgepwhuang"},"content":"* Attributes include `a/ADDRESS`, `g/GENDER`, `t/TAG`, `age/[AGE]` or `age/[AGE_LOWER_BOUND]-[AGE_HIGHER_BOUND]`, `i/INSURANCE_PLAN_NAME`","lastModifiedDate":"2021-04-15"},{"lineNumber":668,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":669,"author":{"gitId":"KnitidCeladon23"},"content":"    1. Test case: `filter a/Clementi g/M t/medical i/Protecc age/23-30` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":670,"author":{"gitId":"KnitidCeladon23"},"content":"       Expected: Returns a list of clients who have \"Clementi\" in their address, and \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":671,"author":{"gitId":"KnitidCeladon23"},"content":"       clients who are Male, and \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":672,"author":{"gitId":"KnitidCeladon23"},"content":"       clients with the \"medical\" tag, and \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":673,"author":{"gitId":"KnitidCeladon23"},"content":"       clients with the insurance plan \"Protecc\", and \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":674,"author":{"gitId":"KnitidCeladon23"},"content":"       clients aged between 23 and 30 years old, inclusive","lastModifiedDate":"2021-04-12"},{"lineNumber":675,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":676,"author":{"gitId":"KnitidCeladon23"},"content":"    1. Test case: `filter`, `filter 20`, `filter Clementi` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":677,"author":{"gitId":"KnitidCeladon23"},"content":"       Expected: Error message \"Invalid command format!\" followed by instructions on how to properly use the filter","lastModifiedDate":"2021-04-12"},{"lineNumber":678,"author":{"gitId":"KnitidCeladon23"},"content":"       command","lastModifiedDate":"2021-04-12"},{"lineNumber":679,"author":{"gitId":"KnitidCeladon23"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":680,"author":{"gitId":"KnitidCeladon23"},"content":"    1. Test case: `filter age/abc`, `filter age/-1`, `filter age/30-20`, `filter age/ab-20`, `filter age/-1-20` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":681,"author":{"gitId":"KnitidCeladon23"},"content":"       Expected: Error message \"Invalid age (range) input!\" followed by instructions on how to properly use the filter","lastModifiedDate":"2021-04-12"},{"lineNumber":682,"author":{"gitId":"KnitidCeladon23"},"content":"       command \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":683,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":684,"author":{"gitId":"HuaiZe"},"content":"### Adding or removing an insurance plan of a client","lastModifiedDate":"2021-04-12"},{"lineNumber":685,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":686,"author":{"gitId":"georgepwhuang"},"content":"* Adding a new insurance plan to a client while all clients are being shown","lastModifiedDate":"2021-04-12"},{"lineNumber":687,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":688,"author":{"gitId":"HuaiZe"},"content":"    1. Prerequisites: List all clients using the `list` command. At least 1 client in the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":689,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":690,"author":{"gitId":"HuaiZe"},"content":"    1. Test case: `plan 1 i/Investment $1000`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":691,"author":{"gitId":"HuaiZe"},"content":"       Expected: A new insurance plan is added to the 1st client in the list. Details are shown in the result display.","lastModifiedDate":"2021-04-12"},{"lineNumber":692,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":693,"author":{"gitId":"HuaiZe"},"content":"    1. Test case: `plan 1 i/Investment $0`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":694,"author":{"gitId":"HuaiZe"},"content":"       Expected: No insurance plan is added. Error details are shown in the result display.","lastModifiedDate":"2021-04-12"},{"lineNumber":695,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":696,"author":{"gitId":"HuaiZe"},"content":"    1. Other incorrect plan commands to try: `plan 0 i/Investment $1000`, `plan 1 i/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":697,"author":{"gitId":"HuaiZe"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":698,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":699,"author":{"gitId":"georgepwhuang"},"content":"* Removing an existing insurance plan from a client while all clients are being shown","lastModifiedDate":"2021-04-12"},{"lineNumber":700,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":701,"author":{"gitId":"HuaiZe"},"content":"    1. Prerequisites: List all clients using the `list` command. At least 1 client in the list and the 1st client has at least 1 insurance plan.","lastModifiedDate":"2021-04-12"},{"lineNumber":702,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":703,"author":{"gitId":"HuaiZe"},"content":"    1. Test case: `plan 1 c/1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":704,"author":{"gitId":"HuaiZe"},"content":"       Expected: The 1st insurance plan of the 1st client in the list is removed. Details are shown in the result display.","lastModifiedDate":"2021-04-12"},{"lineNumber":705,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":706,"author":{"gitId":"HuaiZe"},"content":"    1. Test case: `plan 1 c/0`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":707,"author":{"gitId":"HuaiZe"},"content":"       Expected: No insurance plan is removed. Error details are shown in the result display.","lastModifiedDate":"2021-04-12"},{"lineNumber":708,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":709,"author":{"gitId":"HuaiZe"},"content":"    1. Other incorrect plan commands to try: `plan 0 c/1`, `plan 1 c/`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":710,"author":{"gitId":"HuaiZe"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-04-12"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"georgepwhuang"},"content":"* Editing linkme.json","lastModifiedDate":"2021-04-12"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"georgepwhuang"},"content":"    1. Prerequisites: Link.me is not started while data files are edited","lastModifiedDate":"2021-04-12"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: delete the `linkme.json` file","lastModifiedDate":"2021-04-12"},{"lineNumber":719,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Link.me will load sample data upon initialization the next time it starts","lastModifiedDate":"2021-04-12"},{"lineNumber":720,"author":{"gitId":"georgepwhuang"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":721,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: valid edits are made in the `linkme.json` file","lastModifiedDate":"2021-04-12"},{"lineNumber":722,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Link.me will the data in from the json file correctly","lastModifiedDate":"2021-04-12"},{"lineNumber":723,"author":{"gitId":"georgepwhuang"},"content":"    ","lastModifiedDate":"2021-04-12"},{"lineNumber":724,"author":{"gitId":"georgepwhuang"},"content":"    1. Test case: invalid edits are made in the `linkme.json` file","lastModifiedDate":"2021-04-12"},{"lineNumber":725,"author":{"gitId":"georgepwhuang"},"content":"       Expected: Link.me will start with an empty data set upon initialization the next time it starts","lastModifiedDate":"2021-04-12"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":727,"author":{"gitId":"georgepwhuang"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":728,"author":{"gitId":"georgepwhuang"},"content":"## **Appendix: Effort**","lastModifiedDate":"2021-04-12"},{"lineNumber":729,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":730,"author":{"gitId":"georgepwhuang"},"content":"### Meetings and scheduling","lastModifiedDate":"2021-04-12"},{"lineNumber":731,"author":{"gitId":"georgepwhuang"},"content":"While AB3 only deals with a single entity, `Link.me` deals with an additional entity - `Meeting`. As `Meeting` and","lastModifiedDate":"2021-04-12"},{"lineNumber":732,"author":{"gitId":"georgepwhuang"},"content":"`Person` are closely intertwined, the level of dependency between the two entities had to be carefully determined.","lastModifiedDate":"2021-04-12"},{"lineNumber":733,"author":{"gitId":"georgepwhuang"},"content":"Another issue we had to face with `Meeting` was that the `Meeting` entity was time-related, thus some operations could","lastModifiedDate":"2021-04-12"},{"lineNumber":734,"author":{"gitId":"georgepwhuang"},"content":"not be easily tested. Due to the time-related nature of `Meeting`, we also had to come up with a method to order","lastModifiedDate":"2021-04-12"},{"lineNumber":735,"author":{"gitId":"georgepwhuang"},"content":"`Meeting` according to time when put on display.","lastModifiedDate":"2021-04-12"},{"lineNumber":736,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":737,"author":{"gitId":"georgepwhuang"},"content":"### Notifications and notes","lastModifiedDate":"2021-04-12"},{"lineNumber":738,"author":{"gitId":"georgepwhuang"},"content":"Notifications and notes had too much information to fit on the main GUI window, thus we had to display the information","lastModifiedDate":"2021-04-12"},{"lineNumber":739,"author":{"gitId":"georgepwhuang"},"content":"on a separate window. As the construction of a new stage was troublesome especially when we still wanted keyboard","lastModifiedDate":"2021-04-12"},{"lineNumber":740,"author":{"gitId":"georgepwhuang"},"content":"operations like `Enter` to still work on the new window as well as keep the main GUI consistent, we decided to piggyback","lastModifiedDate":"2021-04-12"},{"lineNumber":741,"author":{"gitId":"georgepwhuang"},"content":"the implementation on the inbuilt `JavaFX Alert` class, which proved to be another hassle, as `Alert` windows were not","lastModifiedDate":"2021-04-12"},{"lineNumber":742,"author":{"gitId":"georgepwhuang"},"content":"designed to hold that much information. As a result, we had to sacrifice a bit of UI theme consistency over successful","lastModifiedDate":"2021-04-12"},{"lineNumber":743,"author":{"gitId":"georgepwhuang"},"content":"functionality.","lastModifiedDate":"2021-04-12"},{"lineNumber":744,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":745,"author":{"gitId":"georgepwhuang"},"content":"### Insurance plans","lastModifiedDate":"2021-04-12"},{"lineNumber":746,"author":{"gitId":"georgepwhuang"},"content":"For insurance plans, the troubling part was to try to keep the similar functionalities of adding and removing within the","lastModifiedDate":"2021-04-12"},{"lineNumber":747,"author":{"gitId":"georgepwhuang"},"content":"same command in order to reduce user confusion. A separate parser had to be implemented. Another challenge was that the","lastModifiedDate":"2021-04-12"},{"lineNumber":748,"author":{"gitId":"georgepwhuang"},"content":"insurance premiums could be very large when we wanted to subject it to different small value currencies. Hence, we had","lastModifiedDate":"2021-04-12"},{"lineNumber":749,"author":{"gitId":"georgepwhuang"},"content":"to store the value as a `String` with validations made with regular expressions, something else we had to learn, instead","lastModifiedDate":"2021-04-12"},{"lineNumber":750,"author":{"gitId":"georgepwhuang"},"content":"of an `Integer`.","lastModifiedDate":"2021-04-12"},{"lineNumber":751,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":752,"author":{"gitId":"georgepwhuang"},"content":"### Filtering clients","lastModifiedDate":"2021-04-12"},{"lineNumber":753,"author":{"gitId":"georgepwhuang"},"content":"For filtering clients, the main issue was trying to express the selection criteria of different attributes as","lastModifiedDate":"2021-04-12"},{"lineNumber":754,"author":{"gitId":"georgepwhuang"},"content":"predicates, to which we had to utilize functional programming techniques instead of more common OOP usage. The parser","lastModifiedDate":"2021-04-12"},{"lineNumber":755,"author":{"gitId":"georgepwhuang"},"content":"for the filter command was also more complex than other commands to construct. In particular, for filtering, we also","lastModifiedDate":"2021-04-12"},{"lineNumber":756,"author":{"gitId":"georgepwhuang"},"content":"had to filter by age, which required an extra processing step as compared to filtering by other attributes.","lastModifiedDate":"2021-04-12"},{"lineNumber":757,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":758,"author":{"gitId":"georgepwhuang"},"content":"### UI","lastModifiedDate":"2021-04-12"},{"lineNumber":759,"author":{"gitId":"georgepwhuang"},"content":"The UI tinkering for the MainWindow proved to be a major hurdle as we wanted the UI to remain viewable even after","lastModifiedDate":"2021-04-12"},{"lineNumber":760,"author":{"gitId":"georgepwhuang"},"content":"extreme inputs, which we allowed in order to give our users the greatest flexibility. The GUI also had to stay intact","lastModifiedDate":"2021-04-12"},{"lineNumber":761,"author":{"gitId":"georgepwhuang"},"content":"when the window is restarted. Furthermore, GUI behaviors could be different on different OSes, so we had to test the GUI","lastModifiedDate":"2021-04-12"},{"lineNumber":762,"author":{"gitId":"georgepwhuang"},"content":"under different environments.","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"georgepwhuang":285,"Shuyang0":100,"KnitidCeladon23":93,"HuaiZe":47,"-":237}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"Are you finding it difficult to keep track of your insurance clients? Life as an insurance agent isn\u0027t easy. We","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"understand. Link.me is a **desktop app built for insurance agents** to help you manage your clients. Features of","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"Link.me include adding, editing, deleting, searching for and filtering clients. Link.me also supports peripheral","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"features such as adding and removing insurance plans of clients, meeting scheduling, recording client notes and","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"notifying the user of important upcoming events.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"Link.me is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"User Interface (GUI). If you can type fast, Link.me can get your client management tasks done faster than traditional","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"GUI apps.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"### Using this guide","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"This user guide will guide you, as an insurance agent, through the process of setting up Link.me, introduce you to the","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"capabilities of Link.me and facilitate your usage of Link.me so that you can better manage your ever-increasing","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"number of clients.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"Note the following symbols and formatting used in this guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"Symbol/Formatting            | Meaning","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"-----------------------------|------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":":information_source:         |This symbol indicates important information to take note of.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":":bulb:                       |This symbol indicates a helpful tip.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":":exclamation:                |This symbol indicates a warning that you should follow.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"You may navigate this document using the Table of Contents provided below.","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"2. Download the latest `linkme.jar` from [here](https://github.com/AY2021S2-CS2103T-W12-3/tp/releases).","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for `Link.me`. We recommend you create a new folder for this.","lastModifiedDate":"2021-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"4. Double-click the file to start `Link.me`. A window similar to the one shown below should appear in a few seconds.","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"   Note how Link.me already contains some sample data. You may look through the sample data to get an idea of what","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"   client information Link.me will store.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"5. Type a command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"   the help window.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"KnitidCeladon23"},"content":"      * **`list`** : Lists all of your clients.","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"      * **`add n/John Doe p/98765432 e/johnd@example.com a/123 John Street g/M b/1993-05-06`** : Adds a client named `John Doe` to Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"      * **`delete 3`** : Deletes the 3rd client shown in the currently displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"      * **`clear`** : Deletes all of your clients. You may use this to clear the sample data.","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"      * **`exit`** : Exits Link.me.","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"6. Refer to the [Features](#features) section below for details of each command.","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"## Overview","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"### Layout","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"The structure of the Link.me interface is split into five main parts:","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"![Layout](images/Layout.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"Shuyang0"},"content":"* The **Input Command Line** is where you input commands for execution.","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"HuaiZe"},"content":"* The **Result Display** displays the result of your command.","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Shuyang0"},"content":"* The **Client List** displays the list of clients you have stored in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Shuyang0"},"content":"* The **Meeting List** displays the list of meetings that you have scheduled.","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"HuaiZe"},"content":"* The **Status Bar** displays information regarding where your information is stored (not relevant for basic users).","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"![PersonLayout](images/PersonLayout.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"You can view the personal information of each client, as well as their insurance plans and if there are any notes","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"recorded about them.","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"![MeetingLayout](images/MeetingLayout.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"HuaiZe"},"content":"You can also view information regarding upcoming meetings, such as the meeting time and a brief description of the","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"HuaiZe"},"content":"meeting.","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"### Functionalities","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"Shuyang0"},"content":"Action                            | Format","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Shuyang0"},"content":"----------------------------------|------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Shuyang0"},"content":"**Add a client**                  | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS g/GENDER b/BIRTHDATE [t/TAG]...`","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"HuaiZe"},"content":"**Add or remove insurance plans** | `plan INDEX i/PLAN_NAME $PREMIUM` (add)\u003cbr\u003e`plan INDEX c/PLAN_INDEX` (remove)","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"Shuyang0"},"content":"**Clear all clients**             | `clear`","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Shuyang0"},"content":"**Delete a client**               | `delete INDEX`","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Shuyang0"},"content":"**Edit a client**                 | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GENDER] [b/BIRTHDATE] [t/TAG]...`","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Shuyang0"},"content":"**Exit Link.me**                  | `exit`","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"Shuyang0"},"content":"**Filter by attribute**           | `filter PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]`","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Shuyang0"},"content":"**Find by name**                  | `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"Shuyang0"},"content":"**List all clients**              | `list`","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"**Record, clear or view notes**   | `note INDEX r/NOTE` (record) \u003cbr\u003e`note INDEX c/` (clear)\u003cbr\u003e`note INDEX v/` (view)","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"**Remove meetings**               | `unschedule INDEX` (remove specified meeting)\u003cbr\u003e `unschedule all` (remove all meetings)\u003cbr\u003e `unschedule expired` (remove expired meetings)","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"**Schedule meetings**             | `schedule INDEX m/DESCRIPTION @ DATE_TIME`","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"Shuyang0"},"content":"**Show notifications**            | `notif`","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":"**View help**                     | `help`","lastModifiedDate":"2021-04-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Shuyang0"},"content":"* Words in `UPPER_CASE` are the inputs you should supply.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":123,"author":{"gitId":"HuaiZe"},"content":"  e.g. in `n/NAME`, `NAME` represents the client\u0027s name that you should provide. For instance, if the","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"HuaiZe"},"content":"  client\u0027s name is \"John Doe\", you should input: `n/John Doe`.","lastModifiedDate":"2021-04-12"},{"lineNumber":125,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"KnitidCeladon23"},"content":"* Inputs in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"Shuyang0"},"content":"  e.g. in `n/NAME [t/TAG]`, while the input for `n/NAME` is mandatory, it is okay to omit `[t/TAG]`.","lastModifiedDate":"2021-04-12"},{"lineNumber":129,"author":{"gitId":"Shuyang0"},"content":"  For instance, these two inputs are valid:","lastModifiedDate":"2021-04-12"},{"lineNumber":130,"author":{"gitId":"Shuyang0"},"content":"  * `n/John Doe t/medical`","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"KnitidCeladon23"},"content":"  * `n/John Doe`","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Shuyang0"},"content":"* Inputs with `…`​ after them can be used multiple times (including zero times).\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"KnitidCeladon23"},"content":"  e.g. in `[t/TAG]…​`, the following inputs are valid:","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"Shuyang0"},"content":"  * `t/medical`","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"HuaiZe"},"content":"  * `t/medical t/investment`","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"KnitidCeladon23"},"content":"* You can enter your inputs in any order.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"Shuyang0"},"content":"* If an input is expected only once in the command, but you specify it multiple times, only the last occurrence of the","lastModifiedDate":"2021-04-12"},{"lineNumber":144,"author":{"gitId":"KnitidCeladon23"},"content":"  input will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":147,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"Shuyang0"},"content":"* For commands that do not take in additional inputs (such as `help`, `list`, `exit` and `clear`), any additional inputs will","lastModifiedDate":"2021-04-12"},{"lineNumber":149,"author":{"gitId":"georgepwhuang"},"content":"  be ignored.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"Shuyang0"},"content":"  e.g. for the `help` command, if you input `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-04-12"},{"lineNumber":151,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Shuyang0"},"content":"### Listing all of your clients : `list`","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Shuyang0"},"content":"You can view a list of all of your clients stored in Link.me.","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"Shuyang0"},"content":"Format: `list`","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Shuyang0"},"content":"### Adding a client: `add`","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"Shuyang0"},"content":"You can add a client to Link.me, by specifying each of the fields below:","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":165,"author":{"gitId":"Shuyang0"},"content":"* Name","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"HuaiZe"},"content":"  * should only contain alphanumeric characters, spaces and these special characters: (),-","lastModifiedDate":"2021-04-12"},{"lineNumber":167,"author":{"gitId":"Shuyang0"},"content":"  * should not be blank","lastModifiedDate":"2021-04-12"},{"lineNumber":168,"author":{"gitId":"HuaiZe"},"content":"  * should not be the same as an existing client","lastModifiedDate":"2021-04-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":170,"author":{"gitId":"KnitidCeladon23"},"content":"  \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":171,"author":{"gitId":"KnitidCeladon23"},"content":"  :bulb: **Tip:** Use `-` in place of `/` if your name has it. e.g. `Ravi s/o Veegan` --\u003e `Ravi s-o Veegan` \u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":172,"author":{"gitId":"KnitidCeladon23"},"content":"  \u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":173,"author":{"gitId":"KnitidCeladon23"},"content":"  \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":174,"author":{"gitId":"KnitidCeladon23"},"content":"  :bulb: **Tip:** Link.me does not allow identical names to help you avoid confusion. If more than one of your","lastModifiedDate":"2021-04-16"},{"lineNumber":175,"author":{"gitId":"HuaiZe"},"content":"      clients have the same name, you are encouraged to add additional information in parentheses after their name","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"HuaiZe"},"content":"      to help you differentiate them.","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"KnitidCeladon23"},"content":"  \u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":179,"author":{"gitId":"Shuyang0"},"content":"* Phone number","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"Shuyang0"},"content":"  * should only contain numbers","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"HuaiZe"},"content":"  * should be between 3 and 50 digits (inclusive) long","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"Shuyang0"},"content":"* Email","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"Shuyang0"},"content":"  * should be in the format `local-part@domain`","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"HuaiZe"},"content":"  * `local-part` should not be blank and should only contain alphanumeric characters and these special characters: !#$%\u0026\u0027*+/\u003d?`{\\|}~^.-","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"HuaiZe"},"content":"  * `domain` should be at least 2 characters long, start and end with alphanumeric characters, and only contain alphanumeric characters, periods and hyphens","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":188,"author":{"gitId":"Shuyang0"},"content":"* Address","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"Shuyang0"},"content":"  * should not be blank","lastModifiedDate":"2021-04-12"},{"lineNumber":190,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":191,"author":{"gitId":"Shuyang0"},"content":"* Gender","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"Shuyang0"},"content":"  * should be either `M`/`Male`, `F`/`Female` or `N`/`Non-binary`","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"Shuyang0"},"content":"* Birthdate","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"HuaiZe"},"content":"  * should be in the format `YYYY-MM-DD`","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"georgepwhuang"},"content":"  * should be a valid date (before the current date)","lastModifiedDate":"2021-04-15"},{"lineNumber":197,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"Shuyang0"},"content":"* Tags (optional)","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"HuaiZe"},"content":"  * should only contain alphanumeric characters","lastModifiedDate":"2021-04-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Shuyang0"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS g/GENDER b/BIRTHDATE [t/TAG]...`","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"Shuyang0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":204,"author":{"gitId":"Shuyang0"},"content":":bulb: **Tip:** A client can have any number of tags (including 0).","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":209,"author":{"gitId":"Shuyang0"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 g/M b/1995-01-01 t/investment`","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"Shuyang0"},"content":"* `add n/Betsy Crowe t/medical e/betsycrowe@example.com a/Newgate Prison p/91234567 t/life g/F b/1998-02-03`","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"KnitidCeladon23"},"content":"### Editing a client : `edit`","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"Shuyang0"},"content":"You can edit the information of an existing client.","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Shuyang0"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GENDER] [b/BIRTHDATE] [t/TAG]...`","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"Shuyang0"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":219,"author":{"gitId":"georgepwhuang"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"Shuyang0"},"content":"* The format of each field is specified above under [Adding a client](#adding-a-client-add).","lastModifiedDate":"2021-04-12"},{"lineNumber":222,"author":{"gitId":"Shuyang0"},"content":"* Existing values will be updated to new values you provide.","lastModifiedDate":"2021-04-12"},{"lineNumber":223,"author":{"gitId":"KnitidCeladon23"},"content":"* When editing tags, the existing tags of your client will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"HuaiZe"},"content":"* When editing names, you cannot use a name that is identical to that of an existing client.","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"KnitidCeladon23"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"HuaiZe"},"content":"You can remove all of your client’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"KnitidCeladon23"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":232,"author":{"gitId":"HuaiZe"},"content":"* `edit 1 p/91234567 e/johndoe@example.com`\u003cbr\u003eEdits the phone number and email address of the 1st client to be `91234567`","lastModifiedDate":"2021-04-12"},{"lineNumber":233,"author":{"gitId":"georgepwhuang"},"content":"  and `johndoe@example.com` respectively.","lastModifiedDate":"2021-04-11"},{"lineNumber":234,"author":{"gitId":"HuaiZe"},"content":"* `edit 2 n/Betsy Crower t/`\u003cbr\u003eEdits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-04-12"},{"lineNumber":235,"author":{"gitId":"HuaiZe"},"content":"* `edit 2 t/medical`\u003cbr\u003eEdits the insurance tag of the 2nd client to be `medical`.","lastModifiedDate":"2021-04-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"KnitidCeladon23"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"Shuyang0"},"content":"You can delete a specific client from Link.me.","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Shuyang0"},"content":"* Deletes the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":248,"author":{"gitId":"HuaiZe"},"content":"* `list` followed by `delete 2` deletes the 2nd client in Link.me.","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"KnitidCeladon23"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2021-03-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"Shuyang0"},"content":"### Clearing all clients : `clear`","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"Shuyang0"},"content":"You can remove all clients from Link.me.","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"Shuyang0"},"content":"Format: `clear`","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"Shuyang0"},"content":"### Adding or removing insurance plans of a client : `plan`","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"HuaiZe"},"content":"#### Adding an insurance plan","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"Shuyang0"},"content":"You can add a new insurance plan to an existing client.","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"HuaiZe"},"content":"Format: `plan INDEX i/PLAN_NAME $PREMIUM`","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"Shuyang0"},"content":"* Adds the insurance plan to the client specified at `INDEX`. `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":265,"author":{"gitId":"HuaiZe"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"HuaiZe"},"content":"* `PLAN_NAME` refers to the name of the insurance plan.","lastModifiedDate":"2021-04-02"},{"lineNumber":267,"author":{"gitId":"HuaiZe"},"content":"* `PREMIUM` refers to the yearly premium amount that the client pays for this plan.","lastModifiedDate":"2021-04-02"},{"lineNumber":268,"author":{"gitId":"HuaiZe"},"content":"* `PREMIUM` **must be a positive amount with up to 2 decimal places**.","lastModifiedDate":"2021-04-14"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"HuaiZe"},"content":"Example:","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"HuaiZe"},"content":"* `plan 3 i/Protecc $4000`\u003cbr\u003eAdds a new insurance plan Protecc with a yearly premium amount of $4000 to the 3rd client.","lastModifiedDate":"2021-04-14"},{"lineNumber":273,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"HuaiZe"},"content":"#### Removing an insurance plan","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"Shuyang0"},"content":"You can remove an existing insurance plan from a client.","lastModifiedDate":"2021-03-29"},{"lineNumber":277,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":278,"author":{"gitId":"HuaiZe"},"content":"Format: `plan INDEX c/PLAN_INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":279,"author":{"gitId":"Shuyang0"},"content":"* Removes the plan specified by `PLAN_INDEX` from the client specified at `INDEX`.","lastModifiedDate":"2021-04-12"},{"lineNumber":280,"author":{"gitId":"Shuyang0"},"content":"* `INDEX` refers to the index number shown in the displayed client list, while `PLAN_INDEX` refers to the index number shown in the list of insurance plans for that client.","lastModifiedDate":"2021-04-12"},{"lineNumber":281,"author":{"gitId":"Shuyang0"},"content":"* Both `INDEX` and `PLAN_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-12"},{"lineNumber":282,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":283,"author":{"gitId":"HuaiZe"},"content":"Example:","lastModifiedDate":"2021-03-29"},{"lineNumber":284,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":285,"author":{"gitId":"HuaiZe"},"content":"* `plan 2 c/3` Removes the 3rd insurance plan of the 2nd client in the displayed client list.","lastModifiedDate":"2021-04-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"Shuyang0"},"content":"### Recording, clearing or viewing notes : `note`","lastModifiedDate":"2021-03-29"},{"lineNumber":288,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":289,"author":{"gitId":"Shuyang0"},"content":"#### Recording a note","lastModifiedDate":"2021-03-29"},{"lineNumber":290,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":291,"author":{"gitId":"Shuyang0"},"content":"You can record a note for a specific client.","lastModifiedDate":"2021-03-29"},{"lineNumber":292,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":293,"author":{"gitId":"Shuyang0"},"content":"Format: `note INDEX r/NOTE`","lastModifiedDate":"2021-03-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":295,"author":{"gitId":"Shuyang0"},"content":"* Adds the provided `NOTE` to the client specified at `INDEX`. `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":296,"author":{"gitId":"Shuyang0"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"Shuyang0"},"content":"* `NOTE` should not be empty.","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":299,"author":{"gitId":"Shuyang0"},"content":"Example:","lastModifiedDate":"2021-03-29"},{"lineNumber":300,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":301,"author":{"gitId":"Shuyang0"},"content":"* `note 3 r/Wants to upgrade insurance coverage` adds the note \"Wants to upgrade insurance coverage\" to the 3rd client.","lastModifiedDate":"2021-03-29"},{"lineNumber":302,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":303,"author":{"gitId":"Shuyang0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":304,"author":{"gitId":"Shuyang0"},"content":":bulb: **Tip:** New notes will not replace old notes. Instead, they will be added to the existing list of notes.","lastModifiedDate":"2021-04-12"},{"lineNumber":305,"author":{"gitId":"Shuyang0"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":306,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":307,"author":{"gitId":"Shuyang0"},"content":"#### Viewing notes","lastModifiedDate":"2021-04-12"},{"lineNumber":308,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":309,"author":{"gitId":"Shuyang0"},"content":"You can view all existing notes for a specific client. Notes will be displayed in a popup box, with each note listed as","lastModifiedDate":"2021-04-12"},{"lineNumber":310,"author":{"gitId":"Shuyang0"},"content":"a bullet point.","lastModifiedDate":"2021-04-12"},{"lineNumber":311,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":312,"author":{"gitId":"Shuyang0"},"content":"![note message](images/noteMessage.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":313,"author":{"gitId":"Shuyang0"},"content":"Format: `note INDEX v/`","lastModifiedDate":"2021-04-12"},{"lineNumber":314,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":315,"author":{"gitId":"Shuyang0"},"content":"* View notes from the client specified at `INDEX`. `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":316,"author":{"gitId":"Shuyang0"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-01"},{"lineNumber":317,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":318,"author":{"gitId":"Shuyang0"},"content":"Example:","lastModifiedDate":"2021-03-29"},{"lineNumber":319,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":320,"author":{"gitId":"Shuyang0"},"content":"* `note 4 v/` generates a popup box displaying the notes recorded for the 4th client.","lastModifiedDate":"2021-04-12"},{"lineNumber":321,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":322,"author":{"gitId":"Shuyang0"},"content":"#### Clearing all notes","lastModifiedDate":"2021-04-12"},{"lineNumber":323,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":324,"author":{"gitId":"Shuyang0"},"content":"You can clear all existing notes from a specific client.","lastModifiedDate":"2021-04-12"},{"lineNumber":325,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":326,"author":{"gitId":"Shuyang0"},"content":"Format: `note INDEX c/`","lastModifiedDate":"2021-04-12"},{"lineNumber":327,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":328,"author":{"gitId":"Shuyang0"},"content":"* Clears all notes from the client specified at `INDEX`. `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":329,"author":{"gitId":"Shuyang0"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-01"},{"lineNumber":330,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":331,"author":{"gitId":"Shuyang0"},"content":"Example:","lastModifiedDate":"2021-03-29"},{"lineNumber":332,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":333,"author":{"gitId":"Shuyang0"},"content":"* `note 4 c/` clears all notes from the 4th client.","lastModifiedDate":"2021-04-12"},{"lineNumber":334,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":335,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":336,"author":{"gitId":"georgepwhuang"},"content":"### Arranging Meetings with Clients","lastModifiedDate":"2021-04-01"},{"lineNumber":337,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":338,"author":{"gitId":"georgepwhuang"},"content":"#### Scheduling a meeting : `schedule`","lastModifiedDate":"2021-04-01"},{"lineNumber":339,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":340,"author":{"gitId":"Shuyang0"},"content":"You can schedule a meeting with a specific client in Link.me.","lastModifiedDate":"2021-03-29"},{"lineNumber":341,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":342,"author":{"gitId":"georgepwhuang"},"content":"Format: `schedule INDEX m/DESCRIPTION @ DATE_TIME`","lastModifiedDate":"2021-03-15"},{"lineNumber":343,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":344,"author":{"gitId":"Shuyang0"},"content":"* Adds the client at the specified `INDEX`, the `DATE_TIME` and the `DESCRIPTION` of the meeting to the scheduled meetings list.","lastModifiedDate":"2021-04-12"},{"lineNumber":345,"author":{"gitId":"Shuyang0"},"content":"* `INDEX` refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-04-12"},{"lineNumber":346,"author":{"gitId":"Shuyang0"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-12"},{"lineNumber":347,"author":{"gitId":"Shuyang0"},"content":"* `DATE_TIME` refers to the date and time of the scheduled meeting.","lastModifiedDate":"2021-04-12"},{"lineNumber":348,"author":{"gitId":"Shuyang0"},"content":"* `DATE_TIME` should be provided in the specific datetime format `YYYY-MM-DD HH:MM`.","lastModifiedDate":"2021-04-12"},{"lineNumber":349,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":350,"author":{"gitId":"Shuyang0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":351,"author":{"gitId":"HuaiZe"},"content":":bulb: **Tip:** Scheduling a new meeting will replace any existing meeting with that client.","lastModifiedDate":"2021-04-12"},{"lineNumber":352,"author":{"gitId":"Shuyang0"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":353,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":354,"author":{"gitId":"georgepwhuang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":355,"author":{"gitId":"georgepwhuang"},"content":":bulb: **Tip:** Meetings with clashes will not be scheduled, but Link.me only detects clashes when the scheduled time ","lastModifiedDate":"2021-04-12"},{"lineNumber":356,"author":{"gitId":"HuaiZe"},"content":"is exactly the same. Even with a difference of 1 minute, Link.me will schedule a new meeting. This is to give you","lastModifiedDate":"2021-04-12"},{"lineNumber":357,"author":{"gitId":"HuaiZe"},"content":" the largest flexibility when using Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":358,"author":{"gitId":"georgepwhuang"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":359,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":360,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-15"},{"lineNumber":361,"author":{"gitId":"georgepwhuang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-15"},{"lineNumber":362,"author":{"gitId":"georgepwhuang"},"content":":bulb: **Tip:** You cannot schedule meetings in the past.","lastModifiedDate":"2021-04-15"},{"lineNumber":363,"author":{"gitId":"georgepwhuang"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-15"},{"lineNumber":364,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-15"},{"lineNumber":365,"author":{"gitId":"KnitidCeladon23"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":366,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":367,"author":{"gitId":"georgepwhuang"},"content":"* `schedule 2 m/Insurance Plan @ 2023-10-28 14:30` schedules a meeting with description \"Insurance Plan\" with the 2nd client","lastModifiedDate":"2021-04-15"},{"lineNumber":368,"author":{"gitId":"georgepwhuang"},"content":"  on 28th October 2023 2:30 pm.","lastModifiedDate":"2021-04-15"},{"lineNumber":369,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":370,"author":{"gitId":"georgepwhuang"},"content":"#### Removing a meeting : `unschedule`","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":372,"author":{"gitId":"georgepwhuang"},"content":"Removing meetings comes in three flavors:","lastModifiedDate":"2021-04-01"},{"lineNumber":373,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":374,"author":{"gitId":"Shuyang0"},"content":"* Format: `unschedule INDEX`","lastModifiedDate":"2021-04-12"},{"lineNumber":375,"author":{"gitId":"Shuyang0"},"content":"  * Removes the meeting in the meeting list at `INDEX`. `INDEX` refers to the index number shown in the displayed meeting list.","lastModifiedDate":"2021-04-12"},{"lineNumber":376,"author":{"gitId":"georgepwhuang"},"content":"  * The `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":377,"author":{"gitId":"Shuyang0"},"content":"* Format: `unschedule all`","lastModifiedDate":"2021-04-12"},{"lineNumber":378,"author":{"gitId":"Shuyang0"},"content":"  * Removes all meetings in the meeting list.","lastModifiedDate":"2021-04-12"},{"lineNumber":379,"author":{"gitId":"Shuyang0"},"content":"* Format: `unschedule expired`","lastModifiedDate":"2021-04-12"},{"lineNumber":380,"author":{"gitId":"Shuyang0"},"content":"  * Removes all expired meetings in the meeting list, i.e. meetings before the present date and time.","lastModifiedDate":"2021-04-12"},{"lineNumber":381,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":382,"author":{"gitId":"georgepwhuang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-15"},{"lineNumber":383,"author":{"gitId":"georgepwhuang"},"content":":bulb: **Tip:** All expired meetings have to be manually unscheduled. This is so that you can refer old meetings when scheduling the next.","lastModifiedDate":"2021-04-15"},{"lineNumber":384,"author":{"gitId":"georgepwhuang"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-15"},{"lineNumber":385,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":386,"author":{"gitId":"georgepwhuang"},"content":"Example:","lastModifiedDate":"2021-03-15"},{"lineNumber":387,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":388,"author":{"gitId":"Shuyang0"},"content":"* `unschedule 2` removes the 2nd meeting on the meeting list.","lastModifiedDate":"2021-04-12"},{"lineNumber":389,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":390,"author":{"gitId":"Shuyang0"},"content":"### Searching for clients","lastModifiedDate":"2021-03-29"},{"lineNumber":391,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":392,"author":{"gitId":"Shuyang0"},"content":"#### Finding clients by name: `find`","lastModifiedDate":"2021-03-29"},{"lineNumber":393,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":394,"author":{"gitId":"KnitidCeladon23"},"content":"You can find clients by simply entering their name. If you wish to filter clients by specific attributes","lastModifiedDate":"2021-04-12"},{"lineNumber":395,"author":{"gitId":"KnitidCeladon23"},"content":"such as gender, age, insurance plan name, etc, refer to [Filtering clients by attributes](#filtering-clients-by-attributes--filter) below.","lastModifiedDate":"2021-04-12"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":399,"author":{"gitId":"Shuyang0"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-03-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-03-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-03-29"},{"lineNumber":402,"author":{"gitId":"Shuyang0"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`","lastModifiedDate":"2021-04-12"},{"lineNumber":403,"author":{"gitId":"georgepwhuang"},"content":"  , `Bo Yang`","lastModifiedDate":"2021-04-11"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":405,"author":{"gitId":"georgepwhuang"},"content":"Examples: (Please refer to the sample data for this.)","lastModifiedDate":"2021-04-15"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":407,"author":{"gitId":"georgepwhuang"},"content":"* `find John` returns `John Doe`","lastModifiedDate":"2021-04-15"},{"lineNumber":408,"author":{"gitId":"HuaiZe"},"content":"* `find Alex Jeff` returns `Alex Yeoh`, `Jeff Liu`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":409,"author":{"gitId":"georgepwhuang"},"content":"  ![result for \u0027find alex jeff\u0027](images/findAlexJeffResult.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":411,"author":{"gitId":"Shuyang0"},"content":"#### Filtering clients by attributes : `filter`","lastModifiedDate":"2021-04-12"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":413,"author":{"gitId":"HuaiZe"},"content":"You can filter clients by their address, gender, tags, age or insurance plan name.","lastModifiedDate":"2021-04-12"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":415,"author":{"gitId":"Shuyang0"},"content":"Format: `filter PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]...`","lastModifiedDate":"2021-04-12"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":417,"author":{"gitId":"Shuyang0"},"content":"Supported `PREFIX/KEYWORD` pairs:","lastModifiedDate":"2021-04-12"},{"lineNumber":418,"author":{"gitId":"Shuyang0"},"content":"* address: `a/ADDRESS`","lastModifiedDate":"2021-03-29"},{"lineNumber":419,"author":{"gitId":"KnitidCeladon23"},"content":"* gender: `g/GENDER` (`GENDER` should be either `M`/`Male`, `F`/`Female` or `N`/`Non-binary`)","lastModifiedDate":"2021-04-12"},{"lineNumber":420,"author":{"gitId":"Shuyang0"},"content":"* tag: `t/TAG`","lastModifiedDate":"2021-03-29"},{"lineNumber":421,"author":{"gitId":"KnitidCeladon23"},"content":"* age: `age/[AGE]` or `age/[AGE_LOWER_BOUND]-[AGE_HIGHER_BOUND]` (Age should be a non-negative integer)","lastModifiedDate":"2021-04-12"},{"lineNumber":422,"author":{"gitId":"KnitidCeladon23"},"content":"* insurance plan name: `i/PLAN_NAME`","lastModifiedDate":"2021-04-02"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":424,"author":{"gitId":"KnitidCeladon23"},"content":"Note:","lastModifiedDate":"2021-04-16"},{"lineNumber":425,"author":{"gitId":"Shuyang0"},"content":"* The search is case-insensitive. e.g. for gender, `male` will match `Male`","lastModifiedDate":"2021-04-12"},{"lineNumber":426,"author":{"gitId":"KnitidCeladon23"},"content":"* Clients with attributes matching all of the keywords will be returned (i.e. `AND` search). e.g.","lastModifiedDate":"2021-04-16"},{"lineNumber":427,"author":{"gitId":"KnitidCeladon23"},"content":"  `g/F age/40` will return all clients that are female AND are aged 40.","lastModifiedDate":"2021-04-16"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":429,"author":{"gitId":"Shuyang0"},"content":"Example:","lastModifiedDate":"2021-04-12"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":431,"author":{"gitId":"Shuyang0"},"content":"* `filter a/Clementi g/M t/medical i/Protecc age/23-30` returns:","lastModifiedDate":"2021-04-12"},{"lineNumber":432,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":433,"author":{"gitId":"KnitidCeladon23"},"content":"  * clients who have \"Clementi\" in their address, and","lastModifiedDate":"2021-04-12"},{"lineNumber":434,"author":{"gitId":"KnitidCeladon23"},"content":"  * clients who are Male, and","lastModifiedDate":"2021-04-12"},{"lineNumber":435,"author":{"gitId":"KnitidCeladon23"},"content":"  * clients with the \"medical\" tag, and","lastModifiedDate":"2021-04-12"},{"lineNumber":436,"author":{"gitId":"KnitidCeladon23"},"content":"  * clients with the insurance plan \"Protecc\", and","lastModifiedDate":"2021-04-12"},{"lineNumber":437,"author":{"gitId":"KnitidCeladon23"},"content":"  * clients aged between 23 and 30 years old, inclusive","lastModifiedDate":"2021-04-02"},{"lineNumber":438,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":439,"author":{"gitId":"Shuyang0"},"content":"### Displaying notifications : `notif`","lastModifiedDate":"2021-03-29"},{"lineNumber":440,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":441,"author":{"gitId":"Shuyang0"},"content":"You can view a notification window containing:","lastModifiedDate":"2021-04-12"},{"lineNumber":442,"author":{"gitId":"Shuyang0"},"content":"* All meetings occurring today, arranged in order of time.","lastModifiedDate":"2021-03-29"},{"lineNumber":443,"author":{"gitId":"georgepwhuang"},"content":"* All client birthdays within the next two weeks, arranged in order of time.","lastModifiedDate":"2021-04-01"},{"lineNumber":444,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":445,"author":{"gitId":"georgepwhuang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-15"},{"lineNumber":446,"author":{"gitId":"georgepwhuang"},"content":":bulb: **Tip:** The timeframes for notifications were chosen to give you ample time to prepare for upcoming meetings, or prepare gifts for upcoming client birthdays.","lastModifiedDate":"2021-04-15"},{"lineNumber":447,"author":{"gitId":"georgepwhuang"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-15"},{"lineNumber":448,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":449,"author":{"gitId":"Shuyang0"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":450,"author":{"gitId":"Shuyang0"},"content":":bulb: **Tip:** This notification window is also shown when starting up Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":451,"author":{"gitId":"Shuyang0"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":452,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":453,"author":{"gitId":"Shuyang0"},"content":"![notif message](images/notifMessage.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":454,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":455,"author":{"gitId":"Shuyang0"},"content":"Format: `notif`","lastModifiedDate":"2021-04-12"},{"lineNumber":456,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":457,"author":{"gitId":"Shuyang0"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-03-29"},{"lineNumber":458,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":459,"author":{"gitId":"KnitidCeladon23"},"content":"You can view a message with a link to the User Guide (this page).","lastModifiedDate":"2021-04-16"},{"lineNumber":460,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":461,"author":{"gitId":"Shuyang0"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":462,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":463,"author":{"gitId":"Shuyang0"},"content":"Format: `help`","lastModifiedDate":"2021-04-12"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-03-28"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":467,"author":{"gitId":"Shuyang0"},"content":"You can exit Link.me.","lastModifiedDate":"2021-03-29"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":469,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-03-28"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"georgepwhuang"},"content":"Link.me data is saved in the hard disk automatically after any command that modifies existing data. There is no need to","lastModifiedDate":"2021-04-11"},{"lineNumber":474,"author":{"gitId":"georgepwhuang"},"content":"save manually.","lastModifiedDate":"2021-04-11"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"Shuyang0"},"content":"#### Editing the data file","lastModifiedDate":"2021-03-29"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":478,"author":{"gitId":"georgepwhuang"},"content":"Link.me data is saved as a JSON file `[JAR file location]/data/linkme.json`. We encourage only advanced users to edit","lastModifiedDate":"2021-04-11"},{"lineNumber":479,"author":{"gitId":"georgepwhuang"},"content":"the JSON file directly. The Link.me team does not take any responsibility in data loss or startup failures following","lastModifiedDate":"2021-04-11"},{"lineNumber":480,"author":{"gitId":"georgepwhuang"},"content":"invalid inputs.","lastModifiedDate":"2021-04-11"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":482,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":483,"author":{"gitId":"HuaiZe"},"content":"If your changes to the data file make its format invalid, Link.me will try to discard all data and start with an empty ","lastModifiedDate":"2021-04-12"},{"lineNumber":484,"author":{"gitId":"Shuyang0"},"content":"data file at the next run. However, if the damage is too excessive, Link.me may be unable to start up.","lastModifiedDate":"2021-04-12"},{"lineNumber":485,"author":{"gitId":"georgepwhuang"},"content":"In the case that this happens, please manually delete the data file in order to start the app successfully.","lastModifiedDate":"2021-04-15"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":488,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"HuaiZe"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":493,"author":{"gitId":"georgepwhuang"},"content":"**A**: Install Link.me in the other computer and overwrite the empty data file it creates with the data file in your","lastModifiedDate":"2021-04-11"},{"lineNumber":494,"author":{"gitId":"georgepwhuang"},"content":"current Link.me home folder.","lastModifiedDate":"2021-04-11"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"Shuyang0"},"content":"**Q**: What operating systems can I install Link.me on?\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":497,"author":{"gitId":"Shuyang0"},"content":"**A**: You can install Link.me on most modern desktop operating systems, including Linux, MacOS and Windows.","lastModifiedDate":"2021-04-12"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":499,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"georgepwhuang":76,"Shuyang0":195,"KnitidCeladon23":42,"HuaiZe":62,"-":124}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Shuyang0"},"content":"    content: \"Link.me\";","lastModifiedDate":"2021-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Shuyang0":1,"-":294}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e\"1\" AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBookParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser .left.|\u003e Parser","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"LogicManager ..\u003e Model","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"LogicManager ..\u003e Storage","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":2,"-":67}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Package Person {","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"Class Birthdate","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"Class Gender","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"Class Note","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"Package Meeting {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"Class UniqueMeetingList","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"Class Entry","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"Class Meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"Package Insurance {","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"Class InsurancePlan","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"Package Note {","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"Class Note","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"AddressBook *-down-\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"UniquePersonList o-down-\u003e \"*\" Person","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"ModelManager --down---\u003e\"~* filtered list\" Person","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"Person *-down--\u003e Name","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"Person *-down--\u003e Phone","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"Person *-down--\u003e Email","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"Person *-down--\u003e Address","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"Person *-down-\u003e Gender","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"Person *-down-\u003e Birthdate","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"Person *-down-\u003e \"*\" Note","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"Person *-down-\u003e \"*\" Tag","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"Person *-left-\u003e \"0...1\" Meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"Person *-down-\u003e \"*\" InsurancePlan","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"AddressBook *-down--\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"UniqueMeetingList o-down-\u003e \"*\" Entry","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"Entry -left-\u003e \"key\" Meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"Entry -right\u003e \"value\" Person","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"Name -[hidden]right- Phone","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"Phone -[hidden]right- Address","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"Address -[hidden]right- Email","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"InsurancePlan -[hidden]up- Meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"Note -[hidden]down- InsurancePlan","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"Tag -[hidden]down- InsurancePlan","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"Note -[hidden]left- Tag","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"Tag -[hidden]up- Meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"Note -[hidden]up- Meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"UniqueMeetingList -[hidden]right- UniquePersonList","lastModifiedDate":"2021-04-12"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"Entry -[hidden]up- UniquePersonList","lastModifiedDate":"2021-04-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Shuyang0":3,"georgepwhuang":43,"HuaiZe":4,"-":46}},{"path":"docs/diagrams/NoteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"!include style.puml","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"participant \":NoteCommandParser\" as NoteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"participant \"n:NoteCommand\" as NoteCommand LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"[-\u003e LogicManager : execute(\"note 1 ...\")","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"activate LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"note 1 ...\")","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"activate AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"create NoteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"AddressBookParser -\u003e NoteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"activate NoteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"NoteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"deactivate NoteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"AddressBookParser -\u003e NoteCommandParser : parse(\"1 ...\")","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"activate NoteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"create NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"NoteCommandParser -\u003e NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"activate NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"NoteCommand --\u003e NoteCommandParser : n","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"deactivate NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"NoteCommandParser --\u003e AddressBookParser : n","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"deactivate NoteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"NoteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"destroy NoteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"AddressBookParser --\u003e LogicManager : n","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"LogicManager -\u003e NoteCommand : execute()","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"activate NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"ref over NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"execute NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"end","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"NoteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"deactivate NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"Shuyang0":56}},{"path":"docs/diagrams/NoteSequenceDiagramRef.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"!include style.puml","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"mainframe sd execute NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"participant \":NoteCommand\" as NoteCommand LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"participant \"p:Person\" as P MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"participant \"q:Person\" as Q MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"alt prefix is v/","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"    create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    NoteCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"    activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"    CommandResult --\u003e NoteCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"else prefix is r/","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"    NoteCommand -\u003e P : addNote(note)","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"    activate P","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"    create Q","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"    P -\u003e Q : Person()","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"    activate Q","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"    Q --\u003e P : q","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"    deactivate Q","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"    P --\u003e NoteCommand : q","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"    deactivate P","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"    NoteCommand -\u003e ModelManager : setPerson(p, q)","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    activate ModelManager","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"    ModelManager --\u003e NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"    deactivate ModelManager","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"    create CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"    NoteCommand -\u003e CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"    activate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"    CommandResult --\u003e NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"else prefix is c/","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"    NoteCommand -\u003e P : clearNotes()","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"        activate P","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"        create Q","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"        P -\u003e Q : Person()","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"        activate Q","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"        Q --\u003e P : q","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"Shuyang0"},"content":"        deactivate Q","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"Shuyang0"},"content":"        P --\u003e NoteCommand : q","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"Shuyang0"},"content":"        deactivate P","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"Shuyang0"},"content":"        NoteCommand -\u003e ModelManager : setPerson(p, q)","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"Shuyang0"},"content":"        activate ModelManager","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"Shuyang0"},"content":"        ModelManager --\u003e NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"Shuyang0"},"content":"        deactivate ModelManager","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"Shuyang0"},"content":"        create CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"Shuyang0"},"content":"        NoteCommand -\u003e CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"Shuyang0"},"content":"        activate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"Shuyang0"},"content":"        CommandResult --\u003e NoteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"Shuyang0"},"content":"        deactivate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"Shuyang0"},"content":"end","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"Shuyang0"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"Shuyang0":89}},{"path":"docs/diagrams/NotifSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"@startuml","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"!include style.puml","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"participant \":NotifWindow\" as NotifWindow UI_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"end box","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"participant \"n:NotifCommand\" as NotifCommand LOGIC_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"end box","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"participant \"Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"end box","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    [-\u003e MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"    activate MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    create NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow -\u003e NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    activate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"    NotifWindow --\u003e MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    deactivate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow --\u003e[","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    deactivate MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":" [-\u003e MainWindow : \"notif\"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    activate MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow -\u003e LogicManager : execute(\"notif\")","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"    activate LogicManager","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    LogicManager -\u003e AddressBookParser : parseCommand(\"notif\")","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"    activate AddressBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"    create NotifCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"    AddressBookParser -\u003e NotifCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"    activate NotifCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"    NotifCommand  --\u003e AddressBookParser : n","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    deactivate NotifCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"    AddressBookParser --\u003e LogicManager : n","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    deactivate AddressBookParser","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"    LogicManager -\u003e NotifCommand : execute()","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    activate NotifCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"    create CommandResult","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"    NotifCommand -\u003e CommandResult","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"    activate CommandResult","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"    CommandResult --\u003e NotifCommand : isNotif","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"    CommandResult -[hidden]-\u003e MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"    destroy CommandResult","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"    NotifCommand --\u003e LogicManager : isNotif","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"    deactivate NotifCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"    NotifCommand -[hidden]-\u003e MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"    destroy NotifCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"    LogicManager --\u003e MainWindow : isNotif","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"    deactivate LogicManager","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow -\u003e MainWindow : handleNotif","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"    activate MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow -\u003e LogicManager : getNotifications","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"    activate LogicManager","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"    LogicManager -\u003e Model : getNotifications","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"    activate Model","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"    Model --\u003e LogicManager : notifications","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"    deactivate Model","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"    LogicManager --\u003e MainWindow : notifications","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"    deactivate LogicManager","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow -\u003e NotifWindow : notifications","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"    activate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"    NotifWindow -\u003e NotifWindow : setmessage","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"    activate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"    NotifWindow --\u003e NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"    deactivate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"    NotifWindow --\u003e MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"    deactivate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow -\u003e NotifWindow : show","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"    activate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"    NotifWindow --\u003e MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"    deactivate NotifWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow --\u003e MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"    deactivate MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"    MainWindow --\u003e[","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"    deactivate MainWindow","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"@enduml","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":109}},{"path":"docs/diagrams/PlanSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"!include style.puml","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"participant \":PlanCommandParser\" as PlanCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"participant \"p:PlanCommand\" as PlanCommand LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"end box","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"[-\u003e LogicManager : execute(\"plan 1 ...\")","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"activate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"plan 1 ...\")","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"activate AddressBookParser","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"create PlanCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"AddressBookParser -\u003e PlanCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"activate PlanCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"PlanCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"deactivate PlanCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"AddressBookParser -\u003e PlanCommandParser : parse(\"1 ...\")","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"activate PlanCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"create PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"PlanCommandParser -\u003e PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"activate PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"PlanCommand --\u003e PlanCommandParser : p","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"deactivate PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"PlanCommandParser --\u003e AddressBookParser : p","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"deactivate PlanCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"PlanCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"destroy PlanCommandParser","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"AddressBookParser --\u003e LogicManager : p","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"LogicManager -\u003e PlanCommand : execute()","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"activate PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"PlanCommand -\u003e Model : setPerson(original, updated)","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"activate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"Model --\u003e PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"deactivate Model","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"create CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"PlanCommand -\u003e CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"activate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"CommandResult --\u003e PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"PlanCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"deactivate PlanCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"HuaiZe":69}},{"path":"docs/diagrams/ScheduleSequenceDiagramLogic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"participant \":ScheduleCommandParser\" as ScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"participant \"s:ScheduleCommand\" as ScheduleCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"[-\u003e LogicManager : execute(\"schedule 1 ...\")","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"schedule 1 ...\")","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"create ScheduleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"AddressBookParser -\u003e ScheduleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"AddressBookParser -\u003e ScheduleCommandParser : parse(\"1 ...\")","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"create ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommandParser -\u003e ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"activate ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommand --\u003e ScheduleCommandParser : s","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"destroy ScheduleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"LogicManager -\u003e ScheduleCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"activate ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommand -\u003e Model : SchedulePerson(1 ...)","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"create CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommand -\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"activate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"CommandResult --\u003e ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"ScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":69}},{"path":"docs/diagrams/ScheduleSequenceDiagramModel.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"participant \":Logic\" as Logic LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"participant \":UniqueMeetingList\" as UniqueMeetingList MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"Logic -\u003e ModelManager : check(updated)","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    activate ModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    ModelManager --\u003e Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    deactivate ModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"opt no clash","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    Logic -\u003e ModelManager : setPerson(original, updated)","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    activate ModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    ModelManager -\u003e AddressBook : setPerson(original, updated)","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    activate AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        AddressBook -\u003e UniquePersonList : setPerson(original, updated)","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        activate UniquePersonList","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        UniquePersonList --\u003e AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"        deactivate UniquePersonList","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"        AddressBook -\u003e UniqueMeetingList : setPerson(original, updated)","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"                activate UniqueMeetingList","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"                UniqueMeetingList --\u003e AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"                deactivate UniqueMeetingList","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"    AddressBook --\u003e ModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"    deactivate AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    ModelManager --\u003e Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"    deactivate ModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    Logic -\u003e ModelManager : updateFilteredPersonList","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    activate ModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    ModelManager --\u003e Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"    deactivate ModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"end","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"deactivate Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":58}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"Class JsonAdaptedPlan","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"Class JsonAdaptedNote","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"StorageManager o--\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Storage -|\u003e UserPrefsStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Storage -|\u003e AddressBookStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .left.|\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .down.\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook .right.\u003e JsonAdaptedPerson","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"JsonAdaptedPerson .down.\u003e JsonAdaptedTag","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"JsonAdaptedPerson .down.\u003e JsonAdaptedPlan","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"JsonAdaptedPerson .down.\u003e JsonAdaptedNote","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"JsonAdaptedTag -[hidden]left- JsonAdaptedNote","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"JsonAdaptedNote -[hidden]left- JsonAdaptedPlan","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":13,"-":26}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"Class NotesWindow","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"Class NotifWindow","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"Class MeetingListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"Class MeetingCard","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"Class Alert","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"UiManager .left..|\u003e Ui","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"UiManager -[hidden]down-\u003e MainWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"MainWindow *-down-\u003e MeetingListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"MainWindow -left-\u003e NotesWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"MainWindow -right-\u003e NotifWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"MeetingListPanel -down-\u003e MeetingCard","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"PersonCard ---|\u003e UiPart","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"MeetingListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"MeetingCard ---|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"NotesWindow  --|\u003e Alert","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"NotifWindow --|\u003e Alert","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"MainWindow -|\u003e UiPart","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"PersonCard ..down..\u003e Model","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"MeetingCard ..down..\u003e Model","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"UiManager .up.\u003e Logic","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"MainWindow .up.\u003e Logic","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"MeetingCard -[hidden]left- PersonCard","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"MeetingListPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"PersonListPanel -[hidden]left- CommandBox","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"StatusBarFooter -[hidden]left- HelpWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"NotesWindow -[hidden]up- NotifWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"MeetingListPanel -[hidden]up- NotesWindow","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"NotesWindow -[hidden]right- Alert","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"PersonCard -[hidden]down- Model","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":28,"Shuyang0":5,"-":51}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":1,"-":19}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":1,"-":21}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":1,"-":19}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":1,"-":19}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":1,"-":19}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab3:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"georgepwhuang":1,"-":20}},{"path":"docs/diagrams/UnscheduleActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"start","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":":User Executes Unschedule Command;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"if () then([unschedule index])","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"    :Find Meeting on MeetingList;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"    :Remove Meeting;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"elseif () then ([unschedule all])","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"while () is ([has next person])","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    :Find Meeting on MeetingList;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"    :Remove Meeting;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"endwhile","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"elseif () then([unschedule expired])","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"while () is ([has next person])","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    :Find Meeting on MeetingList;","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    if () then ([has expired])","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"        :Remove Meeting;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    endif","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"endwhile","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"else ([else])","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    :Throw Exception;","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"endif","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"stop","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"georgepwhuang":27}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"title: Link.me","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W12-3/tp/actions)","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W12-3/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2021S2-CS2103T-W12-3/tp)","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"**Link.me is a desktop application built to help insurance agents manage their clients.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"* If you are interested in using Link.me, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"* If you are interested in the development of Link.me, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"georgepwhuang":4,"HuaiZe":2,"-":13}},{"path":"docs/team/georgepwhuang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"layout: page","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"title: Huang Po-Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"## Project: Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"### Project Overview","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"Link.me is a desktop client managing book application aimed for insurance agents to manage their contacts. The basic","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"Link.me codebase is adapted from AddressBook Level 3, an address book app created under the Seedu Initiative. The user","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 14 kLoC.","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"### Contribution Summary","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"* **New Feature 1**: Added the ability to schedule meeting.","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"  [Commit](https://github.com/AY2021S2-CS2103T-W12-3/tp/commit/dd8f4186422b19d0a37b66e36c7deeeb8ac54068),","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"  [PR](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/25)","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    * What it does: allows user to schedule meetings with specific clients.","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    * Justification: This feature improves the product significantly because it now includes an entirely new aspect --","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"      meeting scheduling into the application.","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    * Highlights: This command required a separate list to store meetings. Allowing list displays for the person and the","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"      meeting in order of time was mildly tricky. A separate UI component also had to be made and maintained.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"* **New Feature 2**: Added the ability to unschedule meeting.","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"  [Commit](https://github.com/AY2021S2-CS2103T-W12-3/tp/commit/d01310146e6c840a8ef09c154a99b4218eabf071),","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"  [PR](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/57)","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    * What it does: allows user to unschedule meetings with specific clients.","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"    * Justification: This feature is the counterpart of the previous feature.","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    * Highlights: This feature needs to edit the meeting list set up on the previous feature, allow parsing for both","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"      index numbers and other particular options, and execute different operations depending on the input option.","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"* **New Feature 3**: Added a notification function.","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"  [Commit](https://github.com/AY2021S2-CS2103T-W12-3/tp/commit/8e30ab16f842111aee627c2cafe970eabc602df8),","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"  [PR](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/40)","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    * What it does: reminds the user of upcoming birthdays and meetings.","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"    * Justification: This feature allows users to be reminds of important events without having to go through the entire","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"      list of information.","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"    * Highlights: This feature required a separate window to be displayed, which had to be able to contain all","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"      the information and notices, which can amount to a lot when there are a large number of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"    * Did most of the GUI changes from AB-3 to the current version, including integrating of the meeting list, arranged","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"      the current layout, and other beautifications, including insurance plan tags.","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"* **Other code contributions**:","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    * Fully wrote and maintained JUnit tests for new features implemented on my part.","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    * Came up with the input syntax for combining multiple features into one command.","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"    * Drafted the OOP implementation framework for notification and notes windows.","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    * Created the GUI interface of the notification and notes windows.","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"* **Code contributed**:","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"  [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dgeorgepwhuang\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dgeorgepwhuang\u0026tabRepo\u003dAY2021S2-CS2103T-W12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"  ,","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"  [Pull requests](https://github.com/AY2021S2-CS2103T-W12-3/tp/pulls?q\u003dis%3Apr+author%3Ageorgepwhuang),","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"  [Commits](https://github.com/AY2021S2-CS2103T-W12-3/tp/commits?author\u003dgeorgepwhuang)","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"    * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"        * Added the layout introduction section.","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        * Drafted the functionality overview.","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"        * Added documentation for the features `schedule`, `unschedule`, and `notif`.","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"    * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"        * Added implementation details of the `schedule`, `unschedule` and `notif` feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        * Drafted multiple new UML diagrams and maintained the original UML diagrams.","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"        * Drafted three use cases: adding a person, editing a person, and filtering by tag.","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"        * Maintained documentation quality on the DG.","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"    * Other Documents:","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"        * Drafted [index.md](index.md).","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"        * Drafted [README.md](https://github.com/AY2021S2-CS2103T-W12-3/tp#readme).","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"* **Team Tasks**:","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"    * Came up with the meeting aspect of the application","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"    * Designed and created the product icon.","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"    * Maintained the issue tracker","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"    * Managed releases `v1.3` (1 release) on GitHub","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"* **Community**:","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"    * PRs reviewed (comments given in person or offline):","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"      [\\#12](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/12),","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"      [\\#21](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/21),","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"      [\\#26](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/26),","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"      [\\#37](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/37),","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"      [\\#38](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/38),","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"      [\\#47](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/47),","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"      [\\#52](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/52),","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"      [\\#61](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/61)","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"    * Contributed to forum discussions","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"      [\\#26](https://github.com/nus-cs2103-AY2021S2/forum/issues/26#issuecomment-764430687),","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"      [\\#55](https://github.com/nus-cs2103-AY2021S2/forum/issues/55#issuecomment-768124175),","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"      [\\#65](https://github.com/nus-cs2103-AY2021S2/forum/issues/65#issuecomment-769633356),","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"      [\\#106](https://github.com/nus-cs2103-AY2021S2/forum/issues/106#issuecomment-773179460),","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"      [\\#108](https://github.com/nus-cs2103-AY2021S2/forum/issues/108#issuecomment-773184636),","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"      [\\#145](https://github.com/nus-cs2103-AY2021S2/forum/issues/145#issuecomment-779881367)","lastModifiedDate":"2021-04-10"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"    * Reported potential bug in JavaFX [\\#267](https://github.com/nus-cs2103-AY2021S2/forum/issues/267)","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"    * Reported bugs and suggestions for other teams in the class (e.g.","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"      [\\#278](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/278),","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"      [\\#279](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/279),","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"      [\\#280](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/280),","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"      [\\#281](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/281),","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"      [\\#282](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/282),","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"      [\\#283](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/283),","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"      [\\#284](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/284)","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"georgepwhuang":103}},{"path":"docs/team/huaize.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"title: Koh Huai Ze\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"# Project: Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"## Project Overview","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"Link.me is a desktop application built for insurance agents to help them manage their clients. The basic","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"Link.me codebase is adapted from AddressBook Level 3, an address book app created under the Seedu Initiative. The user","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 14 kLoC.","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"## Summary of contributions","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"### Features","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"* **New Feature**: Added feature to add and remove insurance plans of clients","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"  [PR](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/63)","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"  * What it does: allows the user to add and remove insurance plans that contain a plan name and premium amount","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"  * Justification: This feature improves the product significantly because it is an important functionality for our specific target audience (insurance agents)","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"  * Highlights: Unlike most other commands, the `plan` command supports 2 functionalities: adding or removing insurance plans, depending on which prefix the user inputs","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"### Code contributed","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"[RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dhuaize\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dHuaiZe\u0026tabRepo\u003dAY2021S2-CS2103T-W12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"[Pull requests](https://github.com/AY2021S2-CS2103T-W12-3/tp/pulls?q\u003dis%3Apr+author%3AHuaiZe+)","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"### Project management","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"* Set up the GitHub team org and repo","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"* Helped to maintain issue tracker on Github","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"* Contributed to project notes document","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"* Create product demo for `v1.2` on project notes document","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"### Documentation:","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"* **User Guide:**","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"  * Added documentation for the `plan` feature: [\\#45](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/45)","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"  * Proofreading and general formatting: [\\#161](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/161)","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"  ","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"* **Developer Guide:**","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"  * Added implementation details of the `plan` feature: [\\#141](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/141)","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"  * Added design considerations for insurance plan premium: [\\#143](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/143)","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"  * Added 1 sequence diagram and updated 1 class diagram: [\\#153](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/153)","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"  ","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"* **Project Website:**","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"  * Updated project website: [\\#161](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/161)","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"  ","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"HuaiZe":49}},{"path":"docs/team/knitidceladon23.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KnitidCeladon23"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"title: Kenny\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"KnitidCeladon23"},"content":"## Project: Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"Link.me is a desktop client management application for insurance agents to manage their contacts. The basic","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"Link.me codebase is adapted from AddressBook Level 3, an address book app created under the Seedu Initiative. The user","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 14 kLoC.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"* **New Feature**: Added the ability to filter clients by attributes.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"    * What it does: allows the user to search for clients using a combination of attributes. The filtered list would include clients with at least one of their attributes matching the search keywords.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"    * Justification: This feature improves the product significantly because a user will be able to find specific clients with the given attributes, making follow-up actions/commands easier.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"    * Highlights: This feature has a similar nature to the find feature in terms of implementation, however the implementation of searches via attributes was tricky since there are different parsing methods to implement for different attributes.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dknitidceladon23\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dKnitidCeladon23\u0026tabRepo\u003dAY2021S2-CS2103T-W12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"  , [Pull requests](https://github.com/AY2021S2-CS2103T-W12-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3AKnitidCeladon23)","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"  , [Commits](https://github.com/AY2021S2-CS2103T-W12-3/tp/commits?author\u003dknitidceladon23)","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"    * User Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"        * Added documentation for the features `filter` [\\#67](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/67)","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"        * Improve on personalised expression and clarify ambiguous instructions: [\\#47](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/47)","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"        * Added implementation details of the `filter` feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"* **Community**:","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"    * PRs reviewed (comments given in person or offline):","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#13](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/13),","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#42](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/42),","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#49](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/49),","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#58](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/58),","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#60](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/60),","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#136](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/136)","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"    * Reported bugs and suggestions for other teams in the class (e.g.","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#236](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/236),","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#237](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/237),","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#238](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/238),","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#239](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/239),","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#240](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/240),","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#241](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/241),","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#242](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/242),","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#243](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/243),","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#244](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/244),","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"KnitidCeladon23"},"content":"      [\\#245](https://github.com/AY2021S2-CS2103-W16-3/tp/issues/245)","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"KnitidCeladon23":48}},{"path":"docs/team/shuyang0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"---","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"layout: page","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"title: Liu Shuyang\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"---","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"# Project: Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"## Project Overview","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"Link.me is a desktop client management application for insurance agents to manage their contacts. The basic","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"Link.me codebase is adapted from AddressBook Level 3, an address book app created under the Seedu Initiative. The user","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 14 kLoC.","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"## Summary of contributions","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"### Features","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"* **New Feature**: Add notes feature.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"  [PR](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/49)","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"  * What it does: allows the user to record, view and clear notes for clients.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"  * Justification: This feature improves the product significantly because it gives users the flexibility to record any type of information for clients. This means that users are no longer restricted to the fields we have provided, but can record anything they deem fit.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"  * Highlights: Unlike most other commands, the `note` command supports 3 seperate functionalities: recording, viewing and clearing notes. The implementation was to store the desired action in the `NoteCommand` object, and execute the `NoteCommand` differently depending on the action. Furthermore, viewing notes required implementing a seperate UI window to display the notes, and also required a way to pass notes all the way from `Model` to `UI`.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"* **New feature**: Add gender and birthdate fields to client.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"  [PR](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/28)","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"  * What it does: allows the user to add gender and birthdate information for each client.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"  * Justification: This feature improves the product significantly because gender and age (which can be obtained from birthdate) information are particularly relevent when choosing an insurance plan. Insurance agents would likely find these additional fields useful.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"  * Highlights: For gender and birthdate, it is very important to ensure the validity of user input, as we don\u0027t want users to enter an invalid gender or invalid birthdate (e.g. 1990-02-31). This cannot be performed using regex like the other commands, and requires robust checks.","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"### Code contributed","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"[RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dShuyang0\u0026tabRepo\u003dAY2021S2-CS2103T-W12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"[Pull requests](https://github.com/AY2021S2-CS2103T-W12-3/tp/pulls?q\u003dis%3Apr+author%3AShuyang0+)","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"### Project management","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"* Managed milestones `v1.1`, `v1.2`, `v1.3`, `v1.3b` and `v1.4` (5 milestones) on GitHub","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"* Managed releases `v1.2`, `v1.3b` and `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"* Setup and maintain issue tracker on Github","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"* Maintain project notes document","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"* Create product demo for `v1.2` and `v1.3` on project notes document","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"### Documentation:","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"* **User Guide:**","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"  * Added documentation for the `note` feature: [\\#46](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/46)","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"  * Added functionalities overview table: [\\#46](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/46)","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"  * Proofreading and general formatting: [\\#145](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/145)","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"* **Developer Guide:**","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"  * Added all user stories: [\\#22](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/22)","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"  * Added implementation details of the `note` feature: [\\#143](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/143)","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"  * Added implementation details of the `Gender` and `Birthdate` fields: [\\#143](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/143)","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"  * Added 2 sequence diagrams and updated 2 class diagrams: [\\#143](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/143)","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"* **Others:**","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"  * Added initial UI mockup: [\\#12](https://github.com/AY2021S2-CS2103T-W12-3/tp/pull/12)","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"### Community","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"* Contributed to forum discussions (example: [1](https://github.com/nus-cs2103-AY2021S2/forum/issues/281))","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"* Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/AY2021S2-CS2103-T16-3/tp/issues/207), [2](https://github.com/AY2021S2-CS2103-T16-3/tp/issues/208), [3](https://github.com/AY2021S2-CS2103-T16-3/tp/issues/210), [4](https://github.com/AY2021S2-CS2103-T16-3/tp/issues/212), [5](https://github.com/AY2021S2-CS2103-T16-3/tp/issues/213))","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"Shuyang0":64}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"This command allows users of the AddressBook application to add optional remarks to people in Link.me and edit it if required. The command should have the following format:","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":" * Changes the remark of an existing person in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"KnitidCeladon23"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/linkme.json` before running it! Not doing so will cause AddressBook to default to an empty Link.me!","lastModifiedDate":"2021-04-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"KnitidCeladon23":3,"-":391}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"KnitidCeladon23"},"content":"    3.  Save Link.me in the CSV format instead","lastModifiedDate":"2021-04-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"KnitidCeladon23"},"content":"    6.  Add a new entity to Link.me","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"KnitidCeladon23":2,"-":248}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"KnitidCeladon23"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Link.me ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s Link.me and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"KnitidCeladon23"},"content":"     * The data from the sample Link.me will be used instead if {@code storage}\u0027s Link.me is not found,","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"KnitidCeladon23"},"content":"     * or an empty Link.me will be used instead if errors occur when reading {@code storage}\u0027s Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"KnitidCeladon23"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Link.me\");","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"KnitidCeladon23"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Link.me\");","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"KnitidCeladon23"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Link.me\");","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"KnitidCeladon23"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Link.me\");","lastModifiedDate":"2021-04-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"KnitidCeladon23"},"content":"        logger.info(\"Starting Link.me \" + MainApp.VERSION);","lastModifiedDate":"2021-04-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"KnitidCeladon23"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Link.me ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-04-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KnitidCeladon23":10,"HuaiZe":1,"-":172}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Shuyang0":1,"-":78}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"    private static final String LOG_FILE \u003d \"linkme.log\";","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KnitidCeladon23":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\";","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_INVALID_PREFIX \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"            \"Invalid prefix! Please refer to the list of prefixes! \\n%1$s\";","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_INVALID_AGE_INPUT \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"            \"Invalid age (range) input! \\n%1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_BAD_AGE_RANGE_NOTATION \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"            \"Invalid age range notation (You used more than one \u0027-\u0027! \\n%1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_BAD_AGE_FILTER_KEYWORD_NOTATION \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"            \"Invalid age range notation (Age filter keywords and lower/upper bounds have to be an integer! \"","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"                    + \" \\n%1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_BAD_LOWER_UPPER_AGE_RANGE_NOTATION \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"            \"Invalid age range notation. Your lower and upper bound for age filter have not been set correctly! \"","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"                    + \"You have inputted in this format: age/[upper_bound]-[lower_bound]! \\n%1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_INVALID_GENDER_INPUT \u003d","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"            \"Invalid gender input! You can only use either M/Male, F/Female or N/Non-binary \\n%1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_EMPTY_ARGUMENT \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"            \"Missing keyword! Please refer to the instructions below: \\n%1$s\";","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_MULTIPLE_WORD_PER_ATTRIBUTE \u003d \"You can only input one keyword per attribute!\";","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The client index provided is invalid.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_INVALID_PLAN_INDEX \u003d \"The plan index provided is invalid.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String messagePersonFilteredOverview(String s) {","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"        return \"%1$d clients listed! \\nYour filter keyword(s): \" + s;","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":18,"HuaiZe":7,"-":10}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"    public String toString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"        return Integer.toString(zeroBasedIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"HuaiZe":5,"-":54}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"     * Deletes the original file and creates a new file in its place.","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    public static void createRegardless(Path file) throws IOException {","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"        Files.deleteIfExists(file);","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"        createFile(file);","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"     * Sets file to be writable.","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"    public static void unlockFile(Path file) {","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"        file.toFile().setWritable(true, false);","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"     * Sets file to be unwritable.","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"    public static void lockFile(Path file) {","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"        file.toFile().setWritable(false);","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"     * Sets file to be readonly.","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"    public static void readOnly(Path file) {","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"        file.toFile().setReadOnly();","lastModifiedDate":"2021-04-06"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"georgepwhuang":29,"-":83}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the {@code tagSet} contains the {@code word}.","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"KnitidCeladon23"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param tagSet cannot be null","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"KnitidCeladon23"},"content":"    public static boolean containsTagIgnoreCase(Set\u003cTag\u003e tagSet, String word) {","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"KnitidCeladon23"},"content":"        requireNonNull(tagSet);","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"KnitidCeladon23"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"KnitidCeladon23"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"KnitidCeladon23"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"KnitidCeladon23"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"KnitidCeladon23"},"content":"        return tagSet.stream().anyMatch(tag -\u003e tag.tagName.equalsIgnoreCase(preppedWord));","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the {@code plans} contains the {@code word}.","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"KnitidCeladon23"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param plans cannot be null","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"KnitidCeladon23"},"content":"    public static boolean containsPlansIgnoreCase(List\u003cInsurancePlan\u003e plans, String word) {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"KnitidCeladon23"},"content":"        requireNonNull(plans);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"KnitidCeladon23"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"KnitidCeladon23"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"KnitidCeladon23"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"KnitidCeladon23"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"KnitidCeladon23"},"content":"        return plans.stream().anyMatch(plan -\u003e plan.name.equalsIgnoreCase(preppedWord));","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KnitidCeladon23":36,"-":69}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    /** Returns an unmodifiable view of the list of meetings */","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"    ObservableList\u003cPerson\u003e getMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"    /** Returns a string containing notifications */","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"    String getNotifications();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns the user prefs\u0027 Link.me file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"georgepwhuang":6,"KnitidCeladon23":1,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"    public ObservableList\u003cPerson\u003e getMeetingList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"        return getAddressBook().getMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"    public String getNotifications() {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"        return model.getNotifications();","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"georgepwhuang":10,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":" * Adds a client to Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to Link.me. \"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"            + PREFIX_BIRTHDATE + \"BIRTHDATE \"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"            + PREFIX_BIRTHDATE + \"1995-05-01 \"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in Link.me!\";","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shuyang0":6,"KnitidCeladon23":3,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/AddPlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":" * Adds an insurance plan to a client.","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"public class AddPlanCommand extends PlanCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_ADD_PLAN_SUCCESS \u003d \"Added %1$s insurance plan to %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    private final InsurancePlan plan;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"     * Constructor for AddPlanCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    public AddPlanCommand(Index targetIndex, InsurancePlan plan) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"        super(targetIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"        this.plan \u003d plan;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"        Index targetIndex \u003d getTargetIndex();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"        Person original \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"        Person updated \u003d original.addPlan(plan);","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        model.setPerson(original, updated);","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"        String result \u003d String.format(MESSAGE_ADD_PLAN_SUCCESS, plan.toString(), updated.getName());","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"        return new CommandResult(result);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"                || (other instanceof AddPlanCommand // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"                \u0026\u0026 getTargetIndex().equals(((AddPlanCommand) other).getTargetIndex()) // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"                \u0026\u0026 plan.equals(((AddPlanCommand) other).plan));","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"HuaiZe":57}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":" * Clears Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Link.me has been cleared!\";","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"    /** Notifications information should be shown to the user. */","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    private final boolean showNotif;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"    /** Person with notes that should be shown to the user. */","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"    private final Optional\u003cPerson\u003e personWithNotes;","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showNotif,","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"                         Optional\u003cPerson\u003e personWithNotes, boolean exit) {","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        this.showNotif \u003d showNotif;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"        this.personWithNotes \u003d personWithNotes;","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"        this(feedbackToUser, false, false, Optional.empty(), false);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"    public boolean isShowNotif() {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"        return showNotif;","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"    public boolean isShowNote() {","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"        return (personWithNotes.isPresent());","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"    public Person getPersonWithNotes() {","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"Shuyang0"},"content":"        return this.personWithNotes.get();","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 showNotif \u003d\u003d otherCommandResult.showNotif","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 personWithNotes.equals(otherCommandResult.personWithNotes)","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"Shuyang0"},"content":"        return Objects.hash(feedbackToUser, showHelp, showNotif, personWithNotes, exit);","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shuyang0":20,"georgepwhuang":9,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":" * Deletes a client identified using its displayed index from Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":1,"HuaiZe":2,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":" * Edits the details of an existing client in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"            + \"[\" + PREFIX_BIRTHDATE + \"BIRTHDATE] \"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"            + PREFIX_BIRTHDATE + \"1995-05-01\";","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in Link.me.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"KnitidCeladon23"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"Shuyang0"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Shuyang0"},"content":"        Birthdate updatedBirthdate \u003d editPersonDescriptor.getBirthdate().orElse(personToEdit.getBirthdate());","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"HuaiZe"},"content":"        Person editedPerson \u003d new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedGender,","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":"                updatedBirthdate, updatedTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"HuaiZe"},"content":"        editedPerson \u003d editedPerson.setMeeting(personToEdit.getMeeting());","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"HuaiZe"},"content":"        editedPerson \u003d editedPerson.setPlans(personToEdit.getPlans());","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"Shuyang0"},"content":"        editedPerson \u003d editedPerson.setNotes(personToEdit.getNotes());","lastModifiedDate":"2021-04-02"},{"lineNumber":116,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"HuaiZe"},"content":"        return editedPerson;","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"Shuyang0"},"content":"        private Gender gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"Shuyang0"},"content":"        private Birthdate birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"Shuyang0"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"Shuyang0"},"content":"            setBirthdate(toCopy.birthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"HuaiZe"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, gender, birthdate, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"Shuyang0"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"Shuyang0"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"Shuyang0"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Shuyang0"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"Shuyang0"},"content":"        public void setBirthdate(Birthdate birthdate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"Shuyang0"},"content":"            this.birthdate \u003d birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"Shuyang0"},"content":"        public Optional\u003cBirthdate\u003e getBirthdate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"Shuyang0"},"content":"            return Optional.ofNullable(birthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"Shuyang0"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"Shuyang0"},"content":"                    \u0026\u0026 getBirthdate().equals(e.getBirthdate())","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"KnitidCeladon23":4,"Shuyang0":33,"HuaiZe":10,"-":216}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Link.me as requested ...\";","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, Optional.empty(), true);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Shuyang0":3,"HuaiZe":1,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KnitidCeladon23"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filter clients whose matching attributes contain\"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"            + \" any of the specified keywords (case-insensitive) and displays them as a list.\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"            + \"Parameters: PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"            + \"Valid prefixes: a/ADDRESS; g/GENDER; t/TAG; i/INSURANCE_PLAN_NAME; \\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"            + \"age/[LOWER_BOUND]-[UPPER_BOUND]; age/[SPECIFIC_AGE] \\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"            + \"Example: \" + COMMAND_WORD + \" a/Clementi g/M t/medical plan/Protecc age/30-35\";","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"    private final AttributeContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"    public FilterCommand(AttributeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"                String.format(Messages.messagePersonFilteredOverview(predicate.getKeywords()),","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"                        model.getFilteredPersonList().size()));","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"KnitidCeladon23":41,"georgepwhuang":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":" * Finds and lists all clients whose name contains any of the argument keywords.","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"georgepwhuang":1,"HuaiZe":2,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, Optional.empty(), false);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shuyang0":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":" * Lists all clients to the user.","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"HuaiZe":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAR;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_RECORD;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_VIEW;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":" * Allows user to record, clear and view notes.","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Record a note/ View notes/ Clear notes for \"","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"            + \"the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"            + \"Parameters to record a note: \"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"            + COMMAND_WORD + \" INDEX (must be a positive integer) \" + PREFIX_NOTE_RECORD + \"NOTE\" + \"\\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"            + \"Parameters to view all notes: \"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"            + COMMAND_WORD + \" INDEX (must be a positive integer) \" + PREFIX_NOTE_VIEW + \"\\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"            + \"Parameters to clear all notes: \"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"            + COMMAND_WORD + \" INDEX (must be a positive integer) \" + PREFIX_CLEAR;","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"    public static final String MESSAGE_RECORD_SUCCESS \u003d \"Recorded note \\\"%2$s\\\" for: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"    public static final String MESSAGE_VIEW_SUCCESS \u003d \"Displaying notes for: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"    public static final String MESSAGE_CLEAR_SUCCESS \u003d \"Cleared notes for: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"    private final Index index;","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"    private final Prefix action;","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    private final Note note;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"     * @param index of the person in the filtered person list","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"     * @param action to be taken (record, view or clear)","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"     * @param note to add to the person","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"    public NoteCommand(Index index, Prefix action, Note note) {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(action);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Shuyang0"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Shuyang0"},"content":"        Person personToNote \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Shuyang0"},"content":"        if (action.equals(PREFIX_NOTE_RECORD)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Shuyang0"},"content":"            Person updatedPerson \u003d personToNote.addNote(note);","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"Shuyang0"},"content":"            model.setPerson(personToNote, updatedPerson);","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"Shuyang0"},"content":"            return new CommandResult(String.format(MESSAGE_RECORD_SUCCESS, personToNote.getName(), note));","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"Shuyang0"},"content":"        } else if (action.equals(PREFIX_NOTE_VIEW)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"Shuyang0"},"content":"            return new CommandResult(String.format(MESSAGE_VIEW_SUCCESS, personToNote.getName()),","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"Shuyang0"},"content":"                    false, false, Optional.of(personToNote), false);","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"        } else if (action.equals(PREFIX_CLEAR)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Shuyang0"},"content":"            Person updatedPerson \u003d personToNote.clearNotes();","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"Shuyang0"},"content":"            model.setPerson(personToNote, updatedPerson);","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"Shuyang0"},"content":"            return new CommandResult(String.format(MESSAGE_CLEAR_SUCCESS, personToNote.getName()));","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"Shuyang0"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"Shuyang0"},"content":"            assert false : \"Unexpected execution\";","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"Shuyang0"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"Shuyang0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"Shuyang0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"Shuyang0"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"Shuyang0"},"content":"        } else if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"Shuyang0"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Shuyang0"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"Shuyang0"},"content":"            NoteCommand o \u003d (NoteCommand) other;","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"Shuyang0"},"content":"            return index.equals(o.index)","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"Shuyang0"},"content":"                    \u0026\u0026 action.equals(o.action)","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"Shuyang0"},"content":"                    \u0026\u0026 note.equals(o.note);","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shuyang0":97,"georgepwhuang":2,"HuaiZe":1}},{"path":"src/main/java/seedu/address/logic/commands/NotifCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":" * Shows notifications the program.","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"public class NotifCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    public static final String COMMAND_WORD \u003d \"notif\";","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    public static final String SHOWING_NOTIF_MESSAGE \u003d \"Producing notifications...\";","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"        return new CommandResult(SHOWING_NOTIF_MESSAGE, false, true, Optional.empty(), false);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"georgepwhuang":18,"Shuyang0":3}},{"path":"src/main/java/seedu/address/logic/commands/PlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAR;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":" * Represents a command involving an insurance plan.","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"public abstract class PlanCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    public static final String COMMAND_WORD \u003d \"plan\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"            + \": Adds/remove an insurance plan of the client identified by the \"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"            + \"index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"            + \"Parameters for adding a plan: plan INDEX (must be a positive integer) \"","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"            + PREFIX_INSURANCE + \"PLAN_NAME $PREMIUM (must be a positive amount with up to 2 decimal places)\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"            + \"    Example: \" + COMMAND_WORD + \" 3 \" + PREFIX_INSURANCE + \"Protecc $4000.50\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"            + \"Parameters for removing a plan: plan INDEX (must be a positive integer) \"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"            + PREFIX_CLEAR + \"PLAN_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"            + \"    Example: \" + COMMAND_WORD + \" 2 \" + PREFIX_CLEAR + \"3\";","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"     * Constructor for PlanCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"    public PlanCommand(Index targetIndex) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"    public Index getTargetIndex() {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"        return targetIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"HuaiZe":41}},{"path":"src/main/java/seedu/address/logic/commands/RemovePlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":" * Removes an insurance plan of a client.","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"public class RemovePlanCommand extends PlanCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_REMOVE_PLAN_SUCCESS \u003d \"Removed %1$s insurance plan from %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    private final Index planIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"     * Constructor for RemovePlanCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    public RemovePlanCommand(Index targetIndex, Index planIndex) {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"        super(targetIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"        this.planIndex \u003d planIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"        Index targetIndex \u003d getTargetIndex();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"            throw new CommandException(\"The client index provided is invalid.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"        Person personToSchedule \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"        if (planIndex.getZeroBased() \u003e\u003d personToSchedule.getPlans().size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PLAN_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"        String planString \u003d personToSchedule.getPlanString(planIndex.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"        Person updatedPerson \u003d personToSchedule.removePlan(planIndex.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"        model.setPerson(personToSchedule, updatedPerson);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"        String result \u003d String.format(MESSAGE_REMOVE_PLAN_SUCCESS, planString, updatedPerson.getName());","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"        return new CommandResult(result);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"                || (other instanceof RemovePlanCommand // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"                \u0026\u0026 getTargetIndex().equals(((RemovePlanCommand) other).getTargetIndex()) // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"                \u0026\u0026 planIndex.equals(((RemovePlanCommand) other).planIndex));","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"HuaiZe":60}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":" * Schedules a meeting with a client identified using its displayed index from Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"            + \": Schedules a meeting with the client identified by the \"","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"            + \"index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"            + \"Scheduled meeting must not be in the past.\"","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"            + PREFIX_MEETING + \"MEETING_DESCRIPTION @ yyyy-mm-dd HH:MM\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 m/ Insurance Plan @ 2021-03-05 14:50\";","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_SCHEDULE_PERSON_SUCCESS \u003d \"Scheduled meeting with client %1$s at %2$s\";","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_SCHEDULE_CONFLICT_FAILURE \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"            \"Scheduling conflict found at this meeting %1$s with %2$s\";","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_SCHEDULE_PAST_FAILURE \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"            \"Scheduled meeting cannot be in the past. The current time is %1$s.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"    private final Meeting meeting;","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"     * Constructor for Schedule Command","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    public ScheduleCommand(Index targetIndex, Meeting meeting) {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        if (meeting.dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"            throw new CommandException(String.format(MESSAGE_SCHEDULE_PAST_FAILURE,","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"                    LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"uuuu-MM-dd hh:mm a\"))));","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"        Person personToSchedule \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"        Person updatedPerson \u003d personToSchedule.setMeeting(Optional.of(meeting));","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"        if (!personToSchedule.getMeeting().equals(meeting)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"            Optional\u003cString\u003e errorMsg \u003d model","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"                    .clash(updatedPerson)","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"                    .map(person -\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"                            String.format(MESSAGE_SCHEDULE_CONFLICT_FAILURE,","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"                                    person.getMeeting().get().original, person.getName().fullName));","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"            if (errorMsg.isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"                throw new CommandException(errorMsg.get());","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToSchedule, updatedPerson);","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"        return new CommandResult(String.format(MESSAGE_SCHEDULE_PERSON_SUCCESS, updatedPerson.getName(), meeting));","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"                || (other instanceof ScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 targetIndex.equals(((ScheduleCommand) other).targetIndex) // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 meeting.equals(((ScheduleCommand) other).meeting));","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"georgepwhuang":86,"KnitidCeladon23":1,"HuaiZe":3}},{"path":"src/main/java/seedu/address/logic/commands/UnscheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"public class UnscheduleCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    public static final String COMMAND_WORD \u003d \"unschedule\";","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"            + \": Unschedules a meeting identified by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"            + \"Parameter to removes all meetings: \" + COMMAND_WORD + \" all\\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"            + \"Parameter to removes all expired meetings: \" + COMMAND_WORD + \" expired\\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"            + \"Parameter to removes a specific meeting: \" + COMMAND_WORD + \" INDEX\\n\";","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_UNSCHEDULE_ALL_SUCCESS \u003d \"All meetings unscheduled.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_UNSCHEDULE_EXPIRED_SUCCESS \u003d \"All expired meetings removed\";","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_UNSCHEDULE_ONE_SUCCESS \u003d \"Meeting with %1$s removed\";","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    private final boolean all;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"    private final boolean expired;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"     * Constructor for Unschedule Command","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"    public UnscheduleCommand(Index targetIndex, boolean all, boolean expired) {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        this.all \u003d all;","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"        this.expired \u003d expired;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"        List\u003cPerson\u003e meetingList \u003d new ArrayList\u003c\u003e(model.getAddressBook().getMeetingList());","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"        if (all) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"            meetingList.forEach(person -\u003e model.setPerson(person, person.setMeeting(Optional.empty())));","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"            return new CommandResult(MESSAGE_UNSCHEDULE_ALL_SUCCESS);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"        if (expired) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"            meetingList.stream().filter(person -\u003e person.getMeeting().orElseThrow().dateTime.isBefore(now))","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"                    .forEach(person -\u003e model.setPerson(person, person.setMeeting(Optional.empty())));","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"            return new CommandResult(MESSAGE_UNSCHEDULE_EXPIRED_SUCCESS);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d meetingList.size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"        Person personToSchedule \u003d meetingList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"        Person updatedPerson \u003d personToSchedule.setMeeting(Optional.empty());","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToSchedule, updatedPerson);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"        return new CommandResult(String.format(MESSAGE_UNSCHEDULE_ONE_SUCCESS, personToSchedule.getName()));","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"                || (other instanceof UnscheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 Optional.ofNullable(targetIndex).equals(Optional.ofNullable(((UnscheduleCommand) other).targetIndex))","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 all \u003d\u003d ((UnscheduleCommand) other).all","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 expired \u003d\u003d ((UnscheduleCommand) other).expired); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":75,"HuaiZe":2}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"                        PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_TAG);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"                PREFIX_BIRTHDATE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"        Birthdate birthdate \u003d ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get());","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"        Person person \u003d new Person(name, phone, email, address, gender, birthdate, tagList);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Shuyang0":9,"HuaiZe":2,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.NotifCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.PlanCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.UnscheduleCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"        case UnscheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"            return new UnscheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"KnitidCeladon23"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"KnitidCeladon23"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"HuaiZe"},"content":"        case PlanCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"            return new PlanCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"        case NotifCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"            return new NotifCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"Shuyang0"},"content":"        case NoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Shuyang0"},"content":"            return new NoteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":5,"Shuyang0":4,"georgepwhuang":11,"HuaiZe":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/AgeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KnitidCeladon23"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"public class AgeParser {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"    private List\u003cInteger\u003e ageRangeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code AgeParser}.","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param age an integer in String format.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"    public AgeParser(String age) {","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"            ageRangeList.add(Integer.MIN_VALUE);","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"            ageRangeList.add(Integer.MAX_VALUE);","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (age.contains(\"-\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"            Arrays.asList(age.split(\"-\")).stream().forEach(num -\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"                    ageRangeList.add(Integer.parseInt(num))","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"            );","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"            Collections.sort(ageRangeList);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"            ageRangeList.add(Integer.parseInt(age));","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns a list of parsed age integer values.","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"    public List\u003cInteger\u003e value() {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"        return this.ageRangeList;","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"KnitidCeladon23":38}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"age/\");","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"    public static final Prefix PREFIX_BIRTHDATE \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    public static final Prefix PREFIX_MEETING \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    public static final Prefix PREFIX_INSURANCE \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"    public static final Prefix PREFIX_NOTE_RECORD \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    public static final Prefix PREFIX_NOTE_VIEW \u003d new Prefix(\"v/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"    public static final Prefix PREFIX_CLEAR \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Shuyang0":4,"KnitidCeladon23":1,"georgepwhuang":2,"HuaiZe":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"        } catch (InvalidIntegerException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KnitidCeladon23":2,"georgepwhuang":3,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"                        PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_TAG);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"            editPersonDescriptor.setBirthdate(ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"        try {","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"        } catch (InvalidIntegerException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"georgepwhuang":11,"Shuyang0":8,"HuaiZe":2,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KnitidCeladon23"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EMPTY_ARGUMENT;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_AGE_INPUT;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_GENDER_INPUT;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MULTIPLE_WORD_PER_ATTRIBUTE;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"            isValidQuery(nameKeywords);","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"            throw e;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"        return new FilterCommand(new AttributeContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"KnitidCeladon23"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"KnitidCeladon23"},"content":"    private static boolean isValidQuery(String[] nameKeywords) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"KnitidCeladon23"},"content":"        for (String keyword : nameKeywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"KnitidCeladon23"},"content":"            FilterKeywordChecker input \u003d new FilterKeywordChecker(keyword);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"KnitidCeladon23"},"content":"            if (input.getAttributeType().equals(\"age\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"KnitidCeladon23"},"content":"                if (input.value() \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"KnitidCeladon23"},"content":"                    throw new ParseException(","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"KnitidCeladon23"},"content":"                            String.format(MESSAGE_INVALID_AGE_INPUT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"KnitidCeladon23"},"content":"                } else if (input.value().split(\"-\").length \u003e\u003d 3) {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"KnitidCeladon23"},"content":"                    throw new ParseException(","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"KnitidCeladon23"},"content":"                            String.format(MESSAGE_INVALID_AGE_INPUT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"KnitidCeladon23"},"content":"                } else if (input.value().split(\"-\").length \u003d\u003d 2) {","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"KnitidCeladon23"},"content":"                    String[] ageBoundsArgs \u003d input.value().split(\"-\");","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"KnitidCeladon23"},"content":"                    try {","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"KnitidCeladon23"},"content":"                        int lowerBound \u003d Integer.parseInt(ageBoundsArgs[0]);","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"KnitidCeladon23"},"content":"                        int upperBound \u003d Integer.parseInt(ageBoundsArgs[1]);","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"KnitidCeladon23"},"content":"                        if (lowerBound \u003e upperBound) {","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"KnitidCeladon23"},"content":"                            throw new ParseException(","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"KnitidCeladon23"},"content":"                                    String.format(MESSAGE_INVALID_AGE_INPUT,","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"KnitidCeladon23"},"content":"                                            FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"KnitidCeladon23"},"content":"                        }","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"KnitidCeladon23"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"KnitidCeladon23"},"content":"                        throw new ParseException(","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"KnitidCeladon23"},"content":"                                String.format(MESSAGE_INVALID_AGE_INPUT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"KnitidCeladon23"},"content":"                    }","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"KnitidCeladon23"},"content":"                }","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"KnitidCeladon23"},"content":"            } else if (input.getAttributeType().equals(\"gender\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"KnitidCeladon23"},"content":"                if (!input.value().equalsIgnoreCase(\"m\")","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"KnitidCeladon23"},"content":"                        \u0026\u0026 !input.value().equalsIgnoreCase(\"n\")","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"KnitidCeladon23"},"content":"                        \u0026\u0026 !input.value().equalsIgnoreCase(\"f\")","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"KnitidCeladon23"},"content":"                        \u0026\u0026 !input.value().equalsIgnoreCase(\"male\")","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"KnitidCeladon23"},"content":"                        \u0026\u0026 !input.value().equalsIgnoreCase(\"female\")","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"KnitidCeladon23"},"content":"                        \u0026\u0026 !input.value().equalsIgnoreCase(\"non-binary\")) {","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"KnitidCeladon23"},"content":"                    throw new ParseException(","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"KnitidCeladon23"},"content":"                            String.format(MESSAGE_INVALID_GENDER_INPUT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"KnitidCeladon23"},"content":"                }","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"KnitidCeladon23"},"content":"            } else if (input.isInvalid()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"KnitidCeladon23"},"content":"                if (!nameKeywords[0].equalsIgnoreCase(keyword) \u0026\u0026 !keyword.contains(\"/\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"KnitidCeladon23"},"content":"                    throw new ParseException(","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"KnitidCeladon23"},"content":"                            String.format(MESSAGE_MULTIPLE_WORD_PER_ATTRIBUTE, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"KnitidCeladon23"},"content":"                } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"KnitidCeladon23"},"content":"                    throw new ParseException(","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"KnitidCeladon23"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"KnitidCeladon23"},"content":"                }","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"KnitidCeladon23"},"content":"            } else if (input.value().equals(\"\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"KnitidCeladon23"},"content":"                throw new ParseException(","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"KnitidCeladon23"},"content":"                        String.format(MESSAGE_EMPTY_ARGUMENT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"KnitidCeladon23"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"KnitidCeladon23"},"content":"        return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"KnitidCeladon23":99,"georgepwhuang":1}},{"path":"src/main/java/seedu/address/logic/parser/FilterKeywordChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KnitidCeladon23"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"public class FilterKeywordChecker {","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"    private String keyword;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"KnitidCeladon23"},"content":"    private String attributeType;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code FilterKeyWordChecker} and detects the prefix","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param keyword a user filter search input.","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"    public FilterKeywordChecker(String keyword) {","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"        if (keyword.length() \u003c 2) {","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"invalid\";","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (keyword.substring(0, 2).equals(\"a/\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"address\";","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (keyword.substring(0, 2).equals(\"g/\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"gender\";","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (keyword.substring(0, 2).equals(\"t/\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"tag\";","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (keyword.substring(0, 2).equals(\"i/\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"plan\";","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (keyword.length() \u003c 4 \u0026\u0026 !keyword.equals(\"age/\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"invalid\";","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (keyword.substring(0, 4).equals(\"age/\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"age\";","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"            this.attributeType \u003d \"invalid\";","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns the {@code String} value of keyword after checking the attribute type of the filter query","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"    public String value() {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"        if (isAddress() || isGender() || isTag()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"            return this.keyword.substring(2);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (isAge()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KnitidCeladon23"},"content":"            return this.keyword.substring(4);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (isPlan()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"KnitidCeladon23"},"content":"            return this.keyword.substring(2);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"KnitidCeladon23"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"KnitidCeladon23"},"content":"            return null;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns the {@code String} value of attribute type of the query","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"KnitidCeladon23"},"content":"    public String getAttributeType() {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"KnitidCeladon23"},"content":"        return this.attributeType;","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the attribute type is address (prefix: a/), otherwise false","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean isAddress() {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"KnitidCeladon23"},"content":"        return this.attributeType.equals(\"address\");","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the attribute type is gender (prefix: g/), otherwise false","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean isGender() {","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"KnitidCeladon23"},"content":"        return this.attributeType.equals(\"gender\");","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the attribute type is tag (prefix: t/), otherwise false","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean isTag() {","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"KnitidCeladon23"},"content":"        return this.attributeType.equals(\"tag\");","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the attribute type is age (prefix: age/), otherwise false","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean isAge() {","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"KnitidCeladon23"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"KnitidCeladon23"},"content":"            String[] ageArr \u003d this.keyword.substring(4).split(\"-\");","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"KnitidCeladon23"},"content":"            for (String age : ageArr) {","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"KnitidCeladon23"},"content":"                Integer.parseInt(age);","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"KnitidCeladon23"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"KnitidCeladon23"},"content":"            return this.attributeType.equals(\"age\");","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"KnitidCeladon23"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"KnitidCeladon23"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the attribute type is insurance plan (prefix: i/), otherwise false","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean isPlan() {","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"KnitidCeladon23"},"content":"        return this.attributeType.equals(\"plan\");","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if the attribute type neither of the above, and therefore \"invalid\", otherwise true","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean isInvalid() {","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"KnitidCeladon23"},"content":"        return this.attributeType.equals(\"invalid\");","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"KnitidCeladon23":108}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"georgepwhuang":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAR;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_RECORD;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_VIEW;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":" * Parses input arguments and creates a new NoteCommand object","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"public class NoteCommandParser implements Parser\u003cNoteCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"     * Parses the given {@code String} of arguments in the context of the NoteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"     * and returns a NoteCommand object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NOTE_RECORD, PREFIX_NOTE_VIEW, PREFIX_CLEAR);","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"        Prefix singlePrefix;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"            singlePrefix \u003d getSinglePrefix(argMultimap, PREFIX_NOTE_RECORD, PREFIX_NOTE_VIEW, PREFIX_CLEAR);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"        assert singlePrefix !\u003d null : \"Unexpected null value\";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"        Index index;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        } catch (InvalidIntegerException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, NoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE_RECORD).orElse(\"placeholder\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"        return new NoteCommand(index, singlePrefix, note);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"     * Returns the singular prefix contained in the given {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"     * @throws ParseException if more or less than 1 prefix is provided by user.","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"    private static Prefix getSinglePrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"        Prefix singlePrefix \u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"            if (argumentMultimap.getValue(prefix).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"                if (singlePrefix !\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"                    throw new ParseException(\"More than 1 prefix provided.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"                singlePrefix \u003d prefix;","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"        if (singlePrefix \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Shuyang0"},"content":"            throw new ParseException(\"No prefix provided. \");","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Shuyang0"},"content":"        return singlePrefix;","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shuyang0":58,"KnitidCeladon23":2,"georgepwhuang":8,"HuaiZe":1}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.NotANumberException;","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_INVALID_NUMBER \u003d \"Index is not a number.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"        boolean isNumber \u003d trimmedIndex.matches(\"-{0,1}\\\\d+\");","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        if (!isNumber) {","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"            throw new NotANumberException(MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"            throw new InvalidIntegerException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Shuyang0"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Shuyang0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"Shuyang0"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"Shuyang0"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"Shuyang0"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"Shuyang0"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"Shuyang0"},"content":"        if (!seedu.address.model.person.Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"Shuyang0"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"Shuyang0"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"Shuyang0"},"content":"     * Parses a {@code String birthday} into an {@code Birthdate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"Shuyang0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"Shuyang0"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"Shuyang0"},"content":"     * @throws ParseException if the given {@code birthday} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"Shuyang0"},"content":"    public static Birthdate parseBirthdate(String birthdate) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"Shuyang0"},"content":"        String trimmedBirthdate \u003d birthdate.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Shuyang0"},"content":"        if (!seedu.address.model.person.Birthdate.isValidBirthdate(trimmedBirthdate)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"Shuyang0"},"content":"            throw new ParseException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"Shuyang0"},"content":"        return new Birthdate(trimmedBirthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"HuaiZe"},"content":"     * Parses a {@code String plan} into an {@code InsurancePlan}.","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"georgepwhuang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"HuaiZe"},"content":"     * @throws ParseException if the given {@code plan} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"HuaiZe"},"content":"    public static InsurancePlan parsePlan(String plan) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"HuaiZe"},"content":"        requireNonNull(plan);","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"HuaiZe"},"content":"        String trimmedPlan \u003d plan.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"HuaiZe"},"content":"        if (!InsurancePlan.isValidPlan(trimmedPlan)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"HuaiZe"},"content":"            throw new ParseException(InsurancePlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":179,"author":{"gitId":"HuaiZe"},"content":"        if (!InsurancePlan.isValidAmount(trimmedPlan.split(\" \\\\$\", 2)[1])) {","lastModifiedDate":"2021-04-02"},{"lineNumber":180,"author":{"gitId":"HuaiZe"},"content":"            throw new ParseException(InsurancePlan.PREMIUM_CONSTRAINTS);","lastModifiedDate":"2021-04-02"},{"lineNumber":181,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":182,"author":{"gitId":"HuaiZe"},"content":"        return new InsurancePlan(trimmedPlan);","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":184,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"HuaiZe"},"content":"     * Retrieves the plan index from a remove plan command.","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"HuaiZe"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"HuaiZe"},"content":"     * @throws ParseException if the given {@code command} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"HuaiZe"},"content":"    public static Index parseRemovePlanIndex(String index) throws ParseException {","lastModifiedDate":"2021-04-02"},{"lineNumber":191,"author":{"gitId":"HuaiZe"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-04-02"},{"lineNumber":192,"author":{"gitId":"HuaiZe"},"content":"        String trimmedIndex \u003d index.trim();","lastModifiedDate":"2021-04-02"},{"lineNumber":193,"author":{"gitId":"HuaiZe"},"content":"        Index planIndex \u003d parseIndex(trimmedIndex);","lastModifiedDate":"2021-04-02"},{"lineNumber":194,"author":{"gitId":"HuaiZe"},"content":"        return planIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"georgepwhuang"},"content":"     * Parses a {@code String meeting} into an {@code Meeting}.","lastModifiedDate":"2021-03-10"},{"lineNumber":199,"author":{"gitId":"HuaiZe"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"HuaiZe"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"georgepwhuang"},"content":"     * @throws ParseException if the given {@code meeting} is invalid.","lastModifiedDate":"2021-03-10"},{"lineNumber":202,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"georgepwhuang"},"content":"    public static Meeting parseMeeting(String meeting) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-10"},{"lineNumber":205,"author":{"gitId":"georgepwhuang"},"content":"        String trimmedMeeting \u003d meeting.trim();","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"georgepwhuang"},"content":"        if (!Meeting.isValidMeeting(trimmedMeeting)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(Meeting.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"georgepwhuang"},"content":"        return new Meeting(trimmedMeeting);","lastModifiedDate":"2021-03-10"},{"lineNumber":210,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"Shuyang0"},"content":"     * Parses a {@code String note} into an {@code Note}.","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"Shuyang0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"Shuyang0"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"Shuyang0"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"Shuyang0"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"Shuyang0"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"Shuyang0"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"Shuyang0"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"Shuyang0"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"georgepwhuang":24,"Shuyang0":48,"HuaiZe":31,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/PlanCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLEAR;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.AddPlanCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.PlanCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.commands.RemovePlanCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":" * Parses input arguments and creates a new PlanCommand object","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"public class PlanCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"     * Parses the given {@code String} of arguments in the context of the PlanCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"     * and returns a PlanCommand object for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    public PlanCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"                PREFIX_INSURANCE, PREFIX_CLEAR);","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"        Prefix singlePrefix;","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"            singlePrefix \u003d getSinglePrefix(argMultimap, PREFIX_INSURANCE, PREFIX_CLEAR);","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PlanCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"        assert singlePrefix !\u003d null : \"Unexpected null value\";","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        if (argMultimap.getValue(PREFIX_INSURANCE).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_CLEAR).isEmpty()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(InsurancePlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"        Index index;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"        } catch (InvalidIntegerException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PlanCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"        if (singlePrefix.equals(PREFIX_INSURANCE)) {","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"            InsurancePlan plan \u003d ParserUtil.parsePlan(argMultimap.getValue(PREFIX_INSURANCE).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"            return new AddPlanCommand(index, plan);","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"        } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"            Index planIndex;","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"            try {","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"                planIndex \u003d ParserUtil.parseRemovePlanIndex(argMultimap.getValue(PREFIX_CLEAR).get());","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"                throw new ParseException(\"The plan index provided is invalid.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"            return new RemovePlanCommand(index, planIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"     * Returns the singular prefix contained in the given {@code ArgumentMultimap}.","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"     * @throws ParseException if more or less than 1 prefix is provided by user.","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"    private static Prefix getSinglePrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"HuaiZe"},"content":"        Prefix singlePrefix \u003d null;","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"            if (argumentMultimap.getValue(prefix).isPresent()) {","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"HuaiZe"},"content":"                if (singlePrefix !\u003d null) {","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"HuaiZe"},"content":"                    throw new ParseException(\"More than 1 prefix provided.\");","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"HuaiZe"},"content":"                }","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"HuaiZe"},"content":"                singlePrefix \u003d prefix;","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"HuaiZe"},"content":"            }","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"HuaiZe"},"content":"        if (singlePrefix \u003d\u003d null) {","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"HuaiZe"},"content":"            throw new ParseException(\"No prefix provided. \");","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"HuaiZe"},"content":"        return singlePrefix;","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"georgepwhuang":10,"HuaiZe":78}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"                PREFIX_MEETING);","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"        Index index;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        Meeting meeting;","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        if (argMultimap.getValue(PREFIX_MEETING).isEmpty()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        try {","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"            meeting \u003d ParserUtil.parseMeeting(argMultimap.getValue(PREFIX_MEETING).get());","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"        } catch (ParseException ex) {","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"        } catch (InvalidIntegerException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"        return new ScheduleCommand(index, meeting);","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"georgepwhuang":54,"KnitidCeladon23":1}},{"path":"src/main/java/seedu/address/logic/parser/UnscheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.UnscheduleCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"public class UnscheduleCommandParser implements Parser\u003cUnscheduleCommand\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    public UnscheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"        if (args.trim().equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"            return new UnscheduleCommand(null, true, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"        if (args.trim().equalsIgnoreCase(\"expired\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"            return new UnscheduleCommand(null, false, true);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"        } catch (InvalidIntegerException pe) {","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnscheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        return new UnscheduleCommand(index, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":44}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/InvalidIntegerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":" * Represents a parse error where the number is not an unsigned integer.","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"public class InvalidIntegerException extends ParseException {","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"    public InvalidIntegerException(String message) {","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"        super(message);","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"    public InvalidIntegerException(String message, Throwable cause) {","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"        super(message, cause);","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"georgepwhuang":14}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/NotANumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":" * Represents a parse error where the index is not a number.","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"public class NotANumberException extends ParseException {","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"    public NotANumberException(String message) {","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"        super(message);","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    public NotANumberException(String message, Throwable cause) {","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"        super(message, cause);","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"georgepwhuang":15}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"KnitidCeladon23"},"content":"     * Replaces the contents of Link.me with {@code persons}.","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"        this.meetings.setPersons(persons);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if a person with the same identity as {@code person} exists in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns the clashed meeting if a person\u0027s meeting time clashes with another meeting in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"    public Optional\u003cPerson\u003e clash(Person person) {","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"        return meetings.clash(person);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"KnitidCeladon23"},"content":"     * Adds a person to Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"KnitidCeladon23"},"content":"     * The person must not already exist in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"        meetings.add(p);","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"KnitidCeladon23"},"content":"     * {@code target} must exist in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":94,"author":{"gitId":"KnitidCeladon23"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"        meetings.setPerson(target, editedPerson);","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"KnitidCeladon23"},"content":"     * {@code key} must exist in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"        meetings.remove(key);","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"    public String getNotifications() {","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"        sb.append(\"Here are the things you might want to take note of:\\n\\n\");","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"        int length \u003d sb.length() + 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"        String meetingNotif \u003d meetings.getNotifications();","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"        String personNotif \u003d persons.getNotifications();","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"        if (meetingNotif.length() \u003e 0) {","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"            sb.append(meetingNotif);","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"        if (personNotif.length() \u003e 0) {","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"            sb.append(personNotif);","lastModifiedDate":"2021-04-06"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"        if (sb.length() \u003e length) {","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"georgepwhuang"},"content":"            return sb.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"georgepwhuang"},"content":"        return \"Your schedule is clear today!\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":145,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"georgepwhuang"},"content":"    public ObservableList\u003cPerson\u003e getMeetingList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"georgepwhuang"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"georgepwhuang":39,"KnitidCeladon23":8,"-":114}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns the user prefs\u0027 Link.me file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"KnitidCeladon23"},"content":"     * Sets the user prefs\u0027 Link.me file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"KnitidCeladon23"},"content":"     * Replaces Link.me data with the data in {@code addressBook}.","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if a person with the same identity as {@code person} exists in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"KnitidCeladon23"},"content":"     * Returns true if a person\u0027s meeting time clashes with another meeting in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"    Optional\u003cPerson\u003e clash(Person person);","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"KnitidCeladon23"},"content":"     * The person must exist in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"KnitidCeladon23"},"content":"     * {@code person} must not already exist in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"KnitidCeladon23"},"content":"     * {@code target} must exist in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"KnitidCeladon23"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"    /** Returns a string containing notifications */","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"    String getNotifications();","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"georgepwhuang":8,"KnitidCeladon23":9,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents the in-memory model of Link.me data.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"        logger.fine(\"Initializing with Link.me: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"    public Optional\u003cPerson\u003e clash(Person person) {","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"        return addressBook.clash(person);","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"    public String getNotifications() {","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"        return addressBook.getNotifications();","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"georgepwhuang":12,"KnitidCeladon23":2,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":" * Unmodifiable view of Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    ObservableList\u003cPerson\u003e getMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KnitidCeladon23":1,"georgepwhuang":1,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"linkme.json\");","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KnitidCeladon23":1,"-":86}},{"path":"src/main/java/seedu/address/model/insurance/InsurancePlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package seedu.address.model.insurance;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":" * Represents the name and yearly premium amount of a client\u0027s insurance plan.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"public class InsurancePlan {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Input should be of the form:\\n\"","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"            + \"plan INDEX i/PLAN_NAME $PREMIUM (add plan) OR plan INDEX c/PLAN_INDEX (remove plan)\\n\"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"            + \"e.g. plan 3 i/Protecc $4000 OR plan 2 c/3\\n\"","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"            + \"The plan name should not be blank and should only contain alphanumeric characters, spaces, and \"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"            + \"these special characters, excluding the outer parentheses, (-(),).\"","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"            + \"The yearly premium should be a positive amount with up to 2 decimal places.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    public static final String PREMIUM_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"            \"The yearly premium should be a positive amount with up to 2 decimal places.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"    /*","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"     * The first character of the plan name must not be a whitespace,","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    public static final String NAME_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}()\\\\-,][\\\\p{Alnum} ()\\\\-,]*\";","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    public static final String REGEX_POSITIVE_INTEGER \u003d \"[0]*[123456789][\\\\p{Digit}]*\";","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    public static final String REGEX_ALL_ZEROES \u003d \"0*\";","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    public final String original;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    public final String name;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    public final String premium;","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"     * Constructs a {@code InsurancePlan}.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"     * @param plan A valid insurance plan.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"    public InsurancePlan(String plan) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"        requireNonNull(plan);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"        checkArgument(isValidPlan(plan), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"        String[] fragments \u003d plan.split(\" \\\\$\", 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"        checkArgument(isValidAmount(fragments[1]), PREMIUM_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"        this.original \u003d plan;","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"        this.name \u003d fragments[0].trim();","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        // Remove leading zeroes from the string","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"        StringBuilder temp \u003d new StringBuilder(fragments[1].replaceAll(\"^0+(?!\\\\$)\", \"\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"        // Ensure there is at least 1 digit in front of the decimal point","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"        if (temp.charAt(0) \u003d\u003d \u0027.\u0027) {","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"            temp.insert(0, \"0\");","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"        // Pad zeroes behind the decimal point up to 2 decimal places","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"        if (temp.toString().contains(\".\")) {","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"            String[] tempArr \u003d temp.toString().split(\"\\\\.\");","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"            int numOfDecPlaces;","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"            if (tempArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"                numOfDecPlaces \u003d 0;","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"            } else {","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"                numOfDecPlaces \u003d tempArr[1].length();","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"            temp.append(\"0\".repeat(2 - numOfDecPlaces));","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"        this.premium \u003d temp.toString();","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"     * Returns true if a given string is a valid plan.","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":"    public static boolean isValidPlan(String plan) {","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"        return plan.contains(\" $\") \u0026\u0026 plan.split(\" \\\\$\")[0].matches(NAME_VALIDATION_REGEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"HuaiZe"},"content":"     * Returns true if a given premium amount is a valid amount.","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"HuaiZe"},"content":"    public static boolean isValidAmount(String premium) {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":"        // Check that there is not more than 1 decimal point in the input premium","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"        String withoutDecimalPoints \u003d premium.replaceAll(\"\\\\.\", \"\");","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"HuaiZe"},"content":"        if (premium.length() - withoutDecimalPoints.length() \u003e 1) {","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"HuaiZe"},"content":"            return false;","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"HuaiZe"},"content":"        String[] fragments \u003d premium.split(\"\\\\.\");","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"HuaiZe"},"content":"        if (fragments.length \u003d\u003d 1) {","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"HuaiZe"},"content":"            return fragments[0].matches(REGEX_POSITIVE_INTEGER);","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"HuaiZe"},"content":"        } else if (fragments.length \u003e 2) {","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"HuaiZe"},"content":"            return false;","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"HuaiZe"},"content":"        } else if (fragments[0].matches(REGEX_ALL_ZEROES)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"            return fragments[1].length() \u003c\u003d 2 \u0026\u0026 fragments[1].matches(REGEX_POSITIVE_INTEGER);","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"        } else if (fragments[0].matches(REGEX_POSITIVE_INTEGER)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"HuaiZe"},"content":"            return fragments[1].length() \u003c\u003d 2","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"HuaiZe"},"content":"                    \u0026\u0026 (fragments[1].matches(REGEX_ALL_ZEROES) || fragments[1].matches(REGEX_POSITIVE_INTEGER));","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"HuaiZe"},"content":"        } else {","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"HuaiZe"},"content":"            return false;","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"HuaiZe"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"HuaiZe"},"content":"        return name + \" ($\" + premium + \")\";","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"HuaiZe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"HuaiZe"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"HuaiZe"},"content":"                || (other instanceof InsurancePlan // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"HuaiZe"},"content":"                \u0026\u0026 name.equals(((InsurancePlan) other).name)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"HuaiZe"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"HuaiZe"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"HuaiZe"},"content":"        return name.hashCode();","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"HuaiZe":112}},{"path":"src/main/java/seedu/address/model/insurance/predicates/PlansContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.insurance.predicates;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"public class PlansContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"    private final String plan;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code PlansContainsKeywordsPredicate} to be used in the predicate test","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param keywords a user filter search input.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"    public PlansContainsKeywordsPredicate(String keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"        this.plan \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"        return plan \u003d\u003d null || StringUtil.containsPlansIgnoreCase(person.getPlans(), plan);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"                || (other instanceof PlansContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 plan.equals(((PlansContainsKeywordsPredicate) other).plan)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":2,"KnitidCeladon23":33}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"public class Meeting implements Comparable\u003cMeeting\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Meetings should be of the format \"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"            + \"\\\"description @ yyyy-mm-dd HH:MM\\\", and the description should not be blank.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    public static final String DATETIME_CONSTRAINTS \u003d \"The input date and time must be existent.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    private static final String DESCRIPTION_REGEX \u003d \".+\";","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    private static final String BLANK_SPACE \u003d \"\\\\s*\";","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    private static final String FOUR_DIGIT_REGEX \u003d \"[0-9]{4}\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    private static final String TWO_DIGIT_REGEX \u003d \"[0-9]{2}\";","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    public static final String VALIDATION_REGEX \u003d DESCRIPTION_REGEX + \"@\" + BLANK_SPACE","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"            + FOUR_DIGIT_REGEX + \"-\" + TWO_DIGIT_REGEX + \"-\" + TWO_DIGIT_REGEX + \" \"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"            + TWO_DIGIT_REGEX + \":\" + TWO_DIGIT_REGEX + BLANK_SPACE;","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    public final String original;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    public final String value;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"     * Constructs an {@code Meeting}.","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"     * @param meeting A valid meeting.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"    public Meeting(String meeting) throws IllegalArgumentException {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"        checkArgument(isValidMeeting(meeting), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"        int lastIndexOf \u003d meeting.lastIndexOf(\"@\");","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        String[] fragments \u003d new String[2];","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        fragments[0] \u003d meeting.substring(0, lastIndexOf).trim();","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"        fragments[1] \u003d meeting.substring(lastIndexOf + 1).trim();","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        LocalDateTime parsedDt \u003d generateDateTime(fragments[1], DATETIME_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"        original \u003d fragments[0] + \" @ \" + fragments[1];","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        value \u003d fragments[0];","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"        dateTime \u003d parsedDt;","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"     * Returns if a given string is a valid meeting.","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    public static boolean isValidMeeting(String meeting) {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"        return meeting.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"     * Converts the Meeting time into a datetime format","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"     * @param datetime     Meeting Time in String format","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"     * @param errorMessage Error Message if the format is invalid","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"    public static LocalDateTime generateDateTime(String datetime, String errorMessage) {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"            return LocalDateTime.parse(datetime, DateTimeFormatter.ofPattern(\"uuuu-MM-d H:m\")","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"                    .withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"        return value;","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"        return value + \" @ \" + dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"                || (other instanceof Meeting // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 dateTime.equals(((Meeting) other).dateTime)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"    public int compareTo(Meeting o) {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"        return dateTime.compareTo(o.dateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"georgepwhuang":96}},{"path":"src/main/java/seedu/address/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.exceptions.MeetingClashException;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.exceptions.NoMeetingException;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":" * A list of meetings (via {@code Person}s) that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":" *","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":" *","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"public class UniqueMeetingList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"    private final TreeMap\u003cMeeting, Person\u003e meetingMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"     * Checks if the added Person\u0027s meeting has any clashes, and returns the clashed meeting.","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"    public Optional\u003cPerson\u003e clash(Person toCheck) {","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        return toCheck.getMeeting()","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"                .map(meetingMap::get)","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"                .filter(person -\u003e !person.equals(toCheck));","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"     * Adds a person\u0027s meeting to the list","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"        if (clash(toAdd).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"            throw new MeetingClashException();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"        } else if (internalList.stream().anyMatch(person -\u003e person.equals(toAdd))) {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"        boolean sucessSet \u003d toAdd.getMeeting()","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"                .map(meeting -\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"                    meetingMap.put(meeting, toAdd);","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"                    return meetingMap.get(meeting);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"                })","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"                .map(person -\u003e person.equals(toAdd))","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"                .orElse(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        if (sucessSet) {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"            internalList.setAll(meetingMap.values());","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"     * Replaces a person in the event of a person edit or meeting edit.","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"    public void setPerson(Person original, Person updated) {","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"        requireAllNonNull(original, updated);","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"        if (original.isSamePerson(updated)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"            if (!original.getMeeting().equals(updated.getMeeting()) \u0026\u0026 clash(updated).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"                throw new MeetingClashException();","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"            boolean sucessSet \u003d original.getMeeting()","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"                    .map(meetingMap::remove)","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"                    .map(person -\u003e person.equals(original))","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"                    .orElse(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"            if (!sucessSet) {","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"                reconstructMap();","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"                return;","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"            assert original.getMeeting().equals(updated.getMeeting());","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"        boolean sucessSet \u003d updated.getMeeting()","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"                .map(meeting -\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"                    meetingMap.put(meeting, updated);","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"                    return meetingMap.get(meeting);","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"                })","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"                .map(person -\u003e person.equals(updated))","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"                .orElse(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"        if (sucessSet) {","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"            internalList.setAll(meetingMap.values());","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"            reconstructMap();","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"        boolean sucessSet \u003d toRemove.getMeeting()","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"                .map(meetingMap::remove)","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"                .map(person -\u003e person.equals(toRemove))","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"                .orElse(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"        if (sucessSet) {","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"            internalList.setAll(meetingMap.values());","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"            reconstructMap();","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"georgepwhuang"},"content":"    public void setPersons(UniqueMeetingList replacement) {","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"georgepwhuang"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"georgepwhuang"},"content":"        meetingMap.clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"georgepwhuang"},"content":"        meetingMap.putAll(replacement.meetingMap);","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"        meetingMap.clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"        internalList.setAll(meetingMap.values());","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"        persons.forEach(this::add);","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"    public String getNotifications() {","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"georgepwhuang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"georgepwhuang"},"content":"        String template \u003d \"You have a meeting with %s at %s\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"georgepwhuang"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"georgepwhuang"},"content":"            person.getMeeting()","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"georgepwhuang"},"content":"                    .map(meeting -\u003e meeting.dateTime)","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"georgepwhuang"},"content":"                    .filter(datetime -\u003e datetime.toLocalDate().equals(LocalDate.now()))","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"georgepwhuang"},"content":"                    .filter(datetime -\u003e datetime.toLocalTime().compareTo(LocalTime.now()) \u003e 0)","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"georgepwhuang"},"content":"                    .map(datetime -\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"georgepwhuang"},"content":"                            sb.append(String.format(template, person.getName().fullName,","lastModifiedDate":"2021-04-06"},{"lineNumber":144,"author":{"gitId":"georgepwhuang"},"content":"                                    datetime.toLocalTime().format(DateTimeFormatter.ofPattern(\"hh:mm a\")))));","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"georgepwhuang"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"georgepwhuang"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"georgepwhuang"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"georgepwhuang"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"georgepwhuang"},"content":"     * Should never be used but just in case of error","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"georgepwhuang"},"content":"    public void reconstructMap() {","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"georgepwhuang"},"content":"        meetingMap.clear();","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"georgepwhuang"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"georgepwhuang"},"content":"            meetingMap.put(person.getMeeting().get(), person);","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"georgepwhuang"},"content":"        throw new NoMeetingException();","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"georgepwhuang"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"georgepwhuang"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"georgepwhuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"georgepwhuang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"georgepwhuang"},"content":"                || (other instanceof UniqueMeetingList // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 internalList.equals(((UniqueMeetingList) other).internalList));","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"georgepwhuang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"georgepwhuang"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":184}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingClashException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"public class MeetingClashException extends RuntimeException {","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"    public MeetingClashException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"        super(\"There is a meeting\");","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":7}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/NoMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"public class NoMeetingException extends RuntimeException {}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"georgepwhuang":3}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Person\u0027s address in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Birthdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Person\u0027s birthdate in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"public class Birthdate {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"            \"Birthdate should be given in the form YYYY-MM-DD and be between 1900-01-01 and \"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"                    + \"the current date. It should not be blank\";","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"    public final LocalDate value;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"     * Constructs a {@code Birthdate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"     * @param birthdate A valid birthdate.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"    public Birthdate(String birthdate) throws DateTimeParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"        checkArgument(isValidBirthdate(birthdate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"        this.value \u003d LocalDate.parse(birthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"        assert this.value instanceof LocalDate : \"Birthdate should be a LocalDate object\";","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"     * Returns true if a given string is a valid birthdate.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"    public static boolean isValidBirthdate (String test) {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"            return isValidBirthdate(LocalDate.parse(test));","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"    public static boolean isValidBirthdate (LocalDate test) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"        return test.isAfter(LocalDate.parse(\"1900-01-01\").minusDays(1)) \u0026\u0026 test.isBefore(LocalDate.now().plusDays(1));","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"    public String toString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"        return value.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"                || (other instanceof Birthdate // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 value.equals(((Birthdate) other).value)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Shuyang0":65,"KnitidCeladon23":1}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Person\u0027s email in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"            + \"1. The local-part should not be blank and should only contain alphanumeric characters and \"","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"            + \"these special characters, excluding \"","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":1,"HuaiZe":2,"-":65}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"public class Gender {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"            \"Gender should be either \\\"M\\\"(male) or \\\"F\\\"(female) or \\\"N\\\"(non-binary), and it should not be blank\";","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"    public final String value;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"    public Gender(String gender) {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"        String genderLower \u003d gender.toLowerCase();","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"        String genderValue \u003d \"Placeholder\";","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"        if (genderLower.equals(\"m\") || genderLower.equals(\"male\")) {","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"            genderValue \u003d \"Male\";","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"        } else if (genderLower.equals(\"f\") || genderLower.equals(\"female\")) {","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"            genderValue \u003d \"Female\";","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"        } else if (genderLower.equals(\"n\") || genderLower.equals(\"non-binary\")) {","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"            genderValue \u003d \"Non-binary\";","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"        this.value \u003d genderValue;","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"        assert this.value.equals(\"Male\") || this.value.equals(\"Female\") || this.value.equals(\"Non-binary\")","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"                : \"Invalid value for Gender\";","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"    public static boolean isValidGender (String test) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"        String testLower \u003d test.toLowerCase();","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"        return testLower.equals(\"m\") || testLower.equals(\"f\") || testLower.equals(\"n\")","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"                || testLower.equals(\"male\") || testLower.equals(\"female\") || testLower.equals(\"non-binary\");","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"    public String toString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"        return value;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Shuyang0":60}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Person\u0027s name in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"            \"Names should not be blank and should only contain alphanumeric characters, spaces, and these special \"","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"                    + \"characters, excluding the outer parentheses, (-(),).\";","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}()\\\\-,][\\\\p{Alnum} ()\\\\-,]*\";","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"        fullName \u003d name.toUpperCase();","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":1,"HuaiZe":4,"-":55}},{"path":"src/main/java/seedu/address/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Person\u0027s notes in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNote(String)}","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"public class Note {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Note can contain any String, and it should not be blank\";","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    /*","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"     * The first character of the note must not be a whitespace,","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    public final String value;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"     * Constructs an {@code Note}.","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"     * @param note A valid note.","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"    public Note(String note) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"        checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"        value \u003d note;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    public String toString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"        return value;","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 value.equals(((Note) other).value)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shuyang0":57,"KnitidCeladon23":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Person in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"    private final Gender gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"    private final Birthdate birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"    private final List\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    //Functional fields","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    private final Optional\u003cMeeting\u003e meeting;","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"    //Insurance fields","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"    private final List\u003cInsurancePlan\u003e plans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"                  Gender gender, Birthdate birthdate, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"        this(name, phone, email, address, gender, birthdate, tags, Optional.empty(),","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"     * Full Constructor that is only called internally for testing.","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Gender gender, Birthdate birthdate,","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"                  Set\u003cTag\u003e tags, Optional\u003cMeeting\u003e meeting, List\u003cInsurancePlan\u003e plans, List\u003cNote\u003e notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"        requireAllNonNull(name, phone, email, address, gender, birthdate, tags, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"Shuyang0"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"        this.plans.addAll(plans);","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"Shuyang0"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Shuyang0"},"content":"        return gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Shuyang0"},"content":"    public Birthdate getBirthdate() {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Shuyang0"},"content":"        return birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Shuyang0"},"content":"    public List\u003cNote\u003e getNotes() {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Shuyang0"},"content":"        return Collections.unmodifiableList(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"Shuyang0"},"content":"    public int getNumNotes() {","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"Shuyang0"},"content":"        return this.notes.size();","lastModifiedDate":"2021-04-02"},{"lineNumber":98,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"Shuyang0"},"content":"    public String getNotesString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"Shuyang0"},"content":"        String noteString \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"Shuyang0"},"content":"        for (Note n : notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"Shuyang0"},"content":"            noteString +\u003d \"\\u2022 \" + n.toString() + \"\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"Shuyang0"},"content":"        if (noteString.equals(\"\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"Shuyang0"},"content":"            noteString \u003d \"No notes taken yet\";","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"Shuyang0"},"content":"        return noteString;","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"     * Returns an Optional object containing a Meeting.","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"    public Optional\u003cMeeting\u003e getMeeting() {","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"        return meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"HuaiZe"},"content":"     * Creates a Person object that is identical to the original, but contains a new Meeting.","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"    public Person setMeeting(Optional\u003cMeeting\u003e meeting) {","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plans, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"HuaiZe"},"content":"     * Returns an immutable plan set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"HuaiZe"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"HuaiZe"},"content":"    public List\u003cInsurancePlan\u003e getPlans() {","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"HuaiZe"},"content":"        return plans;","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"HuaiZe"},"content":"     * Creates a Person object that is identical to the original, but has the insurance plans contained in","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"HuaiZe"},"content":"     * the Set.","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"HuaiZe"},"content":"    public Person setPlans(List\u003cInsurancePlan\u003e plans) {","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plans, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"HuaiZe"},"content":"     * Creates a Person object that is identical to the original, but has an added InsurancePlan.","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"HuaiZe"},"content":"    public Person addPlan(InsurancePlan plan) {","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"HuaiZe"},"content":"        List\u003cInsurancePlan\u003e plansCopy \u003d new ArrayList\u003c\u003e(plans);","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"HuaiZe"},"content":"        plansCopy.add(plan);","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plansCopy, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"HuaiZe"},"content":"     * Creates a Person object that is identical to the original, but with the InsurancePlan at index removed.","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"HuaiZe"},"content":"    public Person removePlan(int zeroBasedIndex) {","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"HuaiZe"},"content":"        List\u003cInsurancePlan\u003e plansCopy \u003d new ArrayList\u003c\u003e(plans);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"HuaiZe"},"content":"        plansCopy.remove(zeroBasedIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plansCopy, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"HuaiZe"},"content":"     * Returns the string representation of the InsurancePlan at the given index in the List of insurance plans.","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"HuaiZe"},"content":"    public String getPlanString (int zeroBasedIndex) {","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"HuaiZe"},"content":"        return plans.get(zeroBasedIndex).toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"HuaiZe"},"content":"     * Returns a list of string representations of the person\u0027s insurance plans with numbering.","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"HuaiZe"},"content":"    public List\u003cString\u003e getPlanStringsList () {","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"HuaiZe"},"content":"        List\u003cString\u003e planStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"HuaiZe"},"content":"        for (int i \u003d 0; i \u003c plans.size(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"HuaiZe"},"content":"            planStrings.add((i + 1) + \". \" + plans.get(i).toString() + \" \");","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"HuaiZe"},"content":"        return planStrings;","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"Shuyang0"},"content":"     * Creates a Person object that is identical to the original, but with new note added.","lastModifiedDate":"2021-04-02"},{"lineNumber":186,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-04-02"},{"lineNumber":187,"author":{"gitId":"Shuyang0"},"content":"    public Person addNote(Note note) {","lastModifiedDate":"2021-04-02"},{"lineNumber":188,"author":{"gitId":"Shuyang0"},"content":"        List\u003cNote\u003e notesCopy \u003d new ArrayList\u003c\u003e(notes);","lastModifiedDate":"2021-04-02"},{"lineNumber":189,"author":{"gitId":"Shuyang0"},"content":"        notesCopy.add(note);","lastModifiedDate":"2021-04-02"},{"lineNumber":190,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plans, notesCopy);","lastModifiedDate":"2021-04-02"},{"lineNumber":191,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":192,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":193,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-04-02"},{"lineNumber":194,"author":{"gitId":"Shuyang0"},"content":"     * Creates a Person object that is identical to the original, but with no notes.","lastModifiedDate":"2021-04-02"},{"lineNumber":195,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"Shuyang0"},"content":"    public Person clearNotes() {","lastModifiedDate":"2021-04-02"},{"lineNumber":197,"author":{"gitId":"Shuyang0"},"content":"        List\u003cNote\u003e notesEmpty \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":198,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plans, notesEmpty);","lastModifiedDate":"2021-04-02"},{"lineNumber":199,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"Shuyang0"},"content":"     * Creates a Person object that is identical to the original, but with notes as provided.","lastModifiedDate":"2021-04-02"},{"lineNumber":203,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"Shuyang0"},"content":"    public Person setNotes(List\u003cNote\u003e notesNew) {","lastModifiedDate":"2021-04-02"},{"lineNumber":205,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plans, notesNew);","lastModifiedDate":"2021-04-02"},{"lineNumber":206,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":207,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":239,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender())","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 otherPerson.getBirthdate().equals(getBirthdate())","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"HuaiZe"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 otherPerson.getPlans().equals(getPlans())","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"Shuyang0"},"content":"                \u0026\u0026 otherPerson.getNotes().equals(getNotes());","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":249,"author":{"gitId":"Shuyang0"},"content":"        return Objects.hash(name, phone, email, address, gender, birthdate, tags, meeting, plans, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":261,"author":{"gitId":"Shuyang0"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"Shuyang0"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"Shuyang0"},"content":"                .append(getGender())","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"Shuyang0"},"content":"                .append(\"; Birthdate: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"Shuyang0"},"content":"                .append(getBirthdate());","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":272,"author":{"gitId":"HuaiZe"},"content":"        List\u003cInsurancePlan\u003e plans \u003d getPlans();","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"HuaiZe"},"content":"        if (!plans.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"HuaiZe"},"content":"            builder.append(\"; Plans: \");","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"HuaiZe"},"content":"            plans.forEach(builder::append);","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shuyang0":80,"georgepwhuang":25,"KnitidCeladon23":1,"HuaiZe":57,"-":116}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Person\u0027s phone number in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"            \"Phone numbers should only contain numbers, and it should be 3 to 50 digits long.\";","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,50}\";","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":1,"HuaiZe":2,"-":50}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import java.time.MonthDay;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"    public String getNotifications() {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"        String template \u003d \"%s\u0027s birthday is coming up in %d days.\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"        int year \u003d today.getYear();","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"        internalList.stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"                .map(person -\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"                    MonthDay birthday \u003d MonthDay.from(person.getBirthdate().value);","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"georgepwhuang"},"content":"                    LocalDate nextBday \u003d birthday.atYear(year);","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"georgepwhuang"},"content":"                    if (nextBday.isBefore(today)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"georgepwhuang"},"content":"                        nextBday \u003d birthday.atYear(year + 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"georgepwhuang"},"content":"                    }","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"georgepwhuang"},"content":"                    long period \u003d ChronoUnit.DAYS.between(today, nextBday);","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"georgepwhuang"},"content":"                    return new Pair\u003c\u003e(person, period);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"georgepwhuang"},"content":"                })","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"                .sorted(Comparator.comparing(Pair::getValue))","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"                .forEach(pair -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"                    if (pair.getValue() \u003d\u003d 0) {","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"                        sb.append(String.format(\"It\u0027s %s\u0027s birthday today!!\\n\", pair.getKey().getName().fullName));","lastModifiedDate":"2021-04-06"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"                    } else if (pair.getValue() \u003d\u003d 1) {","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"                        sb.append(String.format(\"%s\u0027s birthday is tomorrow.\\n\", pair.getKey().getName().fullName));","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"                    } else if (pair.getValue() \u003e\u003d 2 \u0026\u0026 pair.getValue() \u003c\u003d 14) {","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"                        sb.append(String.format(template, pair.getKey().getName().fullName, pair.getValue()));","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"                    }","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"                });","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"georgepwhuang":35,"-":136}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"HuaiZe":1,"-":10}},{"path":"src/main/java/seedu/address/model/person/predicates/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"    private final String address;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code AddressContainsKeywordsPredicate} to be used in the predicate test","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param keywords a user filter search input.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"    public AddressContainsKeywordsPredicate(String keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"        this.address \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"        return address \u003d\u003d null || StringUtil.containsWordIgnoreCase(person.getAddress().value, address);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 address.equals(((AddressContainsKeywordsPredicate) other).address)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":2,"KnitidCeladon23":33}},{"path":"src/main/java/seedu/address/model/person/predicates/AgeIsInRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import java.time.Period;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.logic.parser.AgeParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"public class AgeIsInRangePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"    private final String age;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"    private final List\u003cInteger\u003e ageRangeList;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code AgeIsInRangePredicate} to be used in the predicate test","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param keywords a user filter search input.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"    public AgeIsInRangePredicate(String keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"        this.age \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"        this.ageRangeList \u003d new AgeParser(age).value();","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"        boolean isInAgeRange \u003d ageRangeList.size() \u003d\u003d 1","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"                ? Period.between(person.getBirthdate().value, LocalDate.now()).getYears() \u003d\u003d ageRangeList.get(0)","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"                : Period.between(person.getBirthdate().value, LocalDate.now()).getYears() \u003e\u003d ageRangeList.get(0)","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 Period.between(person.getBirthdate().value, LocalDate.now()).getYears() \u003c\u003d ageRangeList.get(1);","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"        return isInAgeRange;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KnitidCeladon23"},"content":"                || (other instanceof AgeIsInRangePredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 age.equals(((AgeIsInRangePredicate) other).age)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":2,"KnitidCeladon23":43}},{"path":"src/main/java/seedu/address/model/person/predicates/AttributeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.logic.parser.FilterKeywordChecker;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.insurance.predicates.PlansContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.tag.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"public class AttributeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code AttributeContainsKeywordsPredicate} to be used in the predicate test","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param keywords a user filter search input.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"    public AttributeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"    public String getKeywords() {","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"        String keywordString \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"        for (String s : keywords) {","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"            keywordString \u003d keywordString + s + \" \";","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"        return keywordString;","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"        return keywords.stream().allMatch(keyword -\u003e {","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"            FilterKeywordChecker input \u003d new FilterKeywordChecker(keyword);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"            if (input.isTag()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"                return new TagsContainsKeywordsPredicate(input.value()).test(person);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"            } else if (input.isAddress()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KnitidCeladon23"},"content":"                return new AddressContainsKeywordsPredicate(input.value()).test(person);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KnitidCeladon23"},"content":"            } else if (input.isGender()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"                return new GenderContainsKeywordsPredicate(input.value()).test(person);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"KnitidCeladon23"},"content":"            } else if (input.isPlan()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"KnitidCeladon23"},"content":"                return new PlansContainsKeywordsPredicate(input.value()).test(person);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"KnitidCeladon23"},"content":"            } else if (input.isAge()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"KnitidCeladon23"},"content":"                return new AgeIsInRangePredicate(input.value()).test(person);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"KnitidCeladon23"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"KnitidCeladon23"},"content":"                return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"KnitidCeladon23"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"KnitidCeladon23"},"content":"        });","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"KnitidCeladon23"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"KnitidCeladon23"},"content":"                || (other instanceof AttributeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 keywords.equals(((AttributeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":4,"KnitidCeladon23":58}},{"path":"src/main/java/seedu/address/model/person/predicates/GenderContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"public class GenderContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"    private final String gender;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code GenderContainsKeywordsPredicate} to be used in the predicate test","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param keywords a user filter search input.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"    public GenderContainsKeywordsPredicate(String keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"        this.gender \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"        if (gender.equalsIgnoreCase(\"M\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"            return gender \u003d\u003d null || StringUtil.containsWordIgnoreCase(person.getGender().value, \"Male\")","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"                    || StringUtil.containsWordIgnoreCase(person.getGender().value, gender);","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"        } else if (gender.equalsIgnoreCase(\"N\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"            return gender \u003d\u003d null || StringUtil.containsWordIgnoreCase(person.getGender().value, \"Non-binary\")","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"                    || StringUtil.containsWordIgnoreCase(person.getGender().value, gender);","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"        } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"            return gender \u003d\u003d null || StringUtil.containsWordIgnoreCase(person.getGender().value, \"Female\")","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"                    || StringUtil.containsWordIgnoreCase(person.getGender().value, gender);","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KnitidCeladon23"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KnitidCeladon23"},"content":"                || (other instanceof GenderContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 gender.equals(((GenderContainsKeywordsPredicate) other).gender)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":2,"KnitidCeladon23":41}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"georgepwhuang":2,"-":30}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":" * Represents a Tag in Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KnitidCeladon23":1,"-":53}},{"path":"src/main/java/seedu/address/model/tag/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.tag.predicates;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KnitidCeladon23"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KnitidCeladon23"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KnitidCeladon23"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KnitidCeladon23"},"content":"    private final String tag;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KnitidCeladon23"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KnitidCeladon23"},"content":"     * Constructs an {@code TagsContainsKeywordsPredicate} to be used in the predicate test","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KnitidCeladon23"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KnitidCeladon23"},"content":"     * @param keywords a user filter search input.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KnitidCeladon23"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KnitidCeladon23"},"content":"    public TagsContainsKeywordsPredicate(String keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"KnitidCeladon23"},"content":"        this.tag \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KnitidCeladon23"},"content":"        return tag \u003d\u003d null || StringUtil.containsTagIgnoreCase(person.getTags(), tag);","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"KnitidCeladon23"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KnitidCeladon23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KnitidCeladon23"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KnitidCeladon23"},"content":"                || (other instanceof TagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KnitidCeladon23"},"content":"                \u0026\u0026 tag.equals(((TagsContainsKeywordsPredicate) other).tag)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KnitidCeladon23"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KnitidCeladon23"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KnitidCeladon23"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":2,"KnitidCeladon23":35}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Gender(\"M\"), new Birthdate(\"1992-05-06\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"                getTagSet(\"investment\"))","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"                    .addPlan(new InsurancePlan(\"Guaranteed Protect Plus $4000.80\"))","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"                    .setMeeting(Optional.of(new Meeting(\"Retirement Planning @ 2022-10-25 15:00\"))),","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Gender(\"F\"), new Birthdate(\"1995-12-24\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"                getTagSet(\"life\", \"medical\"))","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"                .addNote(new Note(\"Received huge inheritance, wants to invest\"))","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"                .setMeeting(Optional.of(new Meeting(\"Investment Crash Course @ 2021-05-15 18:00\"))),","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Gender(\"F\"), new Birthdate(\"1990-01-06\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"                getTagSet(\"life\"))","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"                .addPlan(new InsurancePlan(\"Covid-19 Protection $1000\")),","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Gender(\"M\"), new Birthdate(\"1975-07-09\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"                getTagSet(\"investment\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"            new Person(new Name(\"Jeff Liu\"), new Phone(\"92624417\"), new Email(\"jeffliu@example.com\"),","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"                new Address(\"10 Buangkok View, Buangkok Green\"), new Gender(\"M\"), new Birthdate(\"1985-06-30\"),","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"                getTagSet(\"life\"))","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"     * Returns a list of insurance plans containing the plans given.","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"HuaiZe"},"content":"    public static List\u003cInsurancePlan\u003e getPlanList(String... strings) {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"HuaiZe"},"content":"                .map(InsurancePlan::new)","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"Shuyang0"},"content":"     * Returns a list of notes.","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"Shuyang0"},"content":"    public static List\u003cNote\u003e getNoteList(String... strings) {","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"Shuyang0"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"Shuyang0"},"content":"                .map(Note::new)","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Shuyang0"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Shuyang0":18,"HuaiZe":23,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"class JsonAdaptedNote {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    private final String noteContent;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given {@code noteContent}.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    public JsonAdaptedNote(String noteContent) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"        this.noteContent \u003d noteContent;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"     * Converts a given {@code note} into this class for Jackson use.","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"        noteContent \u003d source.toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"    @JsonValue","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"    public String getNoteContent() {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"        return noteContent;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"        if (!Note.isValidNote(noteContent)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"            throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"        return new Note(noteContent);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shuyang0":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"    private final String gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"    private final String birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"    private final String meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"    private final List\u003cJsonAdaptedPlan\u003e plans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"                             @JsonProperty(\"gender\") String gender, @JsonProperty(\"birthdate\") String birthdate,","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"                             @JsonProperty(\"meeting\") String meeting,","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"                             @JsonProperty(\"plans\") List\u003cJsonAdaptedPlan\u003e plans,","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"                             @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Shuyang0"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"        if (plans !\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"            this.plans.addAll(plans);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Shuyang0"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Shuyang0"},"content":"        birthdate \u003d source.getBirthdate().value.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"        meeting \u003d source.getMeeting().map(x -\u003e x.original).orElse(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"        plans.addAll(source.getPlans().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"HuaiZe"},"content":"                .map(JsonAdaptedPlan::new)","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"HuaiZe"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"Shuyang0"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"Shuyang0"},"content":"                .map(JsonAdaptedNote::new)","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Shuyang0"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Shuyang0"},"content":"        final List\u003cNote\u003e personNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"Shuyang0"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"Shuyang0"},"content":"            personNotes.add(note.toModelType());","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":"        final List\u003cInsurancePlan\u003e personPlans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"HuaiZe"},"content":"        for (JsonAdaptedPlan plan : plans) {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"HuaiZe"},"content":"            personPlans.add(plan.toModelType());","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"Shuyang0"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"Shuyang0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"Shuyang0"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"Shuyang0"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"Shuyang0"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"Shuyang0"},"content":"        if (birthdate \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"Shuyang0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"Shuyang0"},"content":"                    Birthdate.class.getSimpleName()));","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"Shuyang0"},"content":"        if (!Birthdate.isValidBirthdate(birthdate)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"Shuyang0"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"Shuyang0"},"content":"        final Birthdate modelBirthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"georgepwhuang"},"content":"        final Optional\u003cMeeting\u003e modelMeeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":168,"author":{"gitId":"georgepwhuang"},"content":"        if (meeting \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"georgepwhuang"},"content":"            modelMeeting \u003d Optional.empty();","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"        } else if (!Meeting.isValidMeeting(meeting)) {","lastModifiedDate":"2021-04-06"},{"lineNumber":171,"author":{"gitId":"georgepwhuang"},"content":"            throw new IllegalValueException(Meeting.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-06"},{"lineNumber":172,"author":{"gitId":"georgepwhuang"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"georgepwhuang"},"content":"            modelMeeting \u003d Optional.of(meeting).map(Meeting::new);","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"Shuyang0"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelGender, modelBirthdate,","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"Shuyang0"},"content":"                modelTags, modelMeeting, personPlans, personNotes);","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"georgepwhuang":16,"Shuyang0":44,"HuaiZe":16,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":" * Jackson-friendly version of {@link InsurancePlan}.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"class JsonAdaptedPlan {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"    private final String planString;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    public JsonAdaptedPlan(String planString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"        this.planString \u003d planString;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    public JsonAdaptedPlan(InsurancePlan source) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"        planString \u003d source.original;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    @JsonValue","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"    public String getPlanString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"        return planString;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"     * Converts this Jackson-friendly adapted plan object into the model\u0027s {@code InsurancePlan} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted plan.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"    public InsurancePlan toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"        if (!InsurancePlan.isValidPlan(planString)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"            throw new IllegalValueException(InsurancePlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"        if (!InsurancePlan.isValidAmount(planString.split(\" \\\\$\", 2)[1].trim())) {","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"            throw new IllegalValueException(InsurancePlan.PREMIUM_CONSTRAINTS);","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"        return new InsurancePlan(planString);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"georgepwhuang":3,"HuaiZe":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Client list contains duplicate clients.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MESSAGE_CLASH_MEETING \u003d \"Meeting list contains clashed meetings.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"KnitidCeladon23"},"content":"     * Converts Link.me into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"            if (addressBook.clash(person).isPresent()) {","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"                throw new IllegalValueException(MESSAGE_CLASH_MEETING);","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"georgepwhuang":5,"KnitidCeladon23":1,"HuaiZe":1,"-":58}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"KnitidCeladon23"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Link.me methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KnitidCeladon23":1,"-":78}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"georgepwhuang":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"    private NotifWindow notifWindow;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"    private NotesWindow notesWindow;","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"        notifWindow \u003d new NotifWindow(getPrimaryStage());","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"        notesWindow \u003d new NotesWindow(getPrimaryStage());","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getMeetingList());","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"georgepwhuang"},"content":"            logger.info(\"Displaying help window...\");","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"georgepwhuang"},"content":"     * Opens the notification window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"georgepwhuang"},"content":"    public void handleNotif() {","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"georgepwhuang"},"content":"        notifWindow.setMessage(logic.getNotifications());","lastModifiedDate":"2021-04-06"},{"lineNumber":169,"author":{"gitId":"georgepwhuang"},"content":"        notifWindow.show();","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"        logger.info(\"Displaying notif window...\");","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"georgepwhuang"},"content":"     * Displays notes to the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"Shuyang0"},"content":"    public void handleNotes(Person personWithNotes) {","lastModifiedDate":"2021-04-02"},{"lineNumber":178,"author":{"gitId":"georgepwhuang"},"content":"        notesWindow.setMessage(personWithNotes);","lastModifiedDate":"2021-04-06"},{"lineNumber":179,"author":{"gitId":"georgepwhuang"},"content":"        notesWindow.show();","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"georgepwhuang"},"content":"        logger.info(\"Displaying notes window...\");","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"georgepwhuang"},"content":"            if (commandResult.isShowNotif()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"georgepwhuang"},"content":"                handleNotif();","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"Shuyang0"},"content":"            if (commandResult.isShowNote()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"Shuyang0"},"content":"                handleNotes(commandResult.getPersonWithNotes());","lastModifiedDate":"2021-04-02"},{"lineNumber":228,"author":{"gitId":"Shuyang0"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Shuyang0":6,"georgepwhuang":35,"-":196}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"    public final Person person;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    private Label id;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"    private Label name;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"    private Label dateTime;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    private Label description;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"     * Creates a {@code MeetingCard} with the given {@code Person} and index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"    public MeetingCard(Person person, int displayedIndex) {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"        name.setText(\"Meeting with \" + person.getName().fullName);","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"        name.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"        dateTime.setText(person.getMeeting().map(Meeting::getDateTime).orElseThrow());","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"        dateTime.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"        description.setText(person.getMeeting().map(Meeting::getDescription).orElseThrow());","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"        description.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"        return person.equals(card.person)","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"                \u0026\u0026 dateTime.equals(card.dateTime);","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":70}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"    private ListView\u003cPerson\u003e meetingListView;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    public MeetingListPanel(ObservableList\u003cPerson\u003e meetingList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    class MeetingListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"                setText(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"                setGraphic(new MeetingCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":49}},{"path":"src/main/java/seedu/address/ui/NotesWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":" * Window that shows notes.","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"public class NotesWindow extends Alert {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"    private final ScrollPane scroll;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    private final Label label;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"     * Creates a new NotesWindow.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"     * @param owner Stage to use as the root of the NotesWindow.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    public NotesWindow(Stage owner) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"        super(AlertType.INFORMATION);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"        getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"        setTitle(\"Notes\");","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"        initOwner(owner);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"        scroll \u003d new ScrollPane();","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        label \u003d new Label();","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"        getDialogPane().setMaxWidth(500);","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"        label.setWrapText(true);","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        label.setMaxWidth(500);","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setPrefViewportWidth(500);","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setFitToWidth(true);","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setPrefViewportHeight(400);","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"     * Sets the displayed message to the notes.","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"    public void setMessage(Person personWithNotes) {","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        setHeaderText(String.format(\"Notes for %s:\", personWithNotes.getName()));","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"        label.setText(personWithNotes.getNotesString());","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setContent(label);","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"        getDialogPane().setContent(scroll);","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shuyang0":3,"georgepwhuang":41}},{"path":"src/main/java/seedu/address/ui/NotifWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":" * Window that shows notifications.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"public class NotifWindow extends Alert {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    private final ScrollPane scroll;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"    private final Label label;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"     * Creates a new NotifWindow.","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"     * @param owner Stage to use as the root of the NotifWindow.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    public NotifWindow(Stage owner) {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"        super(AlertType.INFORMATION);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"        getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"        setTitle(\"Notification\");","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"        setHeaderText(\"Welcome to Link.me!\");","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"        initOwner(owner);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"        scroll \u003d new ScrollPane();","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        label \u003d new Label();","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"        getDialogPane().setMaxWidth(400);","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"        label.setWrapText(true);","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        label.setMaxWidth(400);","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setPrefViewportWidth(400);","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setFitToWidth(true);","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setPrefViewportHeight(300);","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"     * Sets the displayed message to the notifications.","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"    public void setMessage(String message) {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        label.setText(message);","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"        scroll.setContent(label);","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        getDialogPane().setContent(scroll);","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"georgepwhuang":43}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"    private Label gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"    private Label birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"    private Label numNotes;","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"    @FXML","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"    private FlowPane plans;","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"        id.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        name.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"        phone.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        address.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"        email.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"Shuyang0"},"content":"        gender.setText(person.getGender().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"        gender.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"Shuyang0"},"content":"        if (person.getNumNotes() \u003d\u003d 0) {","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"Shuyang0"},"content":"            numNotes.setText(\"\\u25B6 You have no notes\");","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"Shuyang0"},"content":"        } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"Shuyang0"},"content":"            numNotes.setText(String.format(\"\\u25B6 You have %d note%s\",","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"Shuyang0"},"content":"                    person.getNumNotes(), person.getNumNotes() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"Shuyang0"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"Shuyang0"},"content":"        birthdate.setText(\"DOB: \" + person.getBirthdate().value.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"        tags.getChildren().forEach(child -\u003e {","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"            if (child instanceof Label) {","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"                Label label \u003d (Label) child;","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"                label.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"                label.setMaxWidth(300);","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"        });","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"        person.getPlanStringsList()","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"                .forEach(plan -\u003e plans.getChildren().add(new Label(plan)));","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"        plans.getChildren().forEach(child -\u003e {","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"            if (child instanceof Label) {","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"                Label label \u003d (Label) child;","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"                label.setWrapText(true);","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"                label.setMaxWidth(200);","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"            }","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"        });","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Shuyang0":14,"georgepwhuang":21,"HuaiZe":3,"-":77}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/white_logo.png\";","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"            logger.info(\"Filling inner components...\");","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"            mainWindow.handleNotif();","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"georgepwhuang":3,"-":88}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"georgepwhuang":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"    -fx-font-size: 17px;","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":".cell_medium_label {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":360,"author":{"gitId":"georgepwhuang"},"content":"#plans {","lastModifiedDate":"2021-03-31"},{"lineNumber":361,"author":{"gitId":"georgepwhuang"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-31"},{"lineNumber":362,"author":{"gitId":"georgepwhuang"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":363,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":364,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":365,"author":{"gitId":"georgepwhuang"},"content":"#plans .label {","lastModifiedDate":"2021-03-31"},{"lineNumber":366,"author":{"gitId":"georgepwhuang"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":367,"author":{"gitId":"georgepwhuang"},"content":"    -fx-background-color: crimson;","lastModifiedDate":"2021-03-31"},{"lineNumber":368,"author":{"gitId":"georgepwhuang"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":369,"author":{"gitId":"georgepwhuang"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"georgepwhuang"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":371,"author":{"gitId":"georgepwhuang"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-03-31"},{"lineNumber":372,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"georgepwhuang":21,"-":351}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"georgepwhuang":3,"-":36}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"         title\u003d\"Link.me\" minWidth\u003d\"900\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"        \u003cImage url\u003d\"@/images/white_logo.png\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"                           minHeight\u003d\"120\" prefHeight\u003d\"120\" maxHeight\u003d\"120\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"                \u003cHBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"850\" prefWidth\u003d\"1000\"","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"                      HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" minWidth\u003d\"550\" prefWidth\u003d\"800\"","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"                               HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"                    \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" minWidth\u003d\"300\" prefWidth\u003d\"400\"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"                               HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"georgepwhuang":21,"HuaiZe":1,"-":49}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$dateTime\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":32}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"    \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":7}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"            \u003cGridPane\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"                \u003cVBox GridPane.columnIndex\u003d\"0\" GridPane.hgrow\u003d\"ALWAYS\" minWidth\u003d\"300\" prefWidth\u003d\"300\" \u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"                    \u003cFlowPane fx:id\u003d\"tags\" minWidth\u003d\"300\" prefWidth\u003d\"300\" /\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"                    \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"                    \u003cLabel fx:id\u003d\"birthdate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthdate\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"                    \u003cLabel fx:id\u003d\"numNotes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numNotes\"/\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"                \u003cVBox GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"NEVER\" minWidth\u003d\"200\" prefWidth\u003d\"200\" maxWidth\u003d\"200\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"                    \u003cFlowPane fx:id\u003d\"plans\" minWidth\u003d\"200\" prefWidth\u003d\"200\" maxWidth\u003d\"200\"/\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"georgepwhuang":9,"Shuyang0":3,"-":33}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"georgepwhuang":1,"-":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"georgepwhuang":2,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"georgepwhuang":1,"-":10}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1990-01-01\"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Non-binary\",","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"2001-10-30\"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Shuyang0":6,"-":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1990-01-01\"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Shuyang0":3,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1992-02-02\",","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"    \"tagged\": [ \"investment\" ]","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1992-02-02\"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Shuyang0":6,"-":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1998-06-15\"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Shuyang0":3,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1992-02-02\",","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"    \"tagged\" : [ \"investment\" ]","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1996-09-30\",","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"    \"tagged\" : [ \"life\", \"medical\" ]","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1965-08-09\",","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Non-binary\",","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1990-10-10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"    \"tagged\" : [ \"investment\" ]","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"2000-01-05\",","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1950-01-02\",","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"    \"birthdate\" : \"1945-10-10\",","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Shuyang0":17,"-":43}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"KnitidCeladon23"},"content":"  \"addressBookFilePath\" : \"linkme.json\"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KnitidCeladon23":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"KnitidCeladon23"},"content":"  \"addressBookFilePath\" : \"linkme.json\"","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KnitidCeladon23":1,"-":10}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"        assertNotNull(AppUtil.getImage(\"/images/white_logo.png\"));","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"georgepwhuang":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"KnitidCeladon23"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"linkme.json\"));","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"HuaiZe"},"content":"                new JsonAddressBookIoExceptionThrowingStub(","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"HuaiZe"},"content":"                        temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"HuaiZe"},"content":"                + ADDRESS_DESC_AMY + GENDER_DESC_AMY + BIRTHDATE_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KnitidCeladon23":1,"HuaiZe":5,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"        public Optional\u003cPerson\u003e clash(Person person) {","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"georgepwhuang"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"georgepwhuang"},"content":"        public String getNotifications() {","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"georgepwhuang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"georgepwhuang":11,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, Optional.empty(), false)));","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, Optional.empty(), false)));","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        // different showNotif value -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, Optional.empty(), false)));","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, Optional.empty(), true)));","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"                false, Optional.empty(), false).hashCode());","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"        // different showNotif value -\u003e returns different hashcode","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"                true, Optional.empty(), false).hashCode());","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"                false, Optional.empty(), true).hashCode());","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Shuyang0":12,"georgepwhuang":4,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"    public static final String VALID_GENDER_AMY \u003d \"Female\";","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    public static final String VALID_GENDER_BOB \u003d \"Male\";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"2000-01-05\";","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"1960-05-08\";","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"    public static final String VALID_TAG_LIFE \u003d \"life\";","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"    public static final String VALID_TAG_MEDICAL \u003d \"medical\";","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"    public static final String VALID_MEETING_PRANK \u003d \"Prank @ 4023-04-01 18:00\";","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    public static final String VALID_MEETING_STH \u003d \"Something @ 4034-03-06 12:45\";","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    public static final String VALID_MEETING_CLASH_PRANK \u003d \"Clashes with Prank @ 4023-04-01 18:00\";","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"    public static final String BIRTHDATE_DESC_AMY \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"    public static final String BIRTHDATE_DESC_BOB \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"    public static final String TAG_DESC_LIFE \u003d \" \" + PREFIX_TAG + VALID_TAG_LIFE;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"    public static final String TAG_DESC_MEDICAL \u003d \" \" + PREFIX_TAG + VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MEETING_DESC_PRANK \u003d \" \" + PREFIX_MEETING + VALID_MEETING_PRANK;","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MEETING_DESC_STH \u003d \" \" + PREFIX_MEETING + VALID_MEETING_STH;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"    public static final String MEETING_DESC_CLASH_PRANK \u003d \" \" + PREFIX_MEETING + VALID_MEETING_CLASH_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"Shuyang0"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"Z\"; // not a valid gender","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Shuyang0"},"content":"    public static final String INVALID_BIRTHDATE_DESC \u003d \" \" + PREFIX_BIRTHDATE + \"2059-01-01\"; // cannot be unborn","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Shuyang0"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"life*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"    public static final String INVALID_MEETING_DESC \u003d \" \" + PREFIX_MEETING + \"Prank @ Tomorrow\"; // not datetime format","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Shuyang0"},"content":"                .withGender(VALID_GENDER_AMY).withBirthdate(VALID_BIRTHDATE_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Shuyang0"},"content":"                .withTags(VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"Shuyang0"},"content":"                .withGender(VALID_GENDER_BOB).withBirthdate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Shuyang0"},"content":"                .withTags(VALID_TAG_LIFE, VALID_TAG_MEDICAL).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"KnitidCeladon23"},"content":"     * - Link.me, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-04-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"KnitidCeladon23"},"content":"     * {@code model}\u0027s Link.me.","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Shuyang0":21,"georgepwhuang":9,"KnitidCeladon23":2,"-":118}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LIFE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"                .withTags(VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"KnitidCeladon23"},"content":"     * but smaller than size of Link.me","lastModifiedDate":"2021-04-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Shuyang0":3,"KnitidCeladon23":1,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_MEDICAL).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Shuyang0":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"                false, Optional.empty(), true);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Shuyang0":4,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"georgepwhuang":1,"-":82}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true,","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"                false, Optional.empty(), false);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Shuyang0":4,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"/*package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.NoteCommand.MESSAGE_VIEW_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_VIEW;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"public class NoteCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"    public void execute_view_note_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_VIEW_SUCCESS,","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"                false, false, Optional.empty(),false);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"        assertCommandSuccess(new NoteCommand(Index.fromZeroBased(0), PREFIX_NOTE_VIEW, new Note(\"placeholder\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"                model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"}*/","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shuyang0":28}},{"path":"src/test/java/seedu/address/logic/commands/NotifCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.NotifCommand.SHOWING_NOTIF_MESSAGE;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"public class NotifCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_notif_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_NOTIF_MESSAGE, false,","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"                true, Optional.empty(), false);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandSuccess(new NotifCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"georgepwhuang":19,"Shuyang0":4}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_STH;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_CLASH_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_PRANK;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_STH;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"class ScheduleCommandTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"    void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"        Person personToSchedule \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        Person editedPerson \u003d personInList.withMeeting(VALID_MEETING_STH).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_SECOND_PERSON, MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"                String.format(ScheduleCommand.MESSAGE_SCHEDULE_PERSON_SUCCESS, personToSchedule.getName(), MEETING_STH);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        expectedModel.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"        Person personToSchedule \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"        Person editedPerson \u003d personInList.withMeeting(VALID_MEETING_STH).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"                String.format(ScheduleCommand.MESSAGE_SCHEDULE_PERSON_SUCCESS, personToSchedule.getName(), MEETING_STH);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"        expectedModel.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_meetingClash_throwsCommandException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, MEETING_PRANK);","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"        Person personToSchedule \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"        Person editedPerson \u003d personInList.withMeeting(VALID_MEETING_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"        expectedModel.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"                String.format(ScheduleCommand.MESSAGE_SCHEDULE_PERSON_SUCCESS,","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"                        personToSchedule.getName(), MEETING_PRANK);","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleCommandSecond \u003d new ScheduleCommand(INDEX_SECOND_PERSON, MEETING_CLASH_PRANK);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"        String expectedMessageSecond \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"                String.format(ScheduleCommand.MESSAGE_SCHEDULE_CONFLICT_FAILURE,","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"                        VALID_MEETING_PRANK, editedPerson.getName().fullName);","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandFailure(scheduleCommandSecond, model, expectedMessageSecond);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"    void testEquals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleFirstSthCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleSecondSthCommand \u003d new ScheduleCommand(INDEX_SECOND_PERSON, MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleFirstPrankCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, MEETING_PRANK);","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"georgepwhuang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(scheduleFirstSthCommand.equals(scheduleFirstSthCommand));","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"georgepwhuang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand scheduleFirstSthCommandCopy \u003d new ScheduleCommand(INDEX_FIRST_PERSON, MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(scheduleFirstSthCommand.equals(scheduleFirstSthCommandCopy));","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(scheduleFirstSthCommandCopy.equals(1));","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(scheduleFirstSthCommandCopy.equals(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(scheduleFirstSthCommandCopy.equals(scheduleSecondSthCommand));","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(scheduleFirstSthCommandCopy.equals(scheduleFirstPrankCommand));","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"georgepwhuang":134}},{"path":"src/test/java/seedu/address/logic/commands/UnscheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_PRANK;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_STH;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"public class UnscheduleCommandTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_nonEmptyAddressBook_clearAllMeeting() {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        Person personToSchedule;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"        PersonBuilder personInList;","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"        Person editedPerson;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        personToSchedule \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"        editedPerson \u003d personInList.withMeeting(VALID_MEETING_STH).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        personToSchedule \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"        personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        editedPerson \u003d personInList.withMeeting(VALID_MEETING_PRANK).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandSuccess(new UnscheduleCommand(null, true, false), model,","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"                UnscheduleCommand.MESSAGE_UNSCHEDULE_ALL_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_nonEmptyAddressBook_removeExpiredMeeting() {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"        Person personToSchedule;","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"        PersonBuilder personInList;","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"        Person editedPerson;","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"        String pastMeeting \u003d \"Past @ \"","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"                + LocalDateTime.MIN.withYear(1900).format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"        String futureMeeting \u003d \"Future @ \"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"                + LocalDateTime.MAX.withYear(9999).format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"        personToSchedule \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"        personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"        editedPerson \u003d personInList.withMeeting(pastMeeting).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"        personToSchedule \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"        personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"        editedPerson \u003d personInList.withMeeting(futureMeeting).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"        expectedModel.setPerson(personToSchedule, editedPerson);","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandSuccess(new UnscheduleCommand(null, false, true), model,","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"                UnscheduleCommand.MESSAGE_UNSCHEDULE_EXPIRED_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_nonEmptyAddressBook_removeSelectedMeeting() {","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"        Person personToScheduleA \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"        PersonBuilder personInListA \u003d new PersonBuilder(personToScheduleA);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"        Person editedPersonA \u003d personInListA.withMeeting(VALID_MEETING_PRANK).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToScheduleA, editedPersonA);","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"        Person personToScheduleB \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"        PersonBuilder personInListB \u003d new PersonBuilder(personToScheduleB);","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"        Person editedPersonB \u003d personInListB.withMeeting(VALID_MEETING_STH).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"        model.setPerson(personToScheduleB, editedPersonB);","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"        expectedModel.setPerson(personToScheduleB, editedPersonB);","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandSuccess(new UnscheduleCommand(INDEX_FIRST_PERSON, false, false), model,","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"                String.format(UnscheduleCommand.MESSAGE_UNSCHEDULE_ONE_SUCCESS, personToScheduleA.getName()),","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"                expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"    public void execute_nonEmptyAddressBook_throwCommandException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"        assertCommandFailure(new UnscheduleCommand(INDEX_FIRST_PERSON, false, false), model,","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"                Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"georgepwhuang"},"content":"    void testEquals() {","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"georgepwhuang"},"content":"        UnscheduleCommand unscheduleFirstCommand \u003d new UnscheduleCommand(INDEX_FIRST_PERSON, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"georgepwhuang"},"content":"        UnscheduleCommand unscheduleSecondCommand \u003d new UnscheduleCommand(INDEX_SECOND_PERSON, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"georgepwhuang"},"content":"        UnscheduleCommand unscheduleAllCommand \u003d new UnscheduleCommand(null, true, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"georgepwhuang"},"content":"        UnscheduleCommand unscheduleExpiredCommand \u003d new UnscheduleCommand(null, true, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"georgepwhuang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(unscheduleFirstCommand.equals(unscheduleFirstCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"        UnscheduleCommand unscheduleFirstCommandCopy \u003d new UnscheduleCommand(INDEX_FIRST_PERSON, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(unscheduleFirstCommand.equals(unscheduleFirstCommandCopy));","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(unscheduleFirstCommand.equals(1));","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(unscheduleFirstCommand.equals(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(unscheduleFirstCommand.equals(unscheduleSecondCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"georgepwhuang"},"content":"        // different attributes -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(unscheduleSecondCommand.equals(unscheduleAllCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(unscheduleSecondCommand.equals(unscheduleExpiredCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":139}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDATE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_LIFE;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LIFE;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"                        + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"                        + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"                        + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":"                        + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"HuaiZe"},"content":"                        + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"HuaiZe"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"HuaiZe"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_LIFE, VALID_TAG_MEDICAL)","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"                        + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_MEDICAL + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"HuaiZe"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"HuaiZe"},"content":"                + GENDER_DESC_AMY + BIRTHDATE_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"Shuyang0"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_MEDICAL + TAG_DESC_LIFE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"Shuyang0"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_MEDICAL + TAG_DESC_LIFE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"Shuyang0"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_MEDICAL + TAG_DESC_LIFE, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"Shuyang0"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_MEDICAL + TAG_DESC_LIFE, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"Shuyang0"},"content":"        // invalid gender","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"Shuyang0"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"Shuyang0"},"content":"                        + INVALID_GENDER_DESC + BIRTHDATE_DESC_BOB + TAG_DESC_MEDICAL + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"Shuyang0"},"content":"                Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"Shuyang0"},"content":"        // invalid birthdate","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"Shuyang0"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"Shuyang0"},"content":"                        + GENDER_DESC_BOB + INVALID_BIRTHDATE_DESC + TAG_DESC_MEDICAL + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"Shuyang0"},"content":"                Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"Shuyang0"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + INVALID_TAG_DESC + TAG_DESC_LIFE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"Shuyang0"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"Shuyang0"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"Shuyang0"},"content":"                        + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + TAG_DESC_MEDICAL + TAG_DESC_LIFE,","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Shuyang0":26,"HuaiZe":20,"-":119}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_PRANK;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_PRANK;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.NotifCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"    public void parseCommand_schedule() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"        ScheduleCommand command \u003d (ScheduleCommand) parser.parseCommand(","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"                ScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + MEETING_DESC_PRANK);","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(new ScheduleCommand(INDEX_FIRST_PERSON, new Meeting(VALID_MEETING_PRANK)), command);","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"    public void parseCommand_notif() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(parser.parseCommand(NotifCommand.COMMAND_WORD) instanceof NotifCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(parser.parseCommand(NotifCommand.COMMAND_WORD + \" 3\") instanceof NotifCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"HuaiZe"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"georgepwhuang":19,"HuaiZe":2,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    public void parse_invalidNumber_throwsParseException() {","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"12573687907656787654\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"KnitidCeladon23":1,"georgepwhuang":7,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_LIFE;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LIFE;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"Shuyang0"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_LIFE + TAG_DESC_MEDICAL + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"Shuyang0"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_LIFE + TAG_EMPTY + TAG_DESC_MEDICAL, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"Shuyang0"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_LIFE + TAG_DESC_MEDICAL, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"Shuyang0"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_LIFE + GENDER_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Shuyang0"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_MEDICAL + BIRTHDATE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"Shuyang0"},"content":"                .withGender(VALID_GENDER_AMY).withBirthdate(VALID_BIRTHDATE_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"Shuyang0"},"content":"                .withTags(VALID_TAG_MEDICAL, VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"Shuyang0"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_LIFE;","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"Shuyang0"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"Shuyang0"},"content":"                + TAG_DESC_LIFE + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_LIFE","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"Shuyang0"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"Shuyang0"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_LIFE, VALID_TAG_MEDICAL)","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"georgepwhuang":4,"Shuyang0":20,"-":193}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"georgepwhuang":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"    private static final String INVALID_TAG \u003d \"#life\";","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    private static final String INVALID_MEETING \u003d \"blah\";","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"    private static final String VALID_TAG_1 \u003d \"life\";","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Shuyang0"},"content":"    private static final String VALID_TAG_2 \u003d \"medical\";","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"    private static final String VALID_MEETING \u003d \"Prank @ 2021-04-01 18:30\";","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":200,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":201,"author":{"gitId":"georgepwhuang"},"content":"    public void parseMeeting_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":202,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeeting((String) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":203,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":205,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"georgepwhuang"},"content":"    public void parseMeeting_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeeting(INVALID_MEETING));","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":209,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":210,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":211,"author":{"gitId":"georgepwhuang"},"content":"    public void parseMeeting_validValueWithoutWhitespace_returnsMeeting() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":212,"author":{"gitId":"georgepwhuang"},"content":"        Meeting expectedMeeting \u003d new Meeting(VALID_MEETING);","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedMeeting, ParserUtil.parseMeeting(VALID_MEETING));","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":215,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":216,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":217,"author":{"gitId":"georgepwhuang"},"content":"    public void parseMeeting_validValueWithWhitespace_returnsTrimmedMeeting() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"georgepwhuang"},"content":"        String meetingWithWhitespace \u003d WHITESPACE + VALID_MEETING + WHITESPACE;","lastModifiedDate":"2021-03-10"},{"lineNumber":219,"author":{"gitId":"georgepwhuang"},"content":"        Meeting expectedMeeting \u003d new Meeting(VALID_MEETING);","lastModifiedDate":"2021-03-10"},{"lineNumber":220,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedMeeting, ParserUtil.parseMeeting(meetingWithWhitespace));","lastModifiedDate":"2021-03-10"},{"lineNumber":221,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"georgepwhuang":26,"Shuyang0":3,"-":193}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"KnitidCeladon23"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEETING_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_PRANK;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_PRANK;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"class ScheduleCommandParserTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    private final ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    public void parse_validArgs_returnsScheduleCommand() {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"        assertParseSuccess(parser, \"1 \" + MEETING_DESC_PRANK, new ScheduleCommand(INDEX_FIRST_PERSON, MEETING_PRANK));","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"KnitidCeladon23"},"content":"        assertParseFailure(parser, \"-5 \" + MEETING_DESC_PRANK, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"KnitidCeladon23"},"content":"        assertParseFailure(parser, \"0\" + MEETING_DESC_PRANK, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"a\" + MEETING_DESC_PRANK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MEETING_DESC, MESSAGE_INVALID_FORMAT); // invalid meeting","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"georgepwhuang":36,"KnitidCeladon23":3}},{"path":"src/test/java/seedu/address/logic/parser/UnscheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.logic.commands.UnscheduleCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"class UnscheduleCommandParserTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnscheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    private final UnscheduleCommandParser parser \u003d new UnscheduleCommandParser();","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"    public void parse_validArgs_returnsScheduleCommand() {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"        assertParseSuccess(parser, \"1\", new UnscheduleCommand(INDEX_FIRST_PERSON, false, false));","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"        assertParseSuccess(parser, \"all\", new UnscheduleCommand(null, true, false));","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"        assertParseSuccess(parser, \"expired\", new UnscheduleCommand(null, false, true));","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"-5\", MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"georgepwhuang":32}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_CLASH_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(Collections.emptyList(), addressBook.getMeetingList());","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MEDICAL)","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"Shuyang0"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MEDICAL)","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"    public void hasClash_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.clash(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"    public void hasClash_normalUsage() {","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMeeting(MEETING_DESC_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"        addressBook.addPerson(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(addressBook.clash(editedBob), Optional.of(editedAlice));","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(addressBook.clash(ALICE), Optional.empty());","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(addressBook.clash(BOB), Optional.empty());","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"    public void getNotifications_emptyList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(addressBook.getNotifications(), \"Your schedule is clear today!\\n\");","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"georgepwhuang"},"content":"        private final ObservableList\u003cPerson\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"        public ObservableList\u003cPerson\u003e getMeetingList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"            return meetings;","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"georgepwhuang":33,"Shuyang0":3,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_CLASH_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"    public void hasClash_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.clash(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"    public void hasClash_normalUsage() {","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMeeting(MEETING_DESC_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"        modelManager.addPerson(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(modelManager.clash(editedBob), Optional.of(editedAlice));","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(modelManager.clash(ALICE), Optional.empty());","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(modelManager.clash(BOB), Optional.empty());","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"georgepwhuang":23,"-":131}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"class MeetingTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Meeting(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"    public void constructor_invalidMeeting_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"        String invalidMeeting \u003d \"\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Meeting(invalidMeeting));","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"    void isValidMeeting() {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Meeting.isValidMeeting(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(Meeting.isValidMeeting(\"\")); // empty string","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(Meeting.isValidMeeting(\" \")); // spaces only","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"        //acceptable typos","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(Meeting.isValidMeeting(\" @ 2020-04-01 18:00\")); // missing local part","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(Meeting.isValidMeeting(\"Prank@ 2020-04-01 18:00\")); // no space before @","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(Meeting.isValidMeeting(\"Prank @2020-04-01 18:00\")); // no space after @","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(Meeting.isValidMeeting(\"Prank @ 2020-04-01 18:00  \")); // trailing space","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(Meeting.isValidMeeting(\"Prank @@ 2020-04-01 18:00  \")); // double \u0027@\u0027 symbol","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"        // missing parts","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(Meeting.isValidMeeting(\"Prank2020-04-01 18:00\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(Meeting.isValidMeeting(\"Prank @ \")); // missing datetime","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"        // invalid parts","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(Meeting.isValidMeeting(\"Prank @ Tomorrow\")); // not a datetime input","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(Meeting.isValidMeeting(\"Prank @ 2020/04/01 18:00\")); // wrong datetime format","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        assertFalse(Meeting.isValidMeeting(\"Prank @ 2020-4-1 6:00\")); // missing digits in datetime","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"        // valid meeting","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(Meeting.isValidMeeting(\"Prank @ 2020-04-01 18:00\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"        assertTrue(Meeting.isValidMeeting(\"Something @ 2021-03-06 12:45\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"    void generateDateTime() {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"        String invalidDateTime \u003d \"\";","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Meeting.generateDateTime(null, null));","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"                Meeting.generateDateTime(\"2020-18-56 12:34\", invalidDateTime));","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"                Meeting.generateDateTime(\"2020-02-28 70:34\", invalidDateTime));","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"                Meeting.generateDateTime(\"2021-02-29 12:45\", invalidDateTime));","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(\"2020-04-01T18:00\", Meeting.generateDateTime(\"2020-04-01 18:00\", invalidDateTime).toString());","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(\"2020-02-28T12:45\", Meeting.generateDateTime(\"2020-02-28 12:45\", invalidDateTime).toString());","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"georgepwhuang":64}},{"path":"src/test/java/seedu/address/model/meeting/UniqueMeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_CLASH_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_STH;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"georgepwhuang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.exceptions.MeetingClashException;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.exceptions.NoMeetingException;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"georgepwhuang"},"content":"class UniqueMeetingListTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"georgepwhuang"},"content":"    private final UniqueMeetingList uniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"georgepwhuang"},"content":"    private final Person editedAlice \u003d new PersonBuilder(ALICE).withMeeting(MEETING_DESC_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"georgepwhuang"},"content":"    void clash_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.clash(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"georgepwhuang"},"content":"    public void clash_personNotInList_returnsEmpty() {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniqueMeetingList.clash(ALICE), Optional.empty());","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniqueMeetingList.clash(ALICE), Optional.empty());","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniqueMeetingList.clash(ALICE), Optional.empty());","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"georgepwhuang"},"content":"    public void clash_personInList_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniqueMeetingList.clash(editedBob), Optional.of(editedAlice));","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"georgepwhuang"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.add(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"georgepwhuang"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"georgepwhuang"},"content":"        Person editedAliceDuplicate \u003d new PersonBuilder(ALICE).withMeeting(MEETING_DESC_STH).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueMeetingList.add(editedAliceDuplicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueMeetingList.add(editedAlice));","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"    public void add_duplicatePerson_throwsMeetingClashException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(MeetingClashException.class, () -\u003e uniqueMeetingList.add(editedBob));","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"georgepwhuang"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setPerson(null, ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"georgepwhuang"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setPerson(ALICE, null));","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"georgepwhuang"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPerson(ALICE, ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPerson(editedBob, editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"georgepwhuang"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList.add(editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"georgepwhuang"},"content":"    public void setPerson_editedPersonHasDifferentMeeting_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"georgepwhuang"},"content":"        Person editedAliceDuplicate \u003d new PersonBuilder(ALICE).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"georgepwhuang"},"content":"        UniqueMeetingList expectedUniqueMeetingList;","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPerson(editedAlice, editedAliceDuplicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList.add(editedAliceDuplicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPerson(editedAliceDuplicate, ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"georgepwhuang"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPerson(editedAlice, editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"georgepwhuang"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList.add(editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"georgepwhuang"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsMeetingClashException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"georgepwhuang"},"content":"        Person originalBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_STH).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"georgepwhuang"},"content":"        Person clashBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(originalBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(MeetingClashException.class, () -\u003e uniqueMeetingList.setPerson(originalBob, clashBob));","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"georgepwhuang"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.remove(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"georgepwhuang"},"content":"    public void remove_personDoesNotExist_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.remove(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.remove(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"georgepwhuang"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"georgepwhuang"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.remove(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"georgepwhuang"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"georgepwhuang"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setPersons((UniqueMeetingList) null));","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"georgepwhuang"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"georgepwhuang"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPersons(expectedUniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"georgepwhuang"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMeetingList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"georgepwhuang"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(MEETING_DESC_CLASH_PRANK).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"georgepwhuang"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.setPersons(personList);","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"georgepwhuang"},"content":"        UniqueMeetingList expectedUniqueMeetingList \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"georgepwhuang"},"content":"        expectedUniqueMeetingList.add(editedBob);","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(expectedUniqueMeetingList, uniqueMeetingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"georgepwhuang"},"content":"    public void getNotifications_emptyList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniqueMeetingList.getNotifications(), new String());","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniqueMeetingList.getNotifications(), new String());","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"georgepwhuang"},"content":"    public void getNotifications_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"georgepwhuang"},"content":"        String meeting \u003d \"Test @ \" + LocalDate.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \" 23:59\";","lastModifiedDate":"2021-04-06"},{"lineNumber":199,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withMeeting(meeting).build();","lastModifiedDate":"2021-04-06"},{"lineNumber":200,"author":{"gitId":"georgepwhuang"},"content":"        uniqueMeetingList.add(editedBob);","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"georgepwhuang"},"content":"        String template \u003d \"You have a meeting with %s at %s\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniqueMeetingList.getNotifications(),","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"georgepwhuang"},"content":"                String.format(template, editedBob.getName(),","lastModifiedDate":"2021-04-06"},{"lineNumber":204,"author":{"gitId":"georgepwhuang"},"content":"                        new Meeting(meeting).dateTime.toLocalTime().format(","lastModifiedDate":"2021-04-06"},{"lineNumber":205,"author":{"gitId":"georgepwhuang"},"content":"                                DateTimeFormatter.ofPattern(\"hh:mm a\").withResolverStyle(ResolverStyle.STRICT))));","lastModifiedDate":"2021-04-06"},{"lineNumber":206,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"georgepwhuang"},"content":"    public void reconstructMap() {","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(NoMeetingException.class, () -\u003e uniqueMeetingList.reconstructMap());","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"georgepwhuang"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"georgepwhuang"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"georgepwhuang"},"content":"            -\u003e uniqueMeetingList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"georgepwhuang":219}},{"path":"src/test/java/seedu/address/model/person/BirthdateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"public class BirthdateTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthdate((String) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"        String invalidBirthdate \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Birthdate(invalidBirthdate));","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"    public void isValidGender() {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"        // null address","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthdate.isValidBirthdate((String) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"        // invalid addresses","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(Birthdate.isValidBirthdate(\"\")); // empty string","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(Birthdate.isValidBirthdate(\"2020-02-31\")); // date doesn\u0027t exist","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"        // valid addresses","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"        assertTrue(Birthdate.isValidBirthdate(\"2019-01-05\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"        assertTrue(Birthdate.isValidBirthdate(\"2000-01-01\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"        assertTrue(Birthdate.isValidBirthdate(\"1980-12-25\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Shuyang0":36}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuyang0"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Shuyang0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"public class GenderTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Shuyang0"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Shuyang0"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Shuyang0"},"content":"    public void isValidGender() {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Shuyang0"},"content":"        // null address","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Shuyang0"},"content":"        // invalid addresses","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"        // valid addresses","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"        assertTrue(Gender.isValidGender(\"F\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"        assertTrue(Gender.isValidGender(\"N\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Shuyang0":36}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"georgepwhuang":1,"-":75}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_STH;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"                .withGender(VALID_GENDER_BOB).withBirthdate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"                .withTags(VALID_TAG_MEDICAL).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"georgepwhuang"},"content":"    public void addMeeting() {","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(ALICE, ALICE.setMeeting(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"georgepwhuang"},"content":"        Meeting meetingSth \u003d new Meeting(VALID_MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"georgepwhuang"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMeeting(VALID_MEETING_STH).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(editedAlice, ALICE.setMeeting(Optional.ofNullable(meetingSth)));","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":105,"author":{"gitId":"Shuyang0"},"content":"        // different genders -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"Shuyang0"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"Shuyang0"},"content":"        // different birthdates -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Shuyang0"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withBirthdate(VALID_BIRTHDATE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Shuyang0"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":114,"author":{"gitId":"Shuyang0"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_MEDICAL).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"georgepwhuang":14,"Shuyang0":16,"HuaiZe":2,"-":85}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MEDICAL)","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"Shuyang0"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_MEDICAL)","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"georgepwhuang"},"content":"    public void getNotifications_emptyList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniquePersonList.getNotifications(), new String());","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"georgepwhuang"},"content":"    public void getNotifications_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"georgepwhuang"},"content":"        String template \u003d \"%s\u0027s birthday is coming up in %d days.\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"georgepwhuang"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"georgepwhuang"},"content":"                .withBirthdate(LocalDate.now().withYear(1983)","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"georgepwhuang"},"content":"                        .plusDays(5).format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")))","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"georgepwhuang"},"content":"                .build();","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"georgepwhuang"},"content":"        Person editedBob \u003d new PersonBuilder(BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"georgepwhuang"},"content":"                .withBirthdate(LocalDate.now().withYear(1987)","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"georgepwhuang"},"content":"                        .plusDays(21).format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")))","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"georgepwhuang"},"content":"                .build();","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"georgepwhuang"},"content":"        uniquePersonList.add(editedAlice);","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"georgepwhuang"},"content":"        uniquePersonList.add(editedBob);","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"georgepwhuang"},"content":"        assertEquals(uniquePersonList.getNotifications(), String.format(template, ALICE.getName().fullName, 5));","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Shuyang0":3,"georgepwhuang":23,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_PRANK;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Shuyang0"},"content":"    private static final String INVALID_GENDER \u003d \"banana\";","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"    private static final String INVALID_BIRTHDATE \u003d \"1890-01-01\";","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"georgepwhuang"},"content":"    private static final String INVALID_MEETING \u003d \"Tomorrow\";","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"Shuyang0"},"content":"    private static final String INVALID_NOTE \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"    private static final String VALID_BIRTHDATE \u003d BENSON.getBirthdate().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"georgepwhuang"},"content":"    private static final String VALID_MEETING \u003d MEETING_PRANK.original;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"    private static final List\u003cJsonAdaptedPlan\u003e VALID_PLANS \u003d BENSON.getPlans().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"            .map(JsonAdaptedPlan::new)","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_NOTES \u003d BENSON.getNotes().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"georgepwhuang"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"georgepwhuang"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"georgepwhuang"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"georgepwhuang"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"Shuyang0"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"Shuyang0"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"Shuyang0"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"georgepwhuang"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"Shuyang0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"HuaiZe"},"content":"    //    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"HuaiZe"},"content":"    //    public void toModelType_invalidBirthdate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"HuaiZe"},"content":"    //        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"HuaiZe"},"content":"    //                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"HuaiZe"},"content":"    //                        INVALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS);","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"HuaiZe"},"content":"    //        String expectedMessage \u003d Birthdate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"HuaiZe"},"content":"    //        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"HuaiZe"},"content":"    //    }","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"Shuyang0"},"content":"    public void toModelType_nullBirthdate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"Shuyang0"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"Shuyang0"},"content":"                        null, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"Shuyang0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthdate.class.getSimpleName());","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"Shuyang0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, invalidTags, VALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":177,"author":{"gitId":"georgepwhuang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":178,"author":{"gitId":"georgepwhuang"},"content":"    public void toModelType_invalidMeeting_throwsIllegalValueException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":179,"author":{"gitId":"georgepwhuang"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"georgepwhuang"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":181,"author":{"gitId":"georgepwhuang"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":182,"author":{"gitId":"Shuyang0"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"Shuyang0"},"content":"                        VALID_BIRTHDATE, VALID_TAGS, INVALID_MEETING, VALID_PLANS, VALID_NOTES);","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-04-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":187,"author":{"gitId":"HuaiZe"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"HuaiZe"},"content":"    public void toModelType_nullMeeting_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"HuaiZe"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"HuaiZe"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"HuaiZe"},"content":"        Person person;","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"HuaiZe"},"content":"        person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"Shuyang0"},"content":"                VALID_BIRTHDATE, VALID_TAGS, null, VALID_PLANS, VALID_NOTES)","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"HuaiZe"},"content":"                .toModelType();","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"HuaiZe"},"content":"        assertEquals(BENSON, person);","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"HuaiZe"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"HuaiZe"},"content":"    public void toModelType_validMeeting_success() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"HuaiZe"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"HuaiZe"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"HuaiZe"},"content":"        Person person;","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"HuaiZe"},"content":"        person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"Shuyang0"},"content":"                VALID_BIRTHDATE, VALID_TAGS, VALID_MEETING, VALID_PLANS, VALID_NOTES)","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"HuaiZe"},"content":"                .toModelType();","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"HuaiZe"},"content":"        assertEquals(BENSON.setMeeting(Optional.ofNullable(MEETING_PRANK)), person);","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"georgepwhuang":20,"Shuyang0":51,"HuaiZe":32,"-":106}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    //    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    //    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    //        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    //        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    //    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"HuaiZe":8,"-":35}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"KnitidCeladon23"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"linkme.json\"));","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"KnitidCeladon23":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"        descriptor.setBirthdate(person.getBirthdate());","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Shuyang0"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Shuyang0"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Shuyang0"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Shuyang0"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Shuyang0"},"content":"     * Sets the {@code Birthdate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Shuyang0"},"content":"    public EditPersonDescriptorBuilder withBirthdate(String birthdate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Shuyang0"},"content":"        descriptor.setBirthdate(new Birthdate(birthdate));","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Shuyang0"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Shuyang0":20,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"import seedu.address.model.insurance.InsurancePlan;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"    public static final String DEFAULT_GENDER \u003d \"Female\";","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"    public static final String DEFAULT_BIRTHDATE \u003d \"1990-01-01\";","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Shuyang0"},"content":"    private Gender gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"    private Birthdate birthdate;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"georgepwhuang"},"content":"    private Optional\u003cMeeting\u003e meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"    private List\u003cInsurancePlan\u003e plans;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"    private List\u003cNote\u003e notes;","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"        birthdate \u003d new Birthdate(DEFAULT_BIRTHDATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"georgepwhuang"},"content":"        meeting \u003d Optional.empty();","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"        plans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"Shuyang0"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Shuyang0"},"content":"        birthdate \u003d personToCopy.getBirthdate();","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"georgepwhuang"},"content":"        meeting \u003d personToCopy.getMeeting();","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"        plans \u003d new ArrayList\u003c\u003e(personToCopy.getPlans());","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"Shuyang0"},"content":"        notes \u003d new ArrayList\u003c\u003e(personToCopy.getNotes());","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Shuyang0"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Shuyang0"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"Shuyang0"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"Shuyang0"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"Shuyang0"},"content":"     * Sets the {@code Birthdate} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"Shuyang0"},"content":"    public PersonBuilder withBirthdate(String birthdate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"Shuyang0"},"content":"        this.birthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"Shuyang0"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"georgepwhuang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"georgepwhuang"},"content":"     * Sets the {@code Meeting} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"georgepwhuang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"georgepwhuang"},"content":"    public PersonBuilder withMeeting(String meeting) {","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"georgepwhuang"},"content":"        this.meeting \u003d Optional.ofNullable(new Meeting(meeting));","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"georgepwhuang"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"georgepwhuang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"HuaiZe"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"HuaiZe"},"content":"     * Parses the {@code plans} into a {@code List\u003cInsurancePlan\u003e} and set it to the {@code Person} that we","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"HuaiZe"},"content":"     * are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"HuaiZe"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"HuaiZe"},"content":"    public PersonBuilder withPlans(String ... plans) {","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"HuaiZe"},"content":"        this.plans \u003d SampleDataUtil.getPlanList(plans);","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"HuaiZe"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"HuaiZe"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"HuaiZe"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"Shuyang0"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"Shuyang0"},"content":"     * Parses the {@code notes} into a {@code List\u003cNote\u003e} and set it to the {@code Person} that we","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"Shuyang0"},"content":"     * are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"Shuyang0"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"Shuyang0"},"content":"    public PersonBuilder withNotes(String ... notes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"Shuyang0"},"content":"        this.notes \u003d SampleDataUtil.getNoteList(notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"Shuyang0"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"Shuyang0"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"Shuyang0"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":160,"author":{"gitId":"Shuyang0"},"content":"        return new Person(name, phone, email, address, gender, birthdate, tags, meeting, plans, notes);","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"georgepwhuang":13,"Shuyang0":40,"HuaiZe":15,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"Shuyang0"},"content":"        sb.append(PREFIX_GENDER + person.getGender().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"        sb.append(PREFIX_BIRTHDATE + person.getBirthdate().value.toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"Shuyang0"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Shuyang0"},"content":"        descriptor.getBirthdate().ifPresent(birthdate -\u003e sb.append(PREFIX_BIRTHDATE)","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"                    .append(birthdate.value).append(\" \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Shuyang0":7,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"georgepwhuang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_CLASH_PRANK;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_PRANK;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"georgepwhuang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_STH;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"georgepwhuang"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"georgepwhuang"},"content":"public class TypicalMeetings {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"georgepwhuang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"georgepwhuang"},"content":"    public static final Meeting MEETING_STH \u003d new Meeting(VALID_MEETING_STH);","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"georgepwhuang"},"content":"    public static final Meeting MEETING_PRANK \u003d new Meeting(VALID_MEETING_PRANK);","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"georgepwhuang"},"content":"    public static final Meeting MEETING_CLASH_PRANK \u003d new Meeting(VALID_MEETING_CLASH_PRANK);","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"georgepwhuang"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"georgepwhuang":14}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LIFE;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Shuyang0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MEDICAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"Shuyang0"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"F\").withBirthdate(\"1992-02-02\")","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Shuyang0"},"content":"            .withTags(\"investment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"Shuyang0"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"M\").withBirthdate(\"1996-09-30\")","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"            .withTags(\"life\", \"medical\")","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"            .withPlans(\"Protecc $4000\", \"Attac $3000\")","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"            .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Shuyang0"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"M\").withBirthdate(\"1965-08-09\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Shuyang0"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"N\").withBirthdate(\"1990-10-10\")","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Shuyang0"},"content":"            .withTags(\"investment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Shuyang0"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"F\").withBirthdate(\"2000-01-05\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Shuyang0"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"F\").withBirthdate(\"1950-01-02\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Shuyang0"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"M\").withBirthdate(\"1945-10-10\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"Shuyang0"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"M\").withBirthdate(\"1994-06-29\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Shuyang0"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Shuyang0"},"content":"            .withGender(\"F\").withBirthdate(\"1990-03-02\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"Shuyang0"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Shuyang0"},"content":"            .withGender(VALID_GENDER_AMY).withBirthdate(VALID_BIRTHDATE_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Shuyang0"},"content":"            .withTags(VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Shuyang0"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Shuyang0"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Shuyang0"},"content":"            .withGender(VALID_GENDER_BOB).withBirthdate(VALID_BIRTHDATE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Shuyang0"},"content":"            .withTags(VALID_TAG_MEDICAL, VALID_TAG_LIFE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Shuyang0":41,"HuaiZe":3,"-":49}}]
