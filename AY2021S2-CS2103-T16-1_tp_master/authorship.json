[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JQchong"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T16-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"JQchong"},"content":"* **SpamEZ** is an application that helps users to manage their recipients of their information blast.","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"JQchong"},"content":"* Users will primarily interact with the application through a Command Line Interface (CLI).","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":"* This application is optimized for users who type fast.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"JQchong"},"content":"* It is also furnished with a Graphical User Interface (GUI).","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"JQchong"},"content":"* Example usages:","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"JQchong"},"content":"  * Categorize users","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"JQchong"},"content":"  * Filter away users that are in blacklist","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"JQchong"},"content":"* For the detailed documentation of this project, see the **[SpamEZ Product Website](https://ay2021s2-cs2103-t16-1.github.io/tp/)**.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"JQchong"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"JQchong":11,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"    archiveName \u003d \u0027spamez.jar\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ampan98":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"SpamEZ is developed by the [AY2021S2-CS2103-T16-1](https://github.com/AY2021S2-CS2103-T16-1/tp) team.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Chong Jing Quan","lastModifiedDate":"2021-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"![JingQuan](./images/jqchong.png)","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"[[github]](https://github.com/JQChong)","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"[[portfolio]](team/jqchong.md)","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"* Role: Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"### Pan Jing Bin","lastModifiedDate":"2021-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"![JingBin](./images/icebear789.png)","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"[[github]](https://github.com/IceBear789)","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"[[portfolio]](team/icebear789.md)","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"* Role: Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"* Responsibilities: Deliverables","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Pan Wen Zhuo, Ernest","lastModifiedDate":"2021-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"![Ernest](./images/ampan98.png)","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"[[github]](https://github.com/ampan98)","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"[[portfolio]](team/ampan98.md)","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"### Ryan Jee","lastModifiedDate":"2021-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"![Ryan](./images/rjeez.png)","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"[[github]](https://github.com/rjeez)","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"[[portfolio]](team/rjeez.md)","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"IceBear789"},"content":"* Responsibilities: Deliverables","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"-":31,"IceBear789":19}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"ampan98"},"content":"### Blacklist feature","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"ampan98"},"content":"The blacklist mechanism is facilitated by `Person`.","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"ampan98"},"content":"It represents if a `Person` is blacklisted or not, stored internally by adding a `Blacklist` object to the parameters of `Person`.","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"ampan98"},"content":"Blacklist status is displayed externally via `PersonListCard#blacklist`.","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"ampan98"},"content":"Given below is an example usage scenario.","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"ampan98"},"content":"Step 1. The user executes `add n/David …​` to add a new person.","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"ampan98"},"content":"A new `Person` is created, with the default status of un-blacklisted.","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"ampan98"},"content":"It is then added to `AddressBook`.","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"ampan98"},"content":"![BlacklistState1](images/BlacklistState1.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"ampan98"},"content":"Step 2. The user decides to blacklist the person, and executes the `blist INDEX` command.","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"ampan98"},"content":"The `blist INDEX` command will create a new `Person` with the same information as the person at `INDEX` in `AddressBook`,","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"ampan98"},"content":"but with a new `Blacklist` with a different blacklist status, which then replaces the original person.","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"ampan98"},"content":"![BlacklistState1](images/BlacklistState2.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"ampan98"},"content":"The following sequence diagram shows how the blacklist operation works:","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"ampan98"},"content":"![BlacklistSequenceDiagram](images/BlacklistSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"ampan98"},"content":"The following activity diagram summarizes what happens when a user executes a blacklist command:","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"ampan98"},"content":"![BlacklistActivityDiagram](images/BlacklistActivityDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"ampan98"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"ampan98"},"content":"##### Aspect: The command format of blacklist","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"ampan98"},"content":"* **Alternative 1 (current choice):** `blist INDEX` to toggle blacklist status.","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"ampan98"},"content":"    * Pros: Easier to remember, faster to type.","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"ampan98"},"content":"            More straightforward and logical for a value with only 2 states.","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"ampan98"},"content":"    * Cons: Requires checking current blacklist status.","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"ampan98"},"content":"* **Alternative 2:** `+blist INDEX` to blacklist, `-blist INDEX` to un-blacklist.","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"ampan98"},"content":"    * Pros: Able to directly set blacklist status without checking current status.","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"ampan98"},"content":"    * Cons: More commands to remember.","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"IceBear789"},"content":"### Sort feature","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"IceBear789"},"content":"The sort feature is implemented in the `SortCommand` class.","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"IceBear789"},"content":"Below is an example usage scenario.","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"IceBear789"},"content":"Step 1: The user executes `sort c/...` to sort the contact list according to some specific criteria.","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"IceBear789"},"content":"The `UI` component passes the string to the `LogicManager` class in the `Logic` component.","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"IceBear789"},"content":"Step 2: The `Logic` component parses the string and creates a corresponding `SortCommand` object.","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"IceBear789"},"content":"Step 3: The `LogicManager` executes the `SortCommand` object. This calls the appropriate `sort` method in","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"IceBear789"},"content":"the `Model` component.","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"IceBear789"},"content":"Step 4: The `Model` component sorts the internal contact list. After sorting, the appropriate method in the `Storage`","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"IceBear789"},"content":"component is called to update the file.","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"IceBear789"},"content":"Step 5: Finally, the `Model` component passes the `CommandResult` back to the `Logic` component, which in turn passes","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"IceBear789"},"content":"it back to the `UI` component to display it to the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"IceBear789"},"content":"The following sequence diagram illustrates how the sort operation works:","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"IceBear789"},"content":"![SortSequenceDiagram](images/SortSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"JQchong"},"content":"### Find persons by tag feature","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"JQchong"},"content":"This feature is built on the current `find` command, which is used to be limited to only finding persons by names. With this change, the format of the `find` command is now modified to `find n/[NAME] t/[TAG]`.","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"JQchong"},"content":"This command returns the persons with attributes that matches at least one of the attributes of interest (See User Guide for more details).","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"JQchong"},"content":"Note that users are only required to provide at least one of the parameters to use this command. In other words, commands such as `find n/Alex` and `find t/autistic` are valid commands.","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"JQchong"},"content":"To facilitate the implementation of this feature, two new predicate classes are introduced, namely `PersonTagContainsKeywordsPredicate` and `ReturnTruePredicate`. The former class is to check whether any of the `tag`s contain the keywords. The latter predicate always returns `true`. ","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"JQchong"},"content":"The introduction of `ReturnTruePredicate` may seem pointless, but it is of great use. The key here is to realize that if X is a boolean variable, then X `and` `true` simplifies to X. If both `name` and `tag` keywords are given, the `FindCommand` class will receive `NameContainsKeywordsPredicate` and `PersonTagContainsKeywordsPredicate`. If, say, only `name` keywords are given, then `ReturnTruePredicate` will instead be supplied to `FindCommand`.","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"JQchong"},"content":"As such, the filter will now solely depend on `NameContainsKeywordsPredicate` since the second predicate always returns true.","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"JQchong"},"content":"The following sequence diagram shows how the `find` command works:","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"JQchong"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"JQchong"},"content":"The following activity diagram shows what happens when `find` command is executed.","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"JQchong"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"JQchong"},"content":"#### Design considerations:","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"JQchong"},"content":"##### Aspect: Command design","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"JQchong"},"content":"* **Alternative 1 (current choice):** `find` command alone supports finding by names and tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"JQchong"},"content":"    * Pros: More intuitive to use since most commands have similar format. Makes further extensions easier as developers only need to define a new predicate class.","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"JQchong"},"content":"    * Cons: Can make debugging harder since further extensions are centralized into one class.","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"JQchong"},"content":"* **Alternative 2:** Find by names and find by tags are separate commands.","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"JQchong"},"content":"    * Pros: Easier to debug as one command is meant for one criterion.","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"JQchong"},"content":"    * Cons: It is now not possible to combine both criteria together. More commands to remember. Due to similarity of the commands, they can be confused from one another.","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"IceBear789"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"ampan98"},"content":"* is an NUS Computer Science undergraduate","lastModifiedDate":"2021-02-27"},{"lineNumber":333,"author":{"gitId":"ampan98"},"content":"* works in the NUS Office of Campus Amenities communications team","lastModifiedDate":"2021-02-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"ampan98"},"content":"**Value proposition**: OCA has a wide range of information to disseminate","lastModifiedDate":"2021-02-27"},{"lineNumber":336,"author":{"gitId":"ampan98"},"content":"to students / staff at NUS. The large number of emails to send, and the large","lastModifiedDate":"2021-02-27"},{"lineNumber":337,"author":{"gitId":"ampan98"},"content":"student / staff population may introduce errors during dissemination.","lastModifiedDate":"2021-02-27"},{"lineNumber":338,"author":{"gitId":"ampan98"},"content":"We aim to help them classify this information based on the relevant parties","lastModifiedDate":"2021-02-27"},{"lineNumber":339,"author":{"gitId":"ampan98"},"content":"and the required means of communication.","lastModifiedDate":"2021-02-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                                      | So that I can…​                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"ampan98"},"content":"| -------- | ------------------------------------------ | ---------------------------------------------------- | ----------------------------------------------------------------------- |","lastModifiedDate":"2021-03-10"},{"lineNumber":347,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                               | refer to instructions when I forget how to use the App                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"ampan98"},"content":"| `* * *`  | user                                       | add a new contact                                    |                                                                         |","lastModifiedDate":"2021-03-10"},{"lineNumber":349,"author":{"gitId":"ampan98"},"content":"| `* * *`  | user                                       | delete a contact                                     | remove entries that I no longer need                                    |","lastModifiedDate":"2021-03-10"},{"lineNumber":350,"author":{"gitId":"ampan98"},"content":"| `* * *`  | user                                       | find a contact by name                               | locate details of contacts without having to go through the entire list |","lastModifiedDate":"2021-03-10"},{"lineNumber":351,"author":{"gitId":"JQchong"},"content":"| `* * *`  | user                                       | filter contacts by tag                               | minimize chance of sending emails to the wrong recipient                |","lastModifiedDate":"2021-03-03"},{"lineNumber":352,"author":{"gitId":"ampan98"},"content":"| `* * *`  | user                                       | specify preferred mode of contact                    | maximize chance of recipient seeing the information                     |","lastModifiedDate":"2021-02-27"},{"lineNumber":353,"author":{"gitId":"ampan98"},"content":"| `* * *`  | user                                       | blacklist a contact                                  | reduce dissemination of information to people who do not want it        |","lastModifiedDate":"2021-02-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                         | minimize chance of someone else seeing them by accident                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"IceBear789"},"content":"| `* *`    | user with many contacts                    | assign each contact an additional optional remark    | remember contacts more accurately                                       |","lastModifiedDate":"2021-03-03"},{"lineNumber":356,"author":{"gitId":"ampan98"},"content":"| `* *`    | user with many contacts                    | sort contacts by name                                | locate a contact easily                                                 |","lastModifiedDate":"2021-02-27"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"ampan98"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-03-10"},{"lineNumber":369,"author":{"gitId":"ampan98"},"content":"2.  SpamEZ shows a list of contacts","lastModifiedDate":"2021-03-10"},{"lineNumber":370,"author":{"gitId":"ampan98"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2021-03-10"},{"lineNumber":371,"author":{"gitId":"ampan98"},"content":"4.  SpamEZ deletes the contact","lastModifiedDate":"2021-03-10"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"ampan98"},"content":"    * 3a1. SpamEZ shows an error message.","lastModifiedDate":"2021-03-10"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"JQchong"},"content":"**Use case: Filter contacts by tags**","lastModifiedDate":"2021-03-03"},{"lineNumber":388,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":389,"author":{"gitId":"JQchong"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":390,"author":{"gitId":"JQchong"},"content":"1. User requests to list contacts","lastModifiedDate":"2021-03-03"},{"lineNumber":391,"author":{"gitId":"JQchong"},"content":"2. SpamEZ shows a list of contacts","lastModifiedDate":"2021-03-03"},{"lineNumber":392,"author":{"gitId":"JQchong"},"content":"3. User requests to find the contacts using name and/or tags","lastModifiedDate":"2021-03-03"},{"lineNumber":393,"author":{"gitId":"JQchong"},"content":"4. SpamEZ returns a filtered list of contacts","lastModifiedDate":"2021-03-03"},{"lineNumber":394,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":395,"author":{"gitId":"JQchong"},"content":"   Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":396,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":397,"author":{"gitId":"JQchong"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":398,"author":{"gitId":"JQchong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-03"},{"lineNumber":399,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":400,"author":{"gitId":"JQchong"},"content":"  Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":401,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":402,"author":{"gitId":"JQchong"},"content":"* 3a. No keywords are given or invalid syntax.","lastModifiedDate":"2021-03-03"},{"lineNumber":403,"author":{"gitId":"JQchong"},"content":"    * 3a1. SpamEZ shows an error message.","lastModifiedDate":"2021-03-03"},{"lineNumber":404,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":405,"author":{"gitId":"JQchong"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-03"},{"lineNumber":406,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":407,"author":{"gitId":"ampan98"},"content":"**Use case: Specify a preferred mode of contact for a contact**","lastModifiedDate":"2021-02-27"},{"lineNumber":408,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":409,"author":{"gitId":"rjeez"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":410,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":411,"author":{"gitId":"ampan98"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-03-10"},{"lineNumber":412,"author":{"gitId":"ampan98"},"content":"2.  SpamEZ shows a list of contacts","lastModifiedDate":"2021-03-10"},{"lineNumber":413,"author":{"gitId":"ampan98"},"content":"3.  User requests to edit the preferred mode of contact for a contact","lastModifiedDate":"2021-03-10"},{"lineNumber":414,"author":{"gitId":"ampan98"},"content":"4.  SpamEZ edits the contact","lastModifiedDate":"2021-03-10"},{"lineNumber":415,"author":{"gitId":"rjeez"},"content":"    ","lastModifiedDate":"2021-03-03"},{"lineNumber":416,"author":{"gitId":"rjeez"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":417,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":418,"author":{"gitId":"rjeez"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":419,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":420,"author":{"gitId":"rjeez"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-03"},{"lineNumber":421,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":422,"author":{"gitId":"rjeez"},"content":"  Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":423,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":424,"author":{"gitId":"ampan98"},"content":"**Use case: Blacklist a contact**","lastModifiedDate":"2021-02-27"},{"lineNumber":425,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":426,"author":{"gitId":"ampan98"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":427,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":428,"author":{"gitId":"ampan98"},"content":"1. User requests to list contacts","lastModifiedDate":"2021-02-27"},{"lineNumber":429,"author":{"gitId":"ampan98"},"content":"2. SpamEZ shows a list of contacts","lastModifiedDate":"2021-03-10"},{"lineNumber":430,"author":{"gitId":"ampan98"},"content":"3. User requests to change the blacklist status of a specific contact ","lastModifiedDate":"2021-03-10"},{"lineNumber":431,"author":{"gitId":"ampan98"},"content":"   in the list","lastModifiedDate":"2021-03-10"},{"lineNumber":432,"author":{"gitId":"ampan98"},"content":"4. SpamEZ changes the blacklist status of the contact","lastModifiedDate":"2021-03-10"},{"lineNumber":433,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":434,"author":{"gitId":"ampan98"},"content":"   Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":435,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":436,"author":{"gitId":"ampan98"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":437,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":438,"author":{"gitId":"ampan98"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-02-27"},{"lineNumber":439,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":440,"author":{"gitId":"ampan98"},"content":"  Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":441,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":442,"author":{"gitId":"ampan98"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-27"},{"lineNumber":443,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":444,"author":{"gitId":"ampan98"},"content":"    * 3a1. SpamEZ shows an error message.","lastModifiedDate":"2021-03-10"},{"lineNumber":445,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":446,"author":{"gitId":"ampan98"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-27"},{"lineNumber":447,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":448,"author":{"gitId":"IceBear789"},"content":"**Use case: Assign an optional remark to a contact**","lastModifiedDate":"2021-03-03"},{"lineNumber":449,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":450,"author":{"gitId":"IceBear789"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":451,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":452,"author":{"gitId":"IceBear789"},"content":"1. User requests to list contacts.","lastModifiedDate":"2021-03-03"},{"lineNumber":453,"author":{"gitId":"ampan98"},"content":"2. SpamEZ shows a list of contacts.","lastModifiedDate":"2021-03-10"},{"lineNumber":454,"author":{"gitId":"IceBear789"},"content":"3. User requests to add an optional remark to a specific contact in the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":455,"author":{"gitId":"ampan98"},"content":"4. SpamEZ adds the optional remark to the specific contact.","lastModifiedDate":"2021-03-10"},{"lineNumber":456,"author":{"gitId":"ampan98"},"content":"5. SpamEZ shows the updated list of contacts.","lastModifiedDate":"2021-03-10"},{"lineNumber":457,"author":{"gitId":"ampan98"},"content":"   ","lastModifiedDate":"2021-02-27"},{"lineNumber":458,"author":{"gitId":"IceBear789"},"content":"   Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":459,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":460,"author":{"gitId":"IceBear789"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":461,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":462,"author":{"gitId":"IceBear789"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":463,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":464,"author":{"gitId":"ampan98"},"content":"  * 3a1. SpamEZ shows an error message.","lastModifiedDate":"2021-03-10"},{"lineNumber":465,"author":{"gitId":"IceBear789"},"content":"    ","lastModifiedDate":"2021-03-03"},{"lineNumber":466,"author":{"gitId":"IceBear789"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2021-03-03"},{"lineNumber":467,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":468,"author":{"gitId":"IceBear789"},"content":"* 3b. The user enters details in the wrong format.","lastModifiedDate":"2021-03-03"},{"lineNumber":469,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":470,"author":{"gitId":"ampan98"},"content":"    * 3b1. SpamEZ shows an error message and the correct format.","lastModifiedDate":"2021-03-10"},{"lineNumber":471,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":472,"author":{"gitId":"IceBear789"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-03-03"},{"lineNumber":473,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":474,"author":{"gitId":"IceBear789"},"content":"**Use case: Sort contacts by name**","lastModifiedDate":"2021-03-03"},{"lineNumber":475,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":476,"author":{"gitId":"IceBear789"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":477,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":478,"author":{"gitId":"IceBear789"},"content":"1. User requests to sort the contact list by name in alphabetical order.","lastModifiedDate":"2021-03-03"},{"lineNumber":479,"author":{"gitId":"ampan98"},"content":"2. SpamEZ sorts the contact list.","lastModifiedDate":"2021-03-10"},{"lineNumber":480,"author":{"gitId":"ampan98"},"content":"3. SpamEZ displays the updated contact list.","lastModifiedDate":"2021-03-10"},{"lineNumber":481,"author":{"gitId":"IceBear789"},"content":"   ","lastModifiedDate":"2021-03-03"},{"lineNumber":482,"author":{"gitId":"IceBear789"},"content":"   Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":483,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":484,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"ampan98"},"content":"4.  Every command that is accessible via the graphical user interface should be possible using only command line inputs.","lastModifiedDate":"2021-02-27"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"ampan98"},"content":"### Deleting a contact","lastModifiedDate":"2021-03-10"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"ampan98"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2021-03-10"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"ampan98"},"content":"       Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-10"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":553,"author":{"gitId":"JQchong"},"content":"### Filtering the contacts","lastModifiedDate":"2021-03-03"},{"lineNumber":554,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":555,"author":{"gitId":"JQchong"},"content":"1. Filter the list of contacts based on the keywords provided.","lastModifiedDate":"2021-03-03"},{"lineNumber":556,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":557,"author":{"gitId":"ampan98"},"content":"    1. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":558,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":559,"author":{"gitId":"JQchong"},"content":"    1. Test case: `find n/Alex Bernice` \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":560,"author":{"gitId":"JQchong"},"content":"       Expected: A list of contacts whose name contains `Alex` **or** `Bernice`. The filter is case-insensitive, so `Alex` will match with `aLeX` too, for instance.","lastModifiedDate":"2021-03-03"},{"lineNumber":561,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":562,"author":{"gitId":"JQchong"},"content":"    1. Test case: `find t/friends NEIGHBOUR` \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":563,"author":{"gitId":"JQchong"},"content":"       Expected: A list of contacts whose tags contain `friends` **or** `NEIGHBOUR`.","lastModifiedDate":"2021-03-03"},{"lineNumber":564,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":565,"author":{"gitId":"JQchong"},"content":"    1. Test case: `find n/Alex Bernice t/friends neighbour` \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":566,"author":{"gitId":"JQchong"},"content":"       Expected: A list of contacts whose name contains `Alex` or `Bernice` **and** tags contains `friends` or `neighbour`.","lastModifiedDate":"2021-03-03"},{"lineNumber":567,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":568,"author":{"gitId":"JQchong"},"content":"    1. Test case: `find` \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":569,"author":{"gitId":"JQchong"},"content":"       Expected: No filtering is done, and the original list is presented. Error details shown in the status message.","lastModifiedDate":"2021-03-03"},{"lineNumber":570,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":571,"author":{"gitId":"JQchong"},"content":"    1. Other incorrect find commands to try: `find n/`, `find t/`, `...` \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":572,"author":{"gitId":"JQchong"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"JQchong":65,"ampan98":105,"rjeez":11,"-":341,"IceBear789":50}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"SpamEZ is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"If you can type fast, SpamEZ can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"1. Download the latest `spamez.jar` from [here](https://github.com/AY2021S2-CS2103-T16-1/tp/releases).","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for SpamEZ.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the contacts list.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"   * **`tag`**`tag n/John Doe t/small` : Adds tag to contact John Doe.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"   * **`blist`** `2` : Blacklists the 2nd contact shown in the current list.","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"   ","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"   * **`name`** `3 [n/John]` : Adds an optional nickname to the 3rd contact.","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"   ","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"   * **`filter`** `[Computing, Student]` : Filters shown contact based on given keywords.","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"Adds a person to the contacts list.","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"ampan98"},"content":"Shows a list of all contacts.","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"ampan98"},"content":"Edits an existing person in the contacts list.","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"JQchong"},"content":"### Locating persons by name and/or tag: `find`","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"JQchong"},"content":"Finds persons whose names and/or tags contain any of the given keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"JQchong"},"content":"Format: `find [n/NAME_KEYWORDS] [t/TAG_KEYWORDS]`","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"JQchong"},"content":"* At least one of `[n/NAME_KEYWORDS]` or `[t/TAG_KEYWORDS]` must be included as the parameters.","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"JQchong"},"content":"* Only the name and tags are searched.","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"JQchong"},"content":"* Persons matching at least one keyword of each provided attribute will be returned.","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"JQchong"},"content":"  e.g. `n/Hans Bo` will return `Hans Gruber`, `Bo Yang`, `Bo Hans`, while `n/Hans Bo t/friends` will only return `Hans Gruber` and `Bo Yang` if only `Hans Gruber` and `Bo Yang` are tagged with `friends`. ","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"JQchong"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"JQchong"},"content":"* `find n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"JQchong"},"content":"* `find n/alex david t/family` returns `David Li`","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"ampan98"},"content":"Deletes the specified person from the contacts list.","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"ampan98"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the contacts list.","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"ampan98"},"content":"### Adding tags to a contact : `tag`","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":158,"author":{"gitId":"ampan98"},"content":"Labels a contact based on his or her attributes.","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":160,"author":{"gitId":"rjeez"},"content":"Format: tag n/NAME t/TAG","lastModifiedDate":"2021-02-27"},{"lineNumber":161,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":162,"author":{"gitId":"ampan98"},"content":"### Blacklist a contact : `blist`","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":164,"author":{"gitId":"ampan98"},"content":"Blocks specific contacts, to specify that they do not want to be contacted.","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"ampan98"},"content":"If the contact is already blacklisted, they will be un-blacklisted. ","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":167,"author":{"gitId":"rjeez"},"content":"Format: blist INDEX","lastModifiedDate":"2021-02-27"},{"lineNumber":168,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":169,"author":{"gitId":"ampan98"},"content":"* Changes the blacklist status of the person at the specified `INDEX`.","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"ampan98"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"ampan98"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"rjeez"},"content":"### Filter contacts: `filter`","lastModifiedDate":"2021-02-27"},{"lineNumber":174,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":175,"author":{"gitId":"rjeez"},"content":"Filters shown contacts based on the given keyword(s).","lastModifiedDate":"2021-02-27"},{"lineNumber":176,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":177,"author":{"gitId":"rjeez"},"content":"Format: filter [keyword1, keyword2, …]","lastModifiedDate":"2021-02-27"},{"lineNumber":178,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"ampan98"},"content":"Clears all entries from the contacts list.","lastModifiedDate":"2021-03-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"IceBear789"},"content":"### Adding a new remark or replacing an existing remark : `remark`","lastModifiedDate":"2021-03-03"},{"lineNumber":186,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":187,"author":{"gitId":"ampan98"},"content":"Adds a new remark to the specified person in the contacts list. ","lastModifiedDate":"2021-03-10"},{"lineNumber":188,"author":{"gitId":"IceBear789"},"content":"If the person already has a remark, the new remark will replace the","lastModifiedDate":"2021-03-03"},{"lineNumber":189,"author":{"gitId":"IceBear789"},"content":"existing remark.","lastModifiedDate":"2021-03-03"},{"lineNumber":190,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":191,"author":{"gitId":"IceBear789"},"content":"Format: `remark INDEX r/REMARK`","lastModifiedDate":"2021-03-03"},{"lineNumber":192,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":193,"author":{"gitId":"IceBear789"},"content":"* Adds/Replaces the remark of the person at the specified `INDEX`.","lastModifiedDate":"2021-03-03"},{"lineNumber":194,"author":{"gitId":"IceBear789"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-03-03"},{"lineNumber":195,"author":{"gitId":"IceBear789"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-03"},{"lineNumber":196,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":197,"author":{"gitId":"IceBear789"},"content":"Example:","lastModifiedDate":"2021-03-03"},{"lineNumber":198,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":199,"author":{"gitId":"IceBear789"},"content":"`remark 3 r/Currently on Stay Home Notice`","lastModifiedDate":"2021-03-03"},{"lineNumber":200,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"IceBear789"},"content":"### Sort entries by name : `sort`","lastModifiedDate":"2021-02-28"},{"lineNumber":202,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":203,"author":{"gitId":"IceBear789"},"content":"Sort the entries in the contacts list according to a specific criteria.","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"IceBear789"},"content":"The entries can be sorted in both ascending and descending order.","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"IceBear789"},"content":"Format: `sort c/CRITERIA d/ASCENDING_OR_DESCENDING`","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":208,"author":{"gitId":"IceBear789"},"content":"CRITERIA | Description | Example","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"IceBear789"},"content":"--------|------------------|------","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"IceBear789"},"content":"**name** | Sort by name in alphabetical order| sort c/name d/descending","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":212,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"ampan98"},"content":"SpamEZ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":224,"author":{"gitId":"ampan98"},"content":"SpamEZ data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":227,"author":{"gitId":"ampan98"},"content":"If your changes to the data file makes its format invalid, SpamEZ will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"ampan98"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SpamEZ home folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"ampan98"},"content":"**Blacklist** | `blist INDEX`\u003cbr\u003e e.g., `blist 2`","lastModifiedDate":"2021-03-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"rjeez"},"content":"**Filter** | `filter [keyword1,keyword2,...]`\u003cbr\u003e e.g., `filter[Computing, Student]`","lastModifiedDate":"2021-02-27"},{"lineNumber":253,"author":{"gitId":"ampan98"},"content":"**Find** | `find [n/NAME_KEYWORDS] [t/TAG_KEYWORDS]`\u003cbr\u003e e.g., `find n/James Jake t/classmates`","lastModifiedDate":"2021-03-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"ampan98"},"content":"**List** | `list`","lastModifiedDate":"2021-03-10"},{"lineNumber":256,"author":{"gitId":"IceBear789"},"content":"**Remark** | `remark INDEX r/REMARK`\u003cbr\u003e e.g., `remark 5 r/Currently on Leave of Absence`","lastModifiedDate":"2021-03-03"},{"lineNumber":257,"author":{"gitId":"ampan98"},"content":"**Tag** | `tag n/NAME t/TAG`\u003cbr\u003e e.g., `tag n/Jane Bo t/Student`","lastModifiedDate":"2021-03-10"},{"lineNumber":258,"author":{"gitId":"IceBear789"},"content":"**Sort** | `sort c/CRITERIA d/ASCENDING_OR_DESCENDING`\u003cbr\u003e e.g., `sort c/name d/ascending`","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"JQchong":10,"ampan98":31,"rjeez":19,"-":170,"IceBear789":28}},{"path":"docs/diagrams/BlacklistActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":":User executes blacklist command;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":":The specified person is found;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"if () then ([person is blacklisted])","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"    :Duplicate person but unblacklisted;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"    :Duplicate person but blacklisted;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":":Replace person with duplicated person;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":":Save changes to storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ampan98":13}},{"path":"docs/diagrams/BlacklistSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"participant \":UI\" as UI UI_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"participant \":Logic\" as Logic LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"[-\u003e UI : \"blist 1\"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"activate UI UI_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"UI -\u003e Logic : execute(\"blist 1\")","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"activate Logic LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"Logic -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"activate Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"Model --\u003e Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"Logic -\u003e Storage : saveAddressBook(addressBook)","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"activate Storage STORAGE_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"Storage -\u003e Storage : Save to file","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"activate Storage STORAGE_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"Storage --\u003e Storage","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"deactivate Storage","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"Storage --\u003e Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"deactivate Storage","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"Logic --\u003e UI","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"deactivate Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"[\u003c-- UI","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"deactivate UI","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ampan98":38}},{"path":"docs/diagrams/BlacklistState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"title After command \"add n/David\"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"package Objects \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"    object \"__:AddressBook__\" as ab","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"    object \"__:Person__\" as person","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    person : name \u003d \"David\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    object \"__:Blacklist__\" as blacklist","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    blacklist : isBlacklisted \u003d false","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"ab -\u003e person","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"person -\u003e blacklist","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ampan98":19}},{"path":"docs/diagrams/BlacklistState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"title After command \"blist INDEX\"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"package Objects \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"    object \"__:AddressBook__\" as ab","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"    object \"__personToEdit:Person__\" as person1","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    person1 : name \u003d \"David\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    object \"__:Blacklist__\" as blacklist1","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    blacklist1 : isBlacklisted \u003d false","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    object \"__editedPerson:Person__\" as person2","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    person2 : name \u003d \"David\"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    object \"__:Blacklist__\" as blacklist2","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"    blacklist2 : isBlacklisted \u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"person1 -\u003e blacklist1","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"ab -\u003e person2","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"person2 -\u003e blacklist2","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"person1 -[hidden]-\u003e person2","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"ampan98":27}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JQchong"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"JQchong"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"JQchong"},"content":":User executes find command;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"JQchong"},"content":"repeat","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"    :Check if the next person matches the keywords;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"JQchong"},"content":"repeat while () is ([has next person])","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"JQchong"},"content":"-\u003e [else];","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":":Display results;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"JQchong"},"content":"end","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"JQchong"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"JQchong":10}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JQchong"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"JQchong"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"JQchong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"JQchong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"JQchong"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"JQchong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"JQchong"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"JQchong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"JQchong"},"content":"participant \":Model\" as Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"JQchong"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"JQchong"},"content":"[-\u003e LogicManager : execute(\"find n/Alex t/friends\")","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"JQchong"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"JQchong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/Alex t/friends\")","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"JQchong"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"JQchong"},"content":"create FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"JQchong"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"JQchong"},"content":"activate FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"JQchong"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"JQchong"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"JQchong"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"n/Alex t/friends\")","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"JQchong"},"content":"activate FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"JQchong"},"content":"create FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"JQchong"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"JQchong"},"content":"deactivate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"JQchong"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"JQchong"},"content":"deactivate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"JQchong"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"JQchong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"JQchong"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"JQchong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"JQchong"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"JQchong"},"content":"activate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"JQchong"},"content":"FindCommand -\u003e Model : updateFilteredPersonList","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"JQchong"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"JQchong"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"JQchong"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"JQchong"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"JQchong"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"JQchong"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"JQchong"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"JQchong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"JQchong"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"JQchong"},"content":"deactivate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"JQchong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"JQchong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"JQchong"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"JQchong":67}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"!include Style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"participant \":UI\" as UI UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"participant \":Model\" as Model MODEL_COLOR_T2","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"participant \":Storage\" as Storage STORAGE_COLOR_T2","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"activate UI UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"UI -\u003e LogicManager : execute(\"sort c/name...\")","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(sort...)","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"create SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"AddressBookParser -\u003e SortCommand :","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"activate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"SortCommand --\u003e AddressBookParser :","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"activate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"SortCommand -\u003e Model : sortByName(True)","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"Model --\u003e SortCommand : result","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"IceBear789"},"content":"deactivate SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"IceBear789"},"content":"LogicManager -\u003e Storage : saveAddressBook(addressBook)","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"IceBear789"},"content":"activate Storage","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"IceBear789"},"content":"Storage -\u003e Storage : Save to file","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"IceBear789"},"content":"activate Storage","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"IceBear789"},"content":"deactivate Storage","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"IceBear789"},"content":"Storage --\u003e LogicManager :","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"IceBear789"},"content":"deactivate Storage","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"IceBear789"},"content":"LogicManager --\u003e UI : result","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"IceBear789"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"IceBear789"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"IceBear789":62}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JQchong"},"content":"**SpamEZ is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JQchong"},"content":"* If you are interested in using SpamEZ, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"JQchong"},"content":"* If you are interested about developing SpamEZ, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JQchong":3,"-":16}},{"path":"docs/team/ampan98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"* **Project management**:","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"  * User Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"* **Community**:","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"* **Tools**:","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"IceBear789":46}},{"path":"docs/team/icebear789.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"* **Project management**:","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"  * User Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"* **Community**:","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"* **Tools**:","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"IceBear789":46}},{"path":"docs/team/jqchong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"* **Project management**:","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"  * User Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"* **Community**:","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"* **Tools**:","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"IceBear789":46}},{"path":"docs/team/rjeez.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"* **Project management**:","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"  * User Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"* **Community**:","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"* **Tools**:","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"IceBear789":46}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODE_OF_CONTACT;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"            + PREFIX_MODE_OF_CONTACT + \"MODE_OF_CONTACT \"","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"            + PREFIX_MODE_OF_CONTACT + \"email \"","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rjeez":3,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/BlacklistCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":" * Blacklists an existing non-blacklisted person in the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":" * Removes the person from blacklist if already blacklisted.","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"public class BlacklistCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    public static final String COMMAND_WORD \u003d \"blist\";","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    public static final String MESSAGE_BLACKLIST_SUCCESS \u003d \"Blacklisted Person: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"    public static final String MESSAGE_UNBLACKLIST_SUCCESS \u003d \"Removed Person from blacklist: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Blacklists/Un-blacklists the person identified \"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"            + \"Current blacklist status will be changed.\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"BlacklistLogger\");","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"    private final Index index;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"    private Blacklist blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"     * @param index of the person in the filtered person list to edit the blacklist status","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"    public BlacklistCommand(Index index) {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        this.blacklist \u003d new Blacklist();","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"        logger.log(Level.INFO, \"Starting execution of BlacklistCommand\");","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size() || index.getZeroBased() \u003c 0) {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"        blacklist \u003d new Blacklist(!personToEdit.getBlacklist().isBlacklisted);","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"        assert(blacklist.isBlacklisted !\u003d personToEdit.getBlacklist().isBlacklisted);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"        logger.log(Level.INFO, \"Going to create replacement person\");","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"        Person editedPerson \u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"            editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"                    personToEdit.getAddress(), personToEdit.getRemark(), personToEdit.getModeOfContact(),","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"                    blacklist, personToEdit.getTags());","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"            assert(editedPerson.getBlacklist().isBlacklisted !\u003d personToEdit.getBlacklist().isBlacklisted);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"            logger.log(Level.SEVERE, \"Create person error\", ex);","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"        logger.log(Level.INFO, \"Replacement person created\");","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"        logger.log(Level.INFO, \"Going to replace person in model\");","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"            logger.log(Level.SEVERE, \"Edit model error\", ex);","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"        logger.log(Level.INFO, \"Person replaced\");","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"        logger.log(Level.INFO, \"End execution of BlacklistCommand\");","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":"     * Generates a command execution success message based on whether the blacklist is added to or removed from","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":"        String message \u003d blacklist.isBlacklisted ? MESSAGE_BLACKLIST_SUCCESS : MESSAGE_UNBLACKLIST_SUCCESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"ampan98"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"ampan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"ampan98"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"ampan98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"ampan98"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"ampan98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"ampan98"},"content":"        if (!(other instanceof BlacklistCommand)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"ampan98"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"ampan98"},"content":"        // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"ampan98"},"content":"        BlacklistCommand e \u003d (BlacklistCommand) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"ampan98"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ampan98":109}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODE_OF_CONTACT;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"            + \"[\" + PREFIX_MODE_OF_CONTACT + \"MODE_OF_CONTACT] \"","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"IceBear789"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"rjeez"},"content":"        ModeOfContact updatedModeOfContact \u003d editPersonDescriptor.getModeOfContact()","lastModifiedDate":"2021-03-05"},{"lineNumber":106,"author":{"gitId":"rjeez"},"content":"                .orElse(personToEdit.getModeOfContact());","lastModifiedDate":"2021-03-05"},{"lineNumber":107,"author":{"gitId":"ampan98"},"content":"        Blacklist updatedBlacklist \u003d personToEdit.getBlacklist(); // edit command does not allow editing remarks","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"IceBear789"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedModeOfContact,","lastModifiedDate":"2021-03-06"},{"lineNumber":111,"author":{"gitId":"ampan98"},"content":"                updatedBlacklist, updatedTags);","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"IceBear789"},"content":"        private Remark remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":142,"author":{"gitId":"rjeez"},"content":"        private ModeOfContact modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"IceBear789"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":157,"author":{"gitId":"rjeez"},"content":"            setModeOfContact(toCopy.modeOfContact);","lastModifiedDate":"2021-03-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"rjeez"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, modeOfContact, tags);","lastModifiedDate":"2021-03-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"IceBear789"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"IceBear789"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":202,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":203,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":204,"author":{"gitId":"IceBear789"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-03-03"},{"lineNumber":205,"author":{"gitId":"IceBear789"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":206,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":207,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":208,"author":{"gitId":"rjeez"},"content":"        public void setModeOfContact(ModeOfContact modeOfContact) {","lastModifiedDate":"2021-03-05"},{"lineNumber":209,"author":{"gitId":"rjeez"},"content":"            this.modeOfContact \u003d modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":210,"author":{"gitId":"rjeez"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":211,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":212,"author":{"gitId":"rjeez"},"content":"        public Optional\u003cModeOfContact\u003e getModeOfContact() {","lastModifiedDate":"2021-03-05"},{"lineNumber":213,"author":{"gitId":"rjeez"},"content":"            return Optional.ofNullable(modeOfContact);","lastModifiedDate":"2021-03-05"},{"lineNumber":214,"author":{"gitId":"rjeez"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":215,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"rjeez"},"content":"                    \u0026\u0026 getModeOfContact().equals(e.getModeOfContact())","lastModifiedDate":"2021-03-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ampan98":3,"rjeez":17,"-":223,"IceBear789":13}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"JQchong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.ReturnTruePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"JQchong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names and/or\"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"JQchong"},"content":"            + \"tags contain any of \"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"JQchong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"JQchong"},"content":"            + PREFIX_NAME + \"NAME_KEYWORD [MORE_NAME_KEYWORDS]... \"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"JQchong"},"content":"            + PREFIX_TAG + \"TAG_KEYWORD [MORE_TAG_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"JQchong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"JQchong"},"content":"            + PREFIX_NAME + \"alice bob charlie \"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"JQchong"},"content":"            + PREFIX_TAG + \"friends neighbours\";","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"JQchong"},"content":"    private final Predicate\u003cPerson\u003e namePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"JQchong"},"content":"    private final Predicate\u003cPerson\u003e tagPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"JQchong"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"JQchong"},"content":"     * Creates a FindCommand to find the {@code Person}s with matching keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"JQchong"},"content":"     * @param namePredicate Predicate made up of names to match.","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"JQchong"},"content":"     * @param tagPredicate Predicate made up of tags to match.","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"JQchong"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"JQchong"},"content":"    public FindCommand(Predicate\u003cPerson\u003e namePredicate,","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"JQchong"},"content":"                       Predicate\u003cPerson\u003e tagPredicate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"JQchong"},"content":"        assert (namePredicate instanceof NameContainsKeywordsPredicate","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"JQchong"},"content":"                || namePredicate instanceof ReturnTruePredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"JQchong"},"content":"        assert (tagPredicate instanceof PersonTagContainsKeywordsPredicate","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"JQchong"},"content":"                || tagPredicate instanceof ReturnTruePredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"JQchong"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"JQchong"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"JQchong"},"content":"        model.updateFilteredPersonList(namePredicate.and(tagPredicate));","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"JQchong"},"content":"                \u0026\u0026 namePredicate.equals(((FindCommand) other).namePredicate)","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"JQchong"},"content":"                \u0026\u0026 tagPredicate.equals(((FindCommand) other).tagPredicate)); // state check","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JQchong":34,"-":34}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":" * Add a remark a person to the address book. If the person already has a remark, the existing","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":" * remark will be replaced.","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds or replaces the remark of the\"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"            + \" person identified by the index number used in the last person listing.\\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"            + \"Parameters: INDEX (must be a positive integer) + \"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"            + \"r/Currently in Quarantine.\";","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    private final Index index;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"    private final Remark remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"     * Add or replace the remark of an existing person in the address book.","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"IceBear789"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"IceBear789"},"content":"        assert (this.remark !\u003d null) : \"Remark cannot be null\";","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"IceBear789"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"IceBear789"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"IceBear789"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"IceBear789"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"IceBear789"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"                personToEdit.getAddress(), remark, personToEdit.getModeOfContact(), personToEdit.getBlacklist(),","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"                personToEdit.getTags());","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"IceBear789"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"IceBear789"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"IceBear789"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_REMARK_SUCCESS, personToEdit));","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"IceBear789"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"IceBear789"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"IceBear789"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"IceBear789"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"IceBear789"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"IceBear789"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"IceBear789"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"IceBear789"},"content":"        // state check","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"IceBear789"},"content":"        RemarkCommand remarkCommand \u003d (RemarkCommand) other;","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"IceBear789"},"content":"        return index.equals(remarkCommand.index)","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"IceBear789"},"content":"                \u0026\u0026 remark.equals(remarkCommand.remark);","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"ampan98":2,"IceBear789":83}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIRECTION;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_CRITERIA;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"enum Criteria {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"    NAME(\"name\"), PHONENUMBER(\"phone\");","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"    private String criteria;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"    private Criteria(String criteria) {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"        this.criteria \u003d criteria;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":" * Sorts all persons in the address book by name.","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"            + \": Sorts the entries in the contact list according to a specific criteria.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"            + \"Parameters: \" + PREFIX_SORT_CRITERIA + \"CRITERIA \"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"            + PREFIX_DIRECTION + \"ASCENDING_OR_DESCENDING \\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"            + \" \" + PREFIX_SORT_CRITERIA + \"name \"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"            + PREFIX_DIRECTION + \"ascending\";","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully sorted the list\";","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"    public static final String CRITERIA_MESSAGE_CONSTRAINTS \u003d \"Criteria should be one of the following: name, phone\";","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"    private final Criteria criteria;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"    private final boolean isAscending;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"     * Creates a sort command to sort the list by a specified criteria.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"    public SortCommand(String criteria, boolean isAscending) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"        requireAllNonNull(criteria, isAscending);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"        this.criteria \u003d convertStringToCriteria(criteria);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"        this.isAscending \u003d isAscending;","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"IceBear789"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"IceBear789"},"content":"        if (criteria.equals(Criteria.NAME)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"IceBear789"},"content":"            model.sortByName(isAscending);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"IceBear789"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"IceBear789"},"content":"    private static Criteria convertStringToCriteria(String criteria) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"IceBear789"},"content":"        if (!(criteria.equals(\"name\") || (criteria.equals(\"phone\")))) {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"IceBear789"},"content":"            throw new ParseException(CRITERIA_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"IceBear789"},"content":"        if (criteria.equals(\"name\")) {","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"IceBear789"},"content":"            return Criteria.NAME;","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"IceBear789"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"IceBear789"},"content":"            return Criteria.PHONENUMBER;","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"IceBear789":69}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODE_OF_CONTACT;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"                        PREFIX_MODE_OF_CONTACT, PREFIX_TAG);","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"                PREFIX_EMAIL, PREFIX_MODE_OF_CONTACT)","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"rjeez"},"content":"        ModeOfContact modeofContact \u003d ParserUtil.parseModeOfContact(argMultimap.getValue(PREFIX_MODE_OF_CONTACT).get());","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"        Blacklist blacklist \u003d new Blacklist(); // add command does not allow blacklisting straight away","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"        Person person \u003d new Person(name, phone, email, address, modeofContact, blacklist, tagList);","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ampan98":3,"rjeez":7,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"import seedu.address.logic.commands.BlacklistCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"        case BlacklistCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"            return new BlacklistCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"IceBear789"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"IceBear789"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"IceBear789"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"IceBear789"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ampan98":4,"-":76,"IceBear789":8}},{"path":"src/main/java/seedu/address/logic/parser/BlacklistCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import seedu.address.logic.commands.BlacklistCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":" * Parses input arguments and creates a new {@code BlacklistCommand} object","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"public class BlacklistCommandParser implements Parser\u003cBlacklistCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code BlacklistCommand}","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"     * and returns a {@code BlacklistCommand} object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    public BlacklistCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"            return new BlacklistCommand(index);","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, BlacklistCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ampan98":28}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    public static final Prefix PREFIX_MODE_OF_CONTACT \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"    public static final Prefix PREFIX_SORT_CRITERIA \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"    public static final Prefix PREFIX_DIRECTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rjeez":1,"-":14,"IceBear789":3}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODE_OF_CONTACT;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"                        PREFIX_MODE_OF_CONTACT, PREFIX_TAG);","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"rjeez"},"content":"        if (argMultimap.getValue(PREFIX_MODE_OF_CONTACT).isPresent()) {","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"            editPersonDescriptor.setModeOfContact(ParserUtil.parseModeOfContact(argMultimap","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"                    .getValue(PREFIX_MODE_OF_CONTACT).get()));","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"rjeez"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rjeez":7,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"JQchong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.ReturnTruePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"JQchong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"JQchong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"JQchong"},"content":"        Predicate\u003cPerson\u003e namePredicate \u003d new ReturnTruePredicate();","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"JQchong"},"content":"        Predicate\u003cPerson\u003e tagPredicate \u003d new ReturnTruePredicate();","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"JQchong"},"content":"        Optional\u003cString\u003e nameKeywords \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"JQchong"},"content":"        Optional\u003cString\u003e tagKeywords \u003d argMultimap.getValue(PREFIX_TAG);","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"JQchong"},"content":"        boolean bothEmpty \u003d nameKeywords.isEmpty() \u0026\u0026 tagKeywords.isEmpty();","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"JQchong"},"content":"        boolean emptyNameKeywords \u003d nameKeywords.isPresent() \u0026\u0026 nameKeywords.get().equals(\"\");","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"JQchong"},"content":"        boolean emptyTagKeywords \u003d tagKeywords.isPresent() \u0026\u0026 tagKeywords.get().equals(\"\");","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"JQchong"},"content":"        if (bothEmpty || emptyNameKeywords || emptyTagKeywords) {","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"JQchong"},"content":"        if (nameKeywords.isPresent()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"JQchong"},"content":"            String[] names \u003d nameKeywords.get().split(\"\\\\s+\");","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"JQchong"},"content":"            namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(names));","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"JQchong"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"JQchong"},"content":"        if (tagKeywords.isPresent()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"JQchong"},"content":"            String[] tags \u003d tagKeywords.get().split(\"\\\\s+\");","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"JQchong"},"content":"            tagPredicate \u003d new PersonTagContainsKeywordsPredicate(Arrays.asList(tags));","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"JQchong"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"JQchong"},"content":"        return new FindCommand(namePredicate, tagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JQchong":30,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"IceBear789"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"IceBear789"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"IceBear789"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"IceBear789"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"IceBear789"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"IceBear789"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"IceBear789"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"IceBear789"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"IceBear789"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"IceBear789"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"IceBear789"},"content":"    public static String parseCriteria(String criteria) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(criteria);","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"IceBear789"},"content":"        String trimmedCriteria \u003d criteria.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"IceBear789"},"content":"        return trimmedCriteria;","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"IceBear789"},"content":"     * Returns true if the input string is ascending, and false otherwise.","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"IceBear789"},"content":"    public static boolean parseIsAscending(String isAscending) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(isAscending);","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"IceBear789"},"content":"        String trimmedIsAscending \u003d isAscending.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"IceBear789"},"content":"        if (!trimmedIsAscending.equals(\"ascending\") \u0026\u0026 !trimmedIsAscending.equals(\"descending\")) {","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"IceBear789"},"content":"            throw new ParseException(\"Direction should either be ascending or descending\");","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"IceBear789"},"content":"        return trimmedIsAscending.equals(\"ascending\");","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"rjeez"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":137,"author":{"gitId":"rjeez"},"content":"     * Parses a {@code String modeOfContact} into an {@code ModeOfContact}.","lastModifiedDate":"2021-03-05"},{"lineNumber":138,"author":{"gitId":"rjeez"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-05"},{"lineNumber":139,"author":{"gitId":"rjeez"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":140,"author":{"gitId":"rjeez"},"content":"     * @throws ParseException if the given {@code modeOfContact} is invalid.","lastModifiedDate":"2021-03-05"},{"lineNumber":141,"author":{"gitId":"rjeez"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":142,"author":{"gitId":"rjeez"},"content":"    public static ModeOfContact parseModeOfContact(String modeOfContact) throws ParseException {","lastModifiedDate":"2021-03-05"},{"lineNumber":143,"author":{"gitId":"rjeez"},"content":"        requireNonNull(modeOfContact);","lastModifiedDate":"2021-03-05"},{"lineNumber":144,"author":{"gitId":"rjeez"},"content":"        String trimmedModeOfContact \u003d modeOfContact.trim();","lastModifiedDate":"2021-03-05"},{"lineNumber":145,"author":{"gitId":"rjeez"},"content":"        if (!ModeOfContact.isValidModeOfContact(trimmedModeOfContact)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":146,"author":{"gitId":"rjeez"},"content":"            throw new ParseException(ModeOfContact.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":147,"author":{"gitId":"rjeez"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":148,"author":{"gitId":"rjeez"},"content":"        return new ModeOfContact(trimmedModeOfContact);","lastModifiedDate":"2021-03-05"},{"lineNumber":149,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":178,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rjeez":17,"-":125,"IceBear789":37}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"     * Parses the give {@code String} of arguments in the context of the RemarkCommand","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"     * and returns a RemarkCommand object for execution.","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"                PREFIX_REMARK);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"        Index index;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"            Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"            return new RemarkCommand(index, remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"        } catch (NoSuchElementException ive) {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"IceBear789":46}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIRECTION;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_CRITERIA;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"                PREFIX_SORT_CRITERIA, PREFIX_DIRECTION);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"            String sortCriteria \u003d ParserUtil.parseCriteria(argMultimap.getValue(PREFIX_SORT_CRITERIA).get());","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"            boolean reverse \u003d ParserUtil.parseIsAscending(argMultimap.getValue(PREFIX_DIRECTION).get());","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"            return new SortCommand(sortCriteria, reverse);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"        } catch (NoSuchElementException ive) {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"                    SortCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"IceBear789":34}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"IceBear789"},"content":"     * Sorts the list by name.","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"IceBear789"},"content":"     * @param isAscending The list will be sorted by ascending order if true and descending","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"IceBear789"},"content":"     * order otherwise.","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":101,"author":{"gitId":"IceBear789"},"content":"    public void sortByName(boolean isAscending) {","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"IceBear789"},"content":"        persons.sortByName(isAscending);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":104,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":120,"IceBear789":9}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"IceBear789"},"content":"     * Sorts the list by name.","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"IceBear789"},"content":"     * @param isAscending The list will be sorted by ascending order if true and descending","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"IceBear789"},"content":"     * otherwise.","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"IceBear789"},"content":"    void sortByName(boolean isAscending);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"IceBear789":7}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":116,"author":{"gitId":"IceBear789"},"content":"    public void sortByName(boolean isAscending) {","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"IceBear789"},"content":"        addressBook.sortByName(isAscending);","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":151,"IceBear789":5}},{"path":"src/main/java/seedu/address/model/person/Blacklist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":" * Represents a Person\u0027s blacklist status in the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"public class Blacklist {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"    public final Boolean isBlacklisted;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"     * Constructs an {@code Blacklist}.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"     * @param isBlacklisted A valid boolean.","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    public Blacklist(Boolean isBlacklisted) {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"        requireNonNull(isBlacklisted);","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        this.isBlacklisted \u003d isBlacklisted;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"     * Constructs an {@code Blacklist} with default input of false.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"    public Blacklist() {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"        this.isBlacklisted \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"        if (isBlacklisted) {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"            return \"Blacklisted\";","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"            return \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"                || (other instanceof Blacklist // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"                \u0026\u0026 isBlacklisted.equals(((Blacklist) other).isBlacklisted)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"        return isBlacklisted.hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ampan98":49}},{"path":"src/main/java/seedu/address/model/person/ModeOfContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjeez"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"rjeez"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"rjeez"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"rjeez"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":" * Represents a Person\u0027s preferred mode of contact in the address book.","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModeOfContact(String)}","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"public class ModeOfContact {","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"rjeez"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"            \"Mode of Contact should only be address, phone or email.\";","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"rjeez"},"content":"    public static final String VALIDATION_REGEX \u003d \"phone|address|email\";","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"    public final String value;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"rjeez"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"     * Constructs an {@code ModeOfContact}.","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"rjeez"},"content":"     * @param modeOfContact A valid mode of contact.","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"rjeez"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"rjeez"},"content":"    public ModeOfContact(String modeOfContact) {","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"rjeez"},"content":"        requireNonNull(modeOfContact);","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"        checkArgument(isValidModeOfContact(modeOfContact));","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"        value \u003d modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"    public static boolean isValidModeOfContact(String test) {","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"    public String toString() {","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"        return value;","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"rjeez"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"                || (other instanceof ModeOfContact // instanceof handles nulls","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"                \u0026\u0026 value.equals(((ModeOfContact) other).value)); // state check","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"rjeez"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"rjeez"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"rjeez":47}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"    public int compareTo(Name otherName) {","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"        return this.fullName.compareTo(otherName.fullName);","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"IceBear789":5}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"    private final Remark remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"    private final ModeOfContact modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    private final Blacklist blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"                  ModeOfContact modeOfContact, Blacklist blacklist, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"        requireAllNonNull(name, phone, email, address, modeOfContact, tags);","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"        this.remark \u003d new Remark(\"No remark\");","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"        this.modeOfContact \u003d modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        this.blacklist \u003d blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"     * Overloaded constructor that takes in one additional argument to add a remark to a person.","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"IceBear789"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"IceBear789"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark,","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"                  ModeOfContact modeOfContact, Blacklist blacklist, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"IceBear789"},"content":"        requireAllNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"IceBear789"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"IceBear789"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"IceBear789"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"IceBear789"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"IceBear789"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"IceBear789"},"content":"        this.modeOfContact \u003d modeOfContact;","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"        this.blacklist \u003d blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"IceBear789"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"IceBear789"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"IceBear789"},"content":"        return remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":"    public ModeOfContact getModeOfContact() {","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"rjeez"},"content":"        return modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":87,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"    public Blacklist getBlacklist() {","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":"        return this.blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":132,"author":{"gitId":"IceBear789"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2021-03-06"},{"lineNumber":133,"author":{"gitId":"rjeez"},"content":"                \u0026\u0026 otherPerson.getModeOfContact().equals(getModeOfContact())","lastModifiedDate":"2021-03-05"},{"lineNumber":134,"author":{"gitId":"ampan98"},"content":"                \u0026\u0026 otherPerson.getBlacklist().equals(getBlacklist())","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"IceBear789"},"content":"        return Objects.hash(name, phone, email, address, remark, modeOfContact, tags);","lastModifiedDate":"2021-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":153,"author":{"gitId":"IceBear789"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"IceBear789"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2021-03-03"},{"lineNumber":155,"author":{"gitId":"IceBear789"},"content":"                .append(getRemark())","lastModifiedDate":"2021-03-06"},{"lineNumber":156,"author":{"gitId":"rjeez"},"content":"                .append(\"; Mode Of Contact: \")","lastModifiedDate":"2021-03-05"},{"lineNumber":157,"author":{"gitId":"ampan98"},"content":"                .append(getModeOfContact())","lastModifiedDate":"2021-03-10"},{"lineNumber":158,"author":{"gitId":"ampan98"},"content":"                .append(\"; Blacklist: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"ampan98"},"content":"                .append(getBlacklist());","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ampan98":14,"rjeez":9,"-":119,"IceBear789":27}},{"path":"src/main/java/seedu/address/model/person/PersonTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JQchong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"JQchong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"JQchong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"JQchong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"JQchong"},"content":" * Tests that a {@code Person} has one of his/her {@code Tag}s matches any of the keywords given.","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"JQchong"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"JQchong"},"content":"public class PersonTagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"JQchong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"JQchong"},"content":"    public PersonTagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"JQchong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"JQchong"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"JQchong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"JQchong"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"JQchong"},"content":"                .anyMatch(keyword -\u003e person.getTags().stream().anyMatch(","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"JQchong"},"content":"                    tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"JQchong"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"JQchong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"JQchong"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"JQchong"},"content":"                || (other instanceof PersonTagContainsKeywordsPredicate","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"JQchong"},"content":"                \u0026\u0026 keywords.equals(((PersonTagContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"JQchong"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"JQchong":31}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"public class Remark {","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    /*","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"    public final String value;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"        value \u003d remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"     * Return true if a given string is a valid remark.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"        return value;","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"IceBear789"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"IceBear789"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"IceBear789"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"IceBear789"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"IceBear789":56}},{"path":"src/main/java/seedu/address/model/person/ReturnTruePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JQchong"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"JQchong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"JQchong"},"content":" * A dummy predicate that returns true all the time.","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"JQchong"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":"public class ReturnTruePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"JQchong"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"JQchong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"JQchong"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"JQchong"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"JQchong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"JQchong"},"content":"        return other instanceof ReturnTruePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"JQchong"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"JQchong":18}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"import java.util.Collections;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.comparator.NameComparator;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"IceBear789"},"content":"     * Sorts the list by name.","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"IceBear789"},"content":"     * @param isAscending The list will be sorted by ascending order if true and descending","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"IceBear789"},"content":"     * order otherwise.","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":107,"author":{"gitId":"IceBear789"},"content":"    public void sortByName(boolean isAscending) {","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"IceBear789"},"content":"        NameComparator nameComparator \u003d new NameComparator();","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"IceBear789"},"content":"        Collections.sort(internalList, nameComparator);","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"IceBear789"},"content":"        if (!isAscending) {","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"IceBear789"},"content":"            Collections.reverse(internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":114,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":137,"IceBear789":15}},{"path":"src/main/java/seedu/address/model/person/comparator/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.model.person.comparator;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"public class NameComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"    public int compare(Person firstPerson, Person secondPerson) {","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"        return firstPerson.getName().compareTo(secondPerson.getName());","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"IceBear789":13}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"rjeez"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new ModeOfContact(\"phone\"),","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"                new Blacklist(), getTagSet(\"friends\")),","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"rjeez"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new ModeOfContact(\"address\"),","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"                new Blacklist(true), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"rjeez"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new ModeOfContact(\"phone\"),","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"                new Blacklist(false), getTagSet(\"neighbours\")),","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"rjeez"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new ModeOfContact(\"email\"),","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"                new Blacklist(), getTagSet(\"family\")),","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new ModeOfContact(\"email\"),","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"                new Blacklist(true), getTagSet(\"classmates\")),","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"rjeez"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new ModeOfContact(\"email\"),","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"                new Blacklist(false), getTagSet(\"colleagues\"))","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ampan98":7,"rjeez":7,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    private final String remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"    private final String modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"    private final Boolean isBlacklisted;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"modeOfContact\") String modeOfContact,","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"            @JsonProperty(\"isBlacklisted\") Boolean isBlacklisted, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"IceBear789"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"rjeez"},"content":"        this.modeOfContact \u003d modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"        this.isBlacklisted \u003d isBlacklisted;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"IceBear789"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"rjeez"},"content":"        modeOfContact \u003d source.getModeOfContact().value;","lastModifiedDate":"2021-03-05"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"        isBlacklisted \u003d source.getBlacklist().isBlacklisted;","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"IceBear789"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"IceBear789"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"IceBear789"},"content":"        if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"IceBear789"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"IceBear789"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":126,"author":{"gitId":"rjeez"},"content":"        if (modeOfContact \u003d\u003d null) {","lastModifiedDate":"2021-03-05"},{"lineNumber":127,"author":{"gitId":"rjeez"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-05"},{"lineNumber":128,"author":{"gitId":"rjeez"},"content":"                    ModeOfContact.class.getSimpleName()));","lastModifiedDate":"2021-03-05"},{"lineNumber":129,"author":{"gitId":"rjeez"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":130,"author":{"gitId":"rjeez"},"content":"        if (!ModeOfContact.isValidModeOfContact(modeOfContact)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":131,"author":{"gitId":"rjeez"},"content":"            throw new IllegalValueException(ModeOfContact.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":132,"author":{"gitId":"rjeez"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":133,"author":{"gitId":"rjeez"},"content":"        final ModeOfContact modelModeOfContact \u003d new ModeOfContact(modeOfContact);","lastModifiedDate":"2021-03-05"},{"lineNumber":134,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":135,"author":{"gitId":"ampan98"},"content":"        if (isBlacklisted \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"ampan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"ampan98"},"content":"                    Blacklist.class.getSimpleName()));","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"ampan98"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"ampan98"},"content":"        final Blacklist modelBlacklist \u003d new Blacklist(isBlacklisted);","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"ampan98"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark,","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"ampan98"},"content":"                modelModeOfContact, modelBlacklist, modelTags);","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ampan98":13,"rjeez":13,"-":107,"IceBear789":13}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"    private Label remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"    private Label modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"    @FXML","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"    private Label blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"IceBear789"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"        modeOfContact.setText(person.getModeOfContact().value);","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"        blacklist.setText(person.getBlacklist().toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ampan98":3,"rjeez":3,"-":77,"IceBear789":3}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"      \u003cLabel fx:id\u003d\"modeOfContact\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$modeOfContact\" /\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"      \u003cLabel fx:id\u003d\"blacklist\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$modeOfContact\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ampan98":1,"rjeez":1,"-":36,"IceBear789":1}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    \"remark\": \"No remark\",","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"    \"modeOfContact\" : \"address\",","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\": false","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    \"remark\": \"No remark\",","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    \"modeOfContact\" : \"address\",","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\": false","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ampan98":6,"-":11,"IceBear789":2}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    \"remark\": \"No remark\",","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"    \"modeOfContact\" : \"address\",","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\": false","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ampan98":3,"-":7,"IceBear789":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"    \"remark\": \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"email\",","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\": false,","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"    \"remark\": \"No remark\",","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    \"modeOfContact\" : \"phone\",","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\": false","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ampan98":3,"rjeez":1,"-":13,"IceBear789":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"    \"remark\": \"No remark\",","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"    \"modeOfContact\" : \"address\",","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\": false","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ampan98":2,"-":7,"IceBear789":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"email\",","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : false,","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"address\",","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : false,","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"phone\",","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : true,","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"phone\",","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : false,","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"email\",","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : false,","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"address\",","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : true,","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"No remark\",","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"IceBear789"},"content":"    \"modeOfContact\" : \"phone\",","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : false,","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"IceBear789"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"IceBear789"},"content":"  }, {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"IceBear789"},"content":"    \"name\" : \"Jane Vermilion\",","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"IceBear789"},"content":"    \"phone\" : \"87514098\",","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"IceBear789"},"content":"    \"email\" : \"jane@example.com\",","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"IceBear789"},"content":"    \"address\" : \"7th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"IceBear789"},"content":"    \"remark\" : \"On leave of absence\",","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"rjeez"},"content":"    \"modeOfContact\" : \"phone\",","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"    \"isBlacklisted\" : true,","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ampan98":8,"rjeez":7,"-":46,"IceBear789":15}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODE_OF_CONTACT_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":"                + ADDRESS_DESC_AMY + MODE_OF_CONTACT_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"rjeez":2,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":151,"author":{"gitId":"IceBear789"},"content":"        @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":152,"author":{"gitId":"IceBear789"},"content":"        public void sortByName(boolean isAscending) {","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"IceBear789"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-02-28"},{"lineNumber":154,"author":{"gitId":"IceBear789"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":194,"IceBear789":5}},{"path":"src/test/java/seedu/address/logic/commands/BlacklistCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":" * Contains integration tests (interaction with the Model) and unit tests for BlacklistCommand.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"public class BlacklistCommandTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"        BlacklistCommand blacklistCommand \u003d new BlacklistCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"        assertCommandFailure(blacklistCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"        // ensures that outOfBoundIndex is still in bounds of contacts list","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        BlacklistCommand blacklistCommand \u003d new BlacklistCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"        assertCommandFailure(blacklistCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"    public void equals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"        final BlacklistCommand standardBlacklistCommand \u003d new BlacklistCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"        assertTrue(standardBlacklistCommand.equals(standardBlacklistCommand));","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"        BlacklistCommand commandWithSameValues \u003d new BlacklistCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"        assertTrue(standardBlacklistCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"        assertFalse(standardBlacklistCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"        assertFalse(standardBlacklistCommand.equals(new BlacklistCommand(INDEX_SECOND_PERSON)));","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ampan98":64}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODE_OF_CONTACT;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"    public static final String VALID_REMARK_AMY \u003d \"No remark\";","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"    public static final String VALID_REMARK_BOB \u003d \"No remark\";","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"    public static final String VALID_MODE_OF_CONTACT_AMY \u003d \"email\";","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"rjeez"},"content":"    public static final String VALID_MODE_OF_CONTACT_BOB \u003d \"phone\";","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"    public static final Boolean VALID_BLACKLIST_AMY \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"    public static final Boolean VALID_BLACKLIST_BOB \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"    public static final String MODE_OF_CONTACT_DESC_AMY \u003d \" \" + PREFIX_MODE_OF_CONTACT + VALID_MODE_OF_CONTACT_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"    public static final String MODE_OF_CONTACT_DESC_BOB \u003d \" \" + PREFIX_MODE_OF_CONTACT + VALID_MODE_OF_CONTACT_BOB;","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"IceBear789"},"content":"    public static final String INVALID_REMARK_DESC \u003d \" \" + PREFIX_REMARK; // empty string not allowed for remarks","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"    public static final String INVALID_MODE_OF_CONTACT_DESC \u003d \" \" + PREFIX_MODE_OF_CONTACT + \"no\";","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"                .withModeOfContact(VALID_MODE_OF_CONTACT_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":"                .withModeOfContact(VALID_MODE_OF_CONTACT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ampan98":2,"rjeez":8,"-":126,"IceBear789":4}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODE_OF_CONTACT_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"rjeez"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withModeOfContact(VALID_MODE_OF_CONTACT_BOB).build();","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"rjeez"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"rjeez":4,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"JQchong"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"JQchong"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"JQchong"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.ReturnTruePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"JQchong"},"content":"    private ReturnTruePredicate returnTruePredicate \u003d new ReturnTruePredicate();","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"JQchong"},"content":"        PersonTagContainsKeywordsPredicate firstTagPredicate \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"JQchong"},"content":"                new PersonTagContainsKeywordsPredicate(Collections.singletonList(\"tagOne\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"JQchong"},"content":"        PersonTagContainsKeywordsPredicate secondTagPredicate \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"JQchong"},"content":"                new PersonTagContainsKeywordsPredicate(Collections.singletonList(\"tagTwo\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"JQchong"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate, returnTruePredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"JQchong"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate, returnTruePredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"JQchong"},"content":"        FindCommand findThirdCommand \u003d new FindCommand(returnTruePredicate, firstTagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"JQchong"},"content":"        FindCommand findFourthCommand \u003d new FindCommand(returnTruePredicate, secondTagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"JQchong"},"content":"        FindCommand findFifthCommand \u003d new FindCommand(firstPredicate, firstTagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"JQchong"},"content":"        FindCommand findSixthCommand \u003d new FindCommand(secondPredicate, secondTagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"JQchong"},"content":"        assertTrue(findThirdCommand.equals(findThirdCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"JQchong"},"content":"        assertTrue(findFifthCommand.equals(findFifthCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"JQchong"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate, returnTruePredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"JQchong"},"content":"        FindCommand findFourthCommandCopy \u003d new FindCommand(returnTruePredicate, secondTagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"JQchong"},"content":"        assertTrue(findFourthCommand.equals(findFourthCommandCopy));","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"JQchong"},"content":"        FindCommand findSixthCommandCopy \u003d new FindCommand(secondPredicate, secondTagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"JQchong"},"content":"        assertTrue(findSixthCommand.equals(findSixthCommandCopy));","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"JQchong"},"content":"        assertFalse(findThirdCommand.equals(findFourthCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"JQchong"},"content":"        assertFalse(findFifthCommand.equals(findSixthCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"JQchong"},"content":"        assertFalse(findFirstCommand.equals(findThirdCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"JQchong"},"content":"        assertFalse(findFirstCommand.equals(findFifthCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"JQchong"},"content":"        assertFalse(findThirdCommand.equals(findFifthCommand));","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"JQchong"},"content":"        PersonTagContainsKeywordsPredicate tagPredicate \u003d prepareTagPredicate(\" \");","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"JQchong"},"content":"        FindCommand command \u003d new FindCommand(predicate, tagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"JQchong"},"content":"    public void execute_multipleNameKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"JQchong"},"content":"        FindCommand command \u003d new FindCommand(predicate, returnTruePredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"JQchong"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"JQchong"},"content":"    public void execute_multipleTagKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"JQchong"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"JQchong"},"content":"        expectedModel.addPerson(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"JQchong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"JQchong"},"content":"        PersonTagContainsKeywordsPredicate predicate \u003d prepareTagPredicate(\"friends husband\");","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"JQchong"},"content":"        FindCommand command \u003d new FindCommand(returnTruePredicate, predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"JQchong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"JQchong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"JQchong"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL, BOB), model.getFilteredPersonList());","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"JQchong"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"JQchong"},"content":"    public void execute_multipleNameAndTagKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"JQchong"},"content":"        model.addPerson(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"JQchong"},"content":"        expectedModel.addPerson(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"JQchong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"JQchong"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d preparePredicate(\"Pauline Elle Choo\");","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"JQchong"},"content":"        PersonTagContainsKeywordsPredicate tagPredicate \u003d prepareTagPredicate(\"friends husband\");","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"JQchong"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, tagPredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"JQchong"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.and(tagPredicate));","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"JQchong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"JQchong"},"content":"        assertEquals(Arrays.asList(ALICE, BOB), model.getFilteredPersonList());","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"JQchong"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"JQchong"},"content":"     * Parses {@code userInput} into a {@code PersonTagContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"JQchong"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"JQchong"},"content":"    private PersonTagContainsKeywordsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"JQchong"},"content":"        return new PersonTagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"JQchong":71,"-":77}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"public class SortCommandTest {","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"    private Model model;","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"    @BeforeEach","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"    public void setUp() {","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"    public void execute_listIsAlreadySorted_showsSameList() throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"        assertCommandSuccess(new SortCommand(\"name\", true), model, SortCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"IceBear789":32}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODE_OF_CONTACT_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODE_OF_CONTACT_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODE_OF_CONTACT_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODE_OF_CONTACT_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"rjeez"},"content":"                + ADDRESS_DESC_BOB + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"rjeez"},"content":"                + ADDRESS_DESC_BOB + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"                + ADDRESS_DESC_BOB + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"rjeez"},"content":"                + ADDRESS_DESC_BOB + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"rjeez"},"content":"                + ADDRESS_DESC_BOB + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-05"},{"lineNumber":74,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":"        // multiple mode of contacts - last mode of contact accepted","lastModifiedDate":"2021-03-05"},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_AMY + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"rjeez"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"rjeez"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-05"},{"lineNumber":94,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":103,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":107,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":111,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":115,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-05"},{"lineNumber":116,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":117,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":118,"author":{"gitId":"rjeez"},"content":"                + VALID_MODE_OF_CONTACT_BOB, expectedMessage);","lastModifiedDate":"2021-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":122,"author":{"gitId":"rjeez"},"content":"                + VALID_MODE_OF_CONTACT_BOB, expectedMessage);","lastModifiedDate":"2021-03-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":142,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":143,"author":{"gitId":"rjeez"},"content":"        // invalid mode of contact","lastModifiedDate":"2021-03-05"},{"lineNumber":144,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-05"},{"lineNumber":145,"author":{"gitId":"rjeez"},"content":"                + INVALID_MODE_OF_CONTACT_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ModeOfContact.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-05"},{"lineNumber":153,"author":{"gitId":"rjeez"},"content":"                + MODE_OF_CONTACT_DESC_BOB , Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"rjeez"},"content":"                + ADDRESS_DESC_BOB + MODE_OF_CONTACT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"rjeez":45,"-":115}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"import seedu.address.logic.commands.BlacklistCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.ReturnTruePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"JQchong"},"content":"    private ReturnTruePredicate returnTruePredicate \u003d new ReturnTruePredicate();","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"    public void parseCommand_blacklist() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"        final Blacklist blacklist \u003d new Blacklist();","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"        BlacklistCommand command \u003d (BlacklistCommand) parser.parseCommand(","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"                BlacklistCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"        assertEquals(new BlacklistCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"JQchong"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"JQchong"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"tagOne\", \"tagTwo\");","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"JQchong"},"content":"                FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"JQchong"},"content":"                        + PREFIX_NAME + nameKeywords.stream().collect(Collectors.joining(\" \")) + \" \"","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"JQchong"},"content":"                        + PREFIX_TAG + tagKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"JQchong"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(nameKeywords),","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"JQchong"},"content":"                new PersonTagContainsKeywordsPredicate(tagKeywords)),","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"JQchong"},"content":"                command);","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"IceBear789"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"IceBear789"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"IceBear789"},"content":"        assertTrue(parser.parseCommand(PersonUtil.getRemarkCommand(person)) instanceof RemarkCommand);","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":120,"author":{"gitId":"IceBear789"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"IceBear789"},"content":"        String validInput \u003d SortCommand.COMMAND_WORD + \" c/name d/ascending\";","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"IceBear789"},"content":"        assertTrue(parser.parseCommand(validInput) instanceof SortCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JQchong":13,"ampan98":10,"-":98,"IceBear789":14}},{"path":"src/test/java/seedu/address/logic/parser/BlacklistCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"import seedu.address.logic.commands.BlacklistCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"public class BlacklistCommandParserTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    private BlacklistCommandParser parser \u003d new BlacklistCommandParser();","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        String userInput \u003d String.valueOf(targetIndex.getOneBased());","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        BlacklistCommand expectedCommand \u003d new BlacklistCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, BlacklistCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"        // no index","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"        assertParseFailure(parser, BlacklistCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ampan98":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODE_OF_CONTACT_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODE_OF_CONTACT_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODE_OF_CONTACT_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODE_OF_CONTACT_DESC,","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"rjeez"},"content":"                ModeOfContact.MESSAGE_CONSTRAINTS); // invalid mode of contact","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2021-03-06"},{"lineNumber":106,"author":{"gitId":"rjeez"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"rjeez"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-06"},{"lineNumber":110,"author":{"gitId":"rjeez"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"rjeez"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2021-03-06"},{"lineNumber":114,"author":{"gitId":"rjeez"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"rjeez"},"content":"        // mode of contact","lastModifiedDate":"2021-03-05"},{"lineNumber":172,"author":{"gitId":"rjeez"},"content":"        userInput \u003d targetIndex.getOneBased() + MODE_OF_CONTACT_DESC_AMY;","lastModifiedDate":"2021-03-05"},{"lineNumber":173,"author":{"gitId":"rjeez"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withModeOfContact(VALID_MODE_OF_CONTACT_AMY).build();","lastModifiedDate":"2021-03-05"},{"lineNumber":174,"author":{"gitId":"rjeez"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-05"},{"lineNumber":175,"author":{"gitId":"rjeez"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-05"},{"lineNumber":176,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"rjeez":20,"-":207}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"JQchong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.PersonTagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"JQchong"},"content":"import seedu.address.model.person.ReturnTruePredicate;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"JQchong"},"content":"    private ReturnTruePredicate returnTruePredicate \u003d new ReturnTruePredicate();","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"JQchong"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"JQchong"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")), returnTruePredicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"JQchong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"JQchong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"JQchong"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"JQchong"},"content":"    public void parse_validTagArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"JQchong"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"JQchong"},"content":"                new FindCommand(returnTruePredicate,","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"JQchong"},"content":"                        new PersonTagContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"JQchong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TAG + \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"JQchong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"JQchong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TAG + \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"JQchong"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"JQchong"},"content":"    public void parse_validNameAndTagArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"JQchong"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"JQchong"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")),","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"JQchong"},"content":"                        new PersonTagContainsKeywordsPredicate(Arrays.asList(\"tagOne\", \"tagTwo\")));","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"JQchong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice Bob \" + PREFIX_TAG + \"tagOne tagTwo\",","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"JQchong"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"JQchong"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"JQchong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"JQchong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t \" + PREFIX_TAG + \"tagOne \\t tagTwo\\n\\t\",","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"JQchong"},"content":"                expectedFindCommand);","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"JQchong"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"JQchong":32,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"    private static final String INVALID_REMARK \u003d \"\";","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"    private static final String VALID_REMARK \u003d \"Hospitalised\";","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":155,"author":{"gitId":"IceBear789"},"content":"    public void parseRemark_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":156,"author":{"gitId":"IceBear789"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRemark(INVALID_REMARK));","lastModifiedDate":"2021-03-03"},{"lineNumber":157,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":158,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":159,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":160,"author":{"gitId":"IceBear789"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":161,"author":{"gitId":"IceBear789"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2021-03-03"},{"lineNumber":162,"author":{"gitId":"IceBear789"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK));","lastModifiedDate":"2021-03-03"},{"lineNumber":163,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":164,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"IceBear789":14}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"IceBear789"},"content":"    public void sortByNameAscending_returnsTrue() {","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"IceBear789"},"content":"        addressBook.addPerson(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"IceBear789"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"IceBear789"},"content":"        addressBook.sortByName(true);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"IceBear789"},"content":"        assertEquals(BOB, addressBook.getPersonList().get(1));","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":102,"IceBear789":9}},{"path":"src/test/java/seedu/address/model/person/BlacklistTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"public class BlacklistTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    public void equals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"        // default blacklist status is false","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"        Blacklist blacklist \u003d new Blacklist();","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"        assertTrue(blacklist.equals(blacklist));","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        Blacklist blacklistCopy \u003d new Blacklist(blacklist.isBlacklisted);","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        assertTrue(blacklist.equals(blacklistCopy));","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"        assertFalse(blacklist.equals(1));","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"        assertFalse(blacklist.equals(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"        // different blacklist status -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"        Blacklist differentBlacklist \u003d new Blacklist(true);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"        assertFalse(blacklist.equals(differentBlacklist));","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ampan98":32}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"IceBear789"},"content":"    public void compareTo() {","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"IceBear789"},"content":"        Name firstName \u003d new Name(\"Emma\");","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"IceBear789"},"content":"        Name secondName \u003d new Name(\"Zahir\");","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"IceBear789"},"content":"        assertTrue(secondName.compareTo(firstName) \u003e 0);","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":40,"IceBear789":7}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"public class RemarkTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"        String invalidRemark \u003d \"\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"IceBear789"},"content":"        // null name","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"IceBear789"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"IceBear789"},"content":"        // invalid name","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"IceBear789"},"content":"        assertFalse(Remark.isValidRemark(\"\")); // empty string","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"IceBear789"},"content":"        assertFalse(Remark.isValidRemark(\" \")); // spaces only","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"IceBear789"},"content":"        // valid name","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"        assertTrue(Remark.isValidRemark(\"Currently in quarantine\")); // alphabets only","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"        assertTrue(Remark.isValidRemark(\"12345\")); // numbers only","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"        assertTrue(Remark.isValidRemark(\"1st in class\")); // alphanumeric characters","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"        assertTrue(Remark.isValidRemark(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"        assertTrue(Remark.isValidRemark(\"Currently appealing to Professor\"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"                + \" Chin Chee Whye to skip over MA3209\")); // long remarks","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"IceBear789":39}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":166,"author":{"gitId":"IceBear789"},"content":"    public void sortByNameAscending() {","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"IceBear789"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-02-28"},{"lineNumber":168,"author":{"gitId":"IceBear789"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-02-28"},{"lineNumber":169,"author":{"gitId":"IceBear789"},"content":"        uniquePersonList.sortByName(true);","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"IceBear789"},"content":"        assertEquals(ALICE, uniquePersonList.asUnmodifiableObservableList().get(0));","lastModifiedDate":"2021-02-28"},{"lineNumber":171,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":172,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":170,"IceBear789":8}},{"path":"src/test/java/seedu/address/model/person/comparator/NameComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"IceBear789"},"content":"package seedu.address.model.person.comparator;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"IceBear789"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"IceBear789"},"content":"public class NameComparatorTest {","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"IceBear789"},"content":"    public void compare() {","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"        Person firstPerson \u003d ALICE;","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"        Person secondPerson \u003d CARL;","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"IceBear789"},"content":"        NameComparator nameComparator \u003d new NameComparator();","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"IceBear789"},"content":"        assertTrue(nameComparator.compare(firstPerson, secondPerson) \u003c 0);","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"IceBear789"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"IceBear789":20}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.testutil.TypicalPersons.JANE;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"IceBear789"},"content":"    private static final String INVALID_REMARK \u003d \" \";","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"    private static final String INVALID_MODE_OF_CONTACT \u003d \"no\";","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"    private static final String VALID_REMARK \u003d JANE.getRemark().toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"rjeez"},"content":"    private static final String VALID_MODE_OF_CONTACT \u003d BENSON.getModeOfContact().toString();","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"    private static final Boolean VALID_BLACKLIST_STATUS \u003d BENSON.getBlacklist().isBlacklisted;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"IceBear789"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"IceBear789"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"IceBear789"},"content":"    public void toModelType_invalidRemark_throwsIllegalValueException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"ampan98"},"content":"                        INVALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"IceBear789"},"content":"        String expectedMessage \u003d Remark.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"IceBear789"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"IceBear789"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":133,"author":{"gitId":"IceBear789"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":134,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"ampan98"},"content":"                        null, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"IceBear789"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2021-03-03"},{"lineNumber":138,"author":{"gitId":"IceBear789"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-03"},{"lineNumber":139,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"rjeez"},"content":"    @Test","lastModifiedDate":"2021-03-05"},{"lineNumber":142,"author":{"gitId":"rjeez"},"content":"    public void toModelType_invalidModeOfContact_throwsIllegalValueException() {","lastModifiedDate":"2021-03-05"},{"lineNumber":143,"author":{"gitId":"rjeez"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":144,"author":{"gitId":"rjeez"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-05"},{"lineNumber":145,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, INVALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"rjeez"},"content":"        String expectedMessage \u003d ModeOfContact.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-05"},{"lineNumber":147,"author":{"gitId":"rjeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-05"},{"lineNumber":148,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":149,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":150,"author":{"gitId":"rjeez"},"content":"    @Test","lastModifiedDate":"2021-03-05"},{"lineNumber":151,"author":{"gitId":"rjeez"},"content":"    public void toModelType_nullModeOfContact_throwsIllegalValueException() {","lastModifiedDate":"2021-03-05"},{"lineNumber":152,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, null, VALID_BLACKLIST_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"rjeez"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ModeOfContact.class.getSimpleName());","lastModifiedDate":"2021-03-05"},{"lineNumber":156,"author":{"gitId":"rjeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-05"},{"lineNumber":157,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"ampan98"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"ampan98"},"content":"    public void toModelType_nullBlacklistStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":161,"author":{"gitId":"ampan98"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"ampan98"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, null, VALID_TAGS);","lastModifiedDate":"2021-03-10"},{"lineNumber":164,"author":{"gitId":"ampan98"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Blacklist.class.getSimpleName());","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"ampan98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"IceBear789"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-03"},{"lineNumber":174,"author":{"gitId":"ampan98"},"content":"                        VALID_REMARK, VALID_MODE_OF_CONTACT, VALID_BLACKLIST_STATUS, invalidTags);","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ampan98":40,"rjeez":16,"-":102,"IceBear789":20}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"rjeez"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"rjeez"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"rjeez"},"content":"     * Sets the {@code ModeOfContact} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"rjeez"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"rjeez"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"rjeez"},"content":"    public EditPersonDescriptorBuilder withModeOfContact(String modeOfContact) {","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"rjeez"},"content":"        descriptor.setModeOfContact(new ModeOfContact(modeOfContact));","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"rjeez"},"content":"        return this;","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":84,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"rjeez":11,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"import seedu.address.model.person.Blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import seedu.address.model.person.ModeOfContact;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"IceBear789"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"IceBear789"},"content":"    public static final String DEFAULT_REMARK \u003d \"No remark\";","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"rjeez"},"content":"    public static final String DEFAULT_MODE_OF_CONTACT \u003d \"email\";","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"    public static final Boolean DEFAULT_BLACKLIST_STATUS \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"    private Remark remark;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"rjeez"},"content":"    private ModeOfContact modeOfContact;","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"    private Blacklist blacklist;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"IceBear789"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"rjeez"},"content":"        modeOfContact \u003d new ModeOfContact(DEFAULT_MODE_OF_CONTACT);","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"        blacklist \u003d new Blacklist(DEFAULT_BLACKLIST_STATUS);","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"IceBear789"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"rjeez"},"content":"        modeOfContact \u003d personToCopy.getModeOfContact();","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"        blacklist \u003d personToCopy.getBlacklist();","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"IceBear789"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"IceBear789"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"IceBear789"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"IceBear789"},"content":"        return this;","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"IceBear789"},"content":"    /** Sets the {@code ModeOfContact} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":116,"author":{"gitId":"rjeez"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":117,"author":{"gitId":"rjeez"},"content":"    public PersonBuilder withModeOfContact(String modeOfContact) {","lastModifiedDate":"2021-03-05"},{"lineNumber":118,"author":{"gitId":"rjeez"},"content":"        this.modeOfContact \u003d new ModeOfContact(modeOfContact);","lastModifiedDate":"2021-03-05"},{"lineNumber":119,"author":{"gitId":"rjeez"},"content":"        return this;","lastModifiedDate":"2021-03-05"},{"lineNumber":120,"author":{"gitId":"rjeez"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":121,"author":{"gitId":"rjeez"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":122,"author":{"gitId":"ampan98"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"ampan98"},"content":"     * Sets the {@code Blacklist} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"ampan98"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"ampan98"},"content":"    public PersonBuilder withBlacklist(Boolean isBlacklisted) {","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"ampan98"},"content":"        this.blacklist \u003d new Blacklist(isBlacklisted);","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"ampan98"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"ampan98"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"ampan98"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":131,"author":{"gitId":"ampan98"},"content":"        return new Person(name, phone, email, address, remark, modeOfContact, blacklist, tags);","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ampan98":14,"rjeez":11,"-":95,"IceBear789":14}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODE_OF_CONTACT;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"IceBear789"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"IceBear789"},"content":"     * Returns a remark command string for adding a remark to the {@code person}.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"IceBear789"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"IceBear789"},"content":"    public static String getRemarkCommand(Person person) {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"IceBear789"},"content":"        return RemarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"IceBear789"},"content":"                + PREFIX_REMARK + person.getRemark();","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"IceBear789"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"IceBear789"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"rjeez"},"content":"        sb.append(PREFIX_MODE_OF_CONTACT + person.getModeOfContact().value + \" \");","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"rjeez"},"content":"        descriptor.getModeOfContact().ifPresent(modeOfContact -\u003e sb.append(PREFIX_MODE_OF_CONTACT)","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"rjeez"},"content":"                .append(modeOfContact.value).append(\" \"));","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"rjeez":4,"-":62,"IceBear789":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLACKLIST_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BLACKLIST_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODE_OF_CONTACT_AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"rjeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODE_OF_CONTACT_BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"IceBear789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"rjeez"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"rjeez"},"content":"            .withEmail(\"alice@example.com\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"email\").withBlacklist(false)","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"rjeez"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"rjeez"},"content":"            .withEmail(\"johnd@example.com\").withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"address\").withBlacklist(false)","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"phone\").withBlacklist(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"phone\").withBlacklist(false)","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"rjeez"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"email\").withBlacklist(false).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"address\").withBlacklist(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"phone\").withBlacklist(false).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"phone\").withBlacklist(false).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"email\").withBlacklist(false).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"IceBear789"},"content":"    public static final Person JANE \u003d new PersonBuilder().withName(\"Jane Vermilion\").withPhone(\"87514098\")","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"            .withEmail(\"jane@example.com\").withAddress(\"7th street\").withRemark(\"On leave of absence\")","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(\"phone\").withBlacklist(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"IceBear789"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(VALID_MODE_OF_CONTACT_AMY).withBlacklist(VALID_BLACKLIST_AMY)","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"IceBear789"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"            .withModeOfContact(VALID_MODE_OF_CONTACT_BOB).withBlacklist(VALID_BLACKLIST_BOB)","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"IceBear789"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, JANE));","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ampan98":24,"rjeez":7,"-":60,"IceBear789":6}}]
