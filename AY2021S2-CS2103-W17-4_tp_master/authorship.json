[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"# iSCAM"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"Welcome to iSCAM, your new client management app. It helps catalogue and manage your clients\u0027 information, including upcoming "},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"appointments with them, and allows you to retrieve these data efficiently. iSCAM also presents your daily scheduled appointments "},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"in a one-page solution, where you can easily see your schedule for the day."},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"## For Users"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"iSCAM can store and manage your client information, such as:"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"* Name"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"* Gender"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"* Age"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"* Custom Information (e.g. food preferences)"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"* Appointments you have with them"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"Client information may be retrieved easily through an efficient search interface, which is optimised for fast-typers too."},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"Please view the User Guide [here] to see the list of commands you may use with iSCAM."},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"## For Developers"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"iSCAM is an ongoing project under the CS2103 Software Engineering module at the National University of Singapore. This project"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"simulates an ongoing software project build around a desktop application (initially called _AddressBook_) used for managing contact details."},{"lineNumber":25,"author":{"gitId":"-"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big."},{"lineNumber":26,"author":{"gitId":"-"},"content":"* It comes with a **reasonable level of user and developer documentation**."},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"Please view the full Developer Guide [here] for more information."},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"For detailed documentation of the initial _AddressBook_ project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**."},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":""},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"### Acknowledgements"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"Juzzanoob":28,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"#About Us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"You can reach us at the email at our individual emails below!"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Project team"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"### Kelvin"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/zoeykobe.png\" width\u003d\"200px\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/zoeykobe) | [Portfolio](team/kelvin.md) | [Email](zhou_yi_kelvin@u.nus.edu)"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"* Role: Team Leader"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"### Friscilia"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/frisciliasultan.png\" width\u003d\"200px\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/frisciliasultan) | [Portfolio](team/friscilia.md) | [Email](frisciliasultan@u.nus.edu)"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"* Role: Developer"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Testing"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"### Isaiah"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/zaiah0505.png\" width\u003d\"200px\"\u003e"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/Zaiah0505) | [Portfolio](team/isaiah.md) | [Email](isaiah.koh@u.nus.edu)"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"* Role: Developer"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Scheduling and Tracking, UI"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"### Jody"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/jodylorah.png\" width\u003d\"200px\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/JodyLorah) | [Portfolio](team/jodylorah.md) | [Email](jodylorah@u.nus.edu)"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Code Quality"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"### Qin Liang"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/tomashiwa.png\" width\u003d\"200px\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"[GitHub](http://github.com/Tomashiwa) | [Portfolio](team/qinliang.md) | [Email](e0407322@u.nus.edu)"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Integration"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"### Shaun"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/juzzanoob.png\" width\u003d\"200px\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"[GitHub](http://github.com/Juzzanoob) | [Portfolio](team/shaun.md) | [Email](e0418165@u.nus.edu)"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Documentation"}],"authorContributionMap":{"JodyLorah":32,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App."},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor."},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person)."},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement."},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself."},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"frisciliasultan"},"content":"* is an insurance agent"},{"lineNumber":240,"author":{"gitId":"frisciliasultan"},"content":"* has a need to manage a significant number of clients"},{"lineNumber":241,"author":{"gitId":"frisciliasultan"},"content":"* has significant number of client meetings"},{"lineNumber":242,"author":{"gitId":"frisciliasultan"},"content":"* has a need to track clients\u0027 insurance policy expiration date"},{"lineNumber":243,"author":{"gitId":"frisciliasultan"},"content":"* has a lot of details to remember for each client"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* can type fast"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"frisciliasultan"},"content":"**Value proposition**: "},{"lineNumber":250,"author":{"gitId":"frisciliasultan"},"content":"* save time by generating a consolidation of meetings and deadlines with the clients"},{"lineNumber":251,"author":{"gitId":"frisciliasultan"},"content":"* target clients better by receiving reminders and tips before a client meeting (client\u0027s favourite food, profile)"},{"lineNumber":252,"author":{"gitId":"frisciliasultan"},"content":"* increase customer retention by receiving reminders of when the client\u0027s insurance is expiring"},{"lineNumber":253,"author":{"gitId":"frisciliasultan"},"content":"* improve convenience by providing a one page solution to an insurance agent\u0027s fast pace life"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"frisciliasultan"},"content":"| Priority | As a …​                                 | I can …​                                             | So that I can…​                                                     |"},{"lineNumber":260,"author":{"gitId":"frisciliasultan"},"content":"| -------- | ------------------------------------------ | ------------------------------------------------------- | ---------------------------------------------------------------------- |"},{"lineNumber":261,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                                  | refer to instructions when I forget how to use the App                 |"},{"lineNumber":262,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                                        |                                                                        |"},{"lineNumber":263,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                                         | remove entries that I no longer need                                   |"},{"lineNumber":264,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name                                   | locate details of persons without having to go through the entire list |"},{"lineNumber":265,"author":{"gitId":"frisciliasultan"},"content":"| `* * *`  | popular insurance agent                    | view all my appointments without browsing the whole app | get a quick reminder of my appointments                                |"},{"lineNumber":266,"author":{"gitId":"frisciliasultan"},"content":"| `* * *`  | busy insurance agent                       | schedule my meetings with my contacts                   | know when I am meeting my clients                                      |"},{"lineNumber":267,"author":{"gitId":"frisciliasultan"},"content":"| `* * *`  | insurance agent                            | track my clients’ insurance expiry                      | remind my clients to renew their contract                              |"},{"lineNumber":268,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                            | minimize chance of someone else seeing them by accident                |"},{"lineNumber":269,"author":{"gitId":"frisciliasultan"},"content":"| `* *`    | time-constrained insurance agent           | view my tasks and appointments in a chronological list  | know what work to prioritize                                           |"},{"lineNumber":270,"author":{"gitId":"frisciliasultan"},"content":"| `* *`    | opportunistic insurance agent              | filter my clients by their existing insurance plans     | upsell a new, similar plan to them                                     |"},{"lineNumber":271,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                                    | locate a person easily                                                 |"},{"lineNumber":272,"author":{"gitId":"frisciliasultan"},"content":"| `*`      | insurance agent with many contacts         | save my client’s likes/dislikes                         | interact with them more personally                                     |"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Use cases"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"Tomashiwa"},"content":"(For all use cases below, the **System** is the `iScam` and the **Actor** is the `user`, unless specified otherwise)"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Add a client**"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":281,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to add a client with parameters like name, contact details, age etc."},{"lineNumber":282,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows the client to be added."},{"lineNumber":283,"author":{"gitId":"Tomashiwa"},"content":"3. User confirm the addition."},{"lineNumber":284,"author":{"gitId":"Tomashiwa"},"content":"4. iScam adds the client."},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends."},{"lineNumber":287,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":288,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**"},{"lineNumber":289,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam detects an error in the given client."},{"lineNumber":290,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction."},{"lineNumber":291,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected the client info."},{"lineNumber":292,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct. "},{"lineNumber":293,"author":{"gitId":"Tomashiwa"},"content":"      "},{"lineNumber":294,"author":{"gitId":"Tomashiwa"},"content":"      Use case resumes from step 2."},{"lineNumber":295,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":296,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":297,"author":{"gitId":"Tomashiwa"},"content":"* 3a. User chooses to cancel the addition."},{"lineNumber":298,"author":{"gitId":"Tomashiwa"},"content":"    * 3a1. iScam requests to confirm the cancellation."},{"lineNumber":299,"author":{"gitId":"Tomashiwa"},"content":"    * 3a2. User confirms the cancellation."},{"lineNumber":300,"author":{"gitId":"Tomashiwa"},"content":"      "},{"lineNumber":301,"author":{"gitId":"Tomashiwa"},"content":"      Use case ends."},{"lineNumber":302,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":303,"author":{"gitId":"Tomashiwa"},"content":"**Use case: List clients**"},{"lineNumber":304,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":305,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":306,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to list clients."},{"lineNumber":307,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a list of clients."},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"   Use case ends."},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":312,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The list is empty."},{"lineNumber":313,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam shows a message to indicate that there is no client."},{"lineNumber":314,"author":{"gitId":"Tomashiwa"},"content":"      "},{"lineNumber":315,"author":{"gitId":"Tomashiwa"},"content":"      Use case ends."},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Update a client**"},{"lineNumber":318,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":319,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":320,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to update a client with new parameters."},{"lineNumber":321,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a preview of the updated client."},{"lineNumber":322,"author":{"gitId":"Tomashiwa"},"content":"3. User confirm the update."},{"lineNumber":323,"author":{"gitId":"Tomashiwa"},"content":"4. iScam updates the client."},{"lineNumber":324,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":325,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends."},{"lineNumber":326,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":327,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**"},{"lineNumber":328,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam detects an error in the new parameters."},{"lineNumber":329,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction."},{"lineNumber":330,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected the update info."},{"lineNumber":331,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct. "},{"lineNumber":332,"author":{"gitId":"Tomashiwa"},"content":"      "},{"lineNumber":333,"author":{"gitId":"Tomashiwa"},"content":"      Use case resumes from step 2."},{"lineNumber":334,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":335,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":336,"author":{"gitId":"Tomashiwa"},"content":"* 3a. User chooses to cancel the update."},{"lineNumber":337,"author":{"gitId":"Tomashiwa"},"content":"    * 3a1. iScam requests to confirm the cancellation."},{"lineNumber":338,"author":{"gitId":"Tomashiwa"},"content":"    * 3a2. User confirms the cancellation."},{"lineNumber":339,"author":{"gitId":"-"},"content":"      "},{"lineNumber":340,"author":{"gitId":"-"},"content":"      Use case ends."},{"lineNumber":341,"author":{"gitId":"-"},"content":"    "},{"lineNumber":342,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Search clients**"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":345,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to find clients that matches a search term."},{"lineNumber":346,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a list of qualified clients."},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"    Use case ends."},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":351,"author":{"gitId":"Tomashiwa"},"content":"* 1a. There is no client in AddressBook."},{"lineNumber":352,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam shows a message to indicate that there is no client."},{"lineNumber":353,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":354,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":355,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"Tomashiwa"},"content":"* 1b. The search term is empty."},{"lineNumber":358,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam shows a message to indicate that a search term is required."},{"lineNumber":359,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":360,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Delete a client**"},{"lineNumber":363,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":364,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":365,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to delete a client."},{"lineNumber":366,"author":{"gitId":"Tomashiwa"},"content":"2. iScam requests to confirm the deletion."},{"lineNumber":367,"author":{"gitId":"Tomashiwa"},"content":"3. User confirms the deletion."},{"lineNumber":368,"author":{"gitId":"Tomashiwa"},"content":"4. iScam delete the client."},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends."},{"lineNumber":371,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":372,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**"},{"lineNumber":373,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The client does not exist."},{"lineNumber":374,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction."},{"lineNumber":375,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected which client to delete."},{"lineNumber":376,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the client entered is valid."},{"lineNumber":377,"author":{"gitId":"Tomashiwa"},"content":"        "},{"lineNumber":378,"author":{"gitId":"Tomashiwa"},"content":"        Use case resumes from step 2."},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"Tomashiwa"},"content":"* 2a. User chooses to cancel the deletion."},{"lineNumber":382,"author":{"gitId":"Tomashiwa"},"content":"    * 2a1. iScam requests to confirm the cancellation."},{"lineNumber":383,"author":{"gitId":"Tomashiwa"},"content":"    * 2a2. User confirms the cancellation."},{"lineNumber":384,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":385,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Add a meeting**"},{"lineNumber":388,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":389,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":390,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to add a meeting with a client."},{"lineNumber":391,"author":{"gitId":"Tomashiwa"},"content":"2. iScam adds the meeting."},{"lineNumber":392,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":393,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends."},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**"},{"lineNumber":396,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The client does not exist."},{"lineNumber":397,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam shows a message to indicate that the client specified does not exist."},{"lineNumber":398,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":399,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":400,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":401,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":402,"author":{"gitId":"Tomashiwa"},"content":"* 1b. iScam detects an error in the parameters."},{"lineNumber":403,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam requests for correction."},{"lineNumber":404,"author":{"gitId":"Tomashiwa"},"content":"    * 1b2. User corrected the parameters."},{"lineNumber":405,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1b1-1b2 are repeated until the parameters entered are correct."},{"lineNumber":406,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":407,"author":{"gitId":"Tomashiwa"},"content":"        Use case resume from step 2."},{"lineNumber":408,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":409,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":410,"author":{"gitId":"Tomashiwa"},"content":"* 1c. A meeting with that date and time already exists."},{"lineNumber":411,"author":{"gitId":"Tomashiwa"},"content":"    * 1c1. iScam shows a message that a meeting with that date and time already exists."},{"lineNumber":412,"author":{"gitId":"Tomashiwa"},"content":"        "},{"lineNumber":413,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":414,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":415,"author":{"gitId":"Tomashiwa"},"content":"**Use case: List meetings**"},{"lineNumber":416,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":417,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":418,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to list meetings."},{"lineNumber":419,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a list of meetings."},{"lineNumber":420,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":421,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends."},{"lineNumber":422,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":423,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**"},{"lineNumber":424,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The list is empty."},{"lineNumber":425,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam shows a message to indicate that there is no client."},{"lineNumber":426,"author":{"gitId":"Tomashiwa"},"content":"      "},{"lineNumber":427,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":428,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":429,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Update a meeting**"},{"lineNumber":430,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":431,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":432,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to update a meeting with new parameters."},{"lineNumber":433,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a preview of the updated meeting."},{"lineNumber":434,"author":{"gitId":"Tomashiwa"},"content":"3. User confirms the update."},{"lineNumber":435,"author":{"gitId":"Tomashiwa"},"content":"4. iScam updates the meeting."},{"lineNumber":436,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":437,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends."},{"lineNumber":438,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":439,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**"},{"lineNumber":440,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam detects an error with the new parameters."},{"lineNumber":441,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction."},{"lineNumber":442,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected the parameters."},{"lineNumber":443,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the parameters entered are correct. "},{"lineNumber":444,"author":{"gitId":"Tomashiwa"},"content":"      "},{"lineNumber":445,"author":{"gitId":"Tomashiwa"},"content":"        Use case resume from step 2."},{"lineNumber":446,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":447,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":448,"author":{"gitId":"Tomashiwa"},"content":"* 1b. The new parameters\u0027 date or time is in conflict with other existing meetings."},{"lineNumber":449,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam shows a message that a meeting with that date and time already exists."},{"lineNumber":450,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":451,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":452,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":453,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":454,"author":{"gitId":"Tomashiwa"},"content":"* 2a. User chooses to cancel the update."},{"lineNumber":455,"author":{"gitId":"Tomashiwa"},"content":"    * 2a1. iScam requests to confirm the cancellation."},{"lineNumber":456,"author":{"gitId":"Tomashiwa"},"content":"    * 2a2. User confirms the cancellation."},{"lineNumber":457,"author":{"gitId":"Tomashiwa"},"content":"      "},{"lineNumber":458,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":459,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":460,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":461,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Delete a meeting**"},{"lineNumber":462,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":463,"author":{"gitId":"Tomashiwa"},"content":"**MSS**"},{"lineNumber":464,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to delete a meeting."},{"lineNumber":465,"author":{"gitId":"Tomashiwa"},"content":"2. iScam requests to confirm the deletion."},{"lineNumber":466,"author":{"gitId":"Tomashiwa"},"content":"3. User confirms the deletion."},{"lineNumber":467,"author":{"gitId":"Tomashiwa"},"content":"4. iScam delete the meeting."},{"lineNumber":468,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":469,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends."},{"lineNumber":470,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":471,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**"},{"lineNumber":472,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The meeting does not exist."},{"lineNumber":473,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction."},{"lineNumber":474,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected which meeting to delete."},{"lineNumber":475,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the meeting entered is valid."},{"lineNumber":476,"author":{"gitId":"Tomashiwa"},"content":"        "},{"lineNumber":477,"author":{"gitId":"Tomashiwa"},"content":"        Use case resumes from step 2."},{"lineNumber":478,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":479,"author":{"gitId":"Tomashiwa"},"content":""},{"lineNumber":480,"author":{"gitId":"Tomashiwa"},"content":"* 2a. User chooses to cancel the deletion."},{"lineNumber":481,"author":{"gitId":"Tomashiwa"},"content":"    * 2a1. iScam requests to confirm the cancellation."},{"lineNumber":482,"author":{"gitId":"Tomashiwa"},"content":"    * 2a2. User confirms the cancellation."},{"lineNumber":483,"author":{"gitId":"Tomashiwa"},"content":"    "},{"lineNumber":484,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends."},{"lineNumber":485,"author":{"gitId":"-"},"content":"    "},{"lineNumber":486,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."},{"lineNumber":491,"author":{"gitId":"Tomashiwa"},"content":"2.  Should be able to hold up to 1000 clients and meetings without a noticeable sluggishness in performance for typical usage."},{"lineNumber":492,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":493,"author":{"gitId":"Tomashiwa"},"content":"4.  A user should be able to quickly identify the purpose of different interface elements through larger buttons, recognizable color scheme etc. "},{"lineNumber":494,"author":{"gitId":"Tomashiwa"},"content":"5.  An average user should be able to get a grasp on the user interface within a few iteration of usage"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":503,"author":{"gitId":"-"},"content":""},{"lineNumber":504,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. Saving window preferences"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":526,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"### Deleting a person"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":540,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      Expected: Similar to previous."},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"}],"authorContributionMap":{"Tomashiwa":188,"frisciliasultan":18,"-":347}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"iScam is a **desktop app for insurance agents to manage clients and meetings, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, iScam can get your client management tasks done faster than traditional GUI apps."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"1. Download the latest `iScam.jar` from [here](https://github.com/se-edu/iScam-level3/releases)."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your iScam."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"   * **`list`** : Lists all clients."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a client named `John Doe` to iScam."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"   * **`delete`**`3` : Deletes the 3rd client shown in the current list."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"   * **`clear`** : Deletes all clients."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"zoeykobe"},"content":"Shows a message explaining how to access the help page."},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"zoeykobe"},"content":"### Adding a client: `add`"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"Adds a client to iScam."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"},{"lineNumber":83,"author":{"gitId":"zoeykobe"},"content":"A client can have any number of tags (including 0)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"zoeykobe"},"content":"### Listing all clients : `list`"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"zoeykobe"},"content":"Shows a list of all clients in iScam."},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `list`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"zoeykobe"},"content":"### Editing a client : `edit`"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"zoeykobe"},"content":"Edits an existing client in iScam."},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"zoeykobe"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":105,"author":{"gitId":"zoeykobe"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative."},{"lineNumber":106,"author":{"gitId":"zoeykobe"},"content":"* You can remove all the client’s tags by typing `t/` without"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    specifying any tags after it."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":110,"author":{"gitId":"zoeykobe"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively."},{"lineNumber":111,"author":{"gitId":"zoeykobe"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags."},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"zoeykobe"},"content":"### Locating clients by name: `find`"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"zoeykobe"},"content":"Finds clients whose names contain any of the given keywords."},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only the name is searched."},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search)."},{"lineNumber":124,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"zoeykobe"},"content":"### Deleting a client : `delete`"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"zoeykobe"},"content":"Deletes the specified client from iScam."},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"Format: `delete INDEX`"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"zoeykobe"},"content":"* Deletes the client at the specified `INDEX`."},{"lineNumber":138,"author":{"gitId":"zoeykobe"},"content":"* The index refers to the index number shown in the displayed client list."},{"lineNumber":139,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":142,"author":{"gitId":"zoeykobe"},"content":"* `list` followed by `delete 2` deletes the 2nd client in iScam."},{"lineNumber":143,"author":{"gitId":"zoeykobe"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command."},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"zoeykobe"},"content":"Clears all entries from iScam."},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"Format: `clear`"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"Exits the program."},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `exit`"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Saving the data"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"zoeykobe"},"content":"iScam data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Editing the data file"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"zoeykobe"},"content":"iScam data are saved as a JSON file `[JAR file location]/data/iScam.json`. Advanced users are welcome to update data directly by editing that data file."},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**"},{"lineNumber":166,"author":{"gitId":"zoeykobe"},"content":"If your changes to the data file makes its format invalid, iScam will discard all data and start with an empty data file at the next run."},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"_Details coming soon ..._"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":178,"author":{"gitId":"zoeykobe"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous iScam home folder."},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Command summary"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":185,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":186,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**Clear** | `clear`"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`"},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`"},{"lineNumber":191,"author":{"gitId":"-"},"content":"**List** | `list`"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**Help** | `help`"}],"authorContributionMap":{"zoeykobe":35,"-":157}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}."},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null."},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format."},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile("},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}."},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null."},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"JodyLorah":1,"-":80}}]
