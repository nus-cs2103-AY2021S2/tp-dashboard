[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-W17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W17-4/tp/actions)","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"# iSCAM","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"Welcome to iSCAM, your new client management app. It helps catalogue and manage your clients\u0027 information, including upcoming","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"appointments with them, and allows you to retrieve these data efficiently. iSCAM also presents your daily scheduled appointments","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"in a one-page solution, where you can easily see your schedule for the day.","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"## For Users","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"iSCAM can store and manage your client information, such as:","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"* Name","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"* Gender","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"* Age","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"* Custom Information (e.g. food preferences)","lastModifiedDate":"2021-02-26"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"* Appointments you have with them","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"Client information may be retrieved easily through an efficient search interface, which is optimised for fast-typers too.","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"Please view the User Guide [here] to see the list of commands you may use with iSCAM.","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"## For Developers","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"iSCAM is an ongoing project under the CS2103 Software Engineering module at the National University of Singapore. This project","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"simulates an ongoing software project build around a desktop application (initially called _AddressBook_) used for managing contact details.","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"Please view the full Developer Guide [here] for more information.","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"For detailed documentation of the initial _AddressBook_ project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"### Acknowledgements","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"Tomashiwa":1,"Juzzanoob":28,"-":5}},{"path":"bin/main/view/ClientListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"clientLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\"/\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":35}},{"path":"bin/main/view/ClientListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"    \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":7}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":8}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":".background {","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":".label {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":".label-bright {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":".label-header {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":".text-field {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":".tab-pane {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":".table-view {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"zoeykobe"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"zoeykobe"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color:","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"zoeykobe"},"content":"        transparent","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"zoeykobe"},"content":"        transparent","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"zoeykobe"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"zoeykobe"},"content":"        transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"zoeykobe"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"zoeykobe"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"zoeykobe"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"zoeykobe"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"zoeykobe"},"content":".split-pane {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"zoeykobe"},"content":".list-view {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"zoeykobe"},"content":".list-cell {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"zoeykobe"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"zoeykobe"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"zoeykobe"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"zoeykobe"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"zoeykobe"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"zoeykobe"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"zoeykobe"},"content":".list-cell .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":".cell_big_label {","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"zoeykobe"},"content":".cell_small_label {","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"zoeykobe"},"content":".stack-pane {","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"zoeykobe"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"zoeykobe"},"content":".pane-with-border {","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"zoeykobe"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"zoeykobe"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"zoeykobe"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"zoeykobe"},"content":".status-bar {","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"zoeykobe"},"content":".result-display {","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"zoeykobe"},"content":".result-display .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"zoeykobe"},"content":".status-bar .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"zoeykobe"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"zoeykobe"},"content":".status-bar-with-border {","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"zoeykobe"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"zoeykobe"},"content":".grid-pane {","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"zoeykobe"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"zoeykobe"},"content":".context-menu {","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"zoeykobe"},"content":".context-menu .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"zoeykobe"},"content":".menu-bar {","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"zoeykobe"},"content":".menu-bar .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"zoeykobe"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"zoeykobe"},"content":".menu .left-container {","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"zoeykobe"},"content":"/*","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"zoeykobe"},"content":" * Metro style Push Button","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"zoeykobe"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"zoeykobe"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"zoeykobe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"zoeykobe"},"content":".button {","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"zoeykobe"},"content":".button:hover {","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-03-14"},{"lineNumber":229,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"zoeykobe"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"zoeykobe"},"content":"  -fx-background-color: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"zoeykobe"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"zoeykobe"},"content":".button:focused {","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":242,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"zoeykobe"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"zoeykobe"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":247,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":248,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":250,"author":{"gitId":"zoeykobe"},"content":".button:default {","lastModifiedDate":"2021-03-14"},{"lineNumber":251,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":254,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":255,"author":{"gitId":"zoeykobe"},"content":".button:default:hover {","lastModifiedDate":"2021-03-14"},{"lineNumber":256,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":257,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":258,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":259,"author":{"gitId":"zoeykobe"},"content":".dialog-pane {","lastModifiedDate":"2021-03-14"},{"lineNumber":260,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":261,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":262,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":263,"author":{"gitId":"zoeykobe"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-03-14"},{"lineNumber":264,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-14"},{"lineNumber":265,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":266,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"zoeykobe"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-03-14"},{"lineNumber":268,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-14"},{"lineNumber":270,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":271,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":272,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":273,"author":{"gitId":"zoeykobe"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-03-14"},{"lineNumber":274,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-03-14"},{"lineNumber":275,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":276,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":277,"author":{"gitId":"zoeykobe"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-03-14"},{"lineNumber":278,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-03-14"},{"lineNumber":279,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-03-14"},{"lineNumber":280,"author":{"gitId":"zoeykobe"},"content":"    -fx-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":281,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":282,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":283,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":284,"author":{"gitId":"zoeykobe"},"content":".scroll-bar {","lastModifiedDate":"2021-03-14"},{"lineNumber":285,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":286,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":287,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":288,"author":{"gitId":"zoeykobe"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-03-14"},{"lineNumber":289,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-03-14"},{"lineNumber":290,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-03-14"},{"lineNumber":291,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":292,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":293,"author":{"gitId":"zoeykobe"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-03-14"},{"lineNumber":294,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":295,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":296,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":297,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":298,"author":{"gitId":"zoeykobe"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-03-14"},{"lineNumber":299,"author":{"gitId":"zoeykobe"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":300,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":301,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":302,"author":{"gitId":"zoeykobe"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-03-14"},{"lineNumber":303,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-03-14"},{"lineNumber":304,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":305,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":306,"author":{"gitId":"zoeykobe"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-03-14"},{"lineNumber":307,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":308,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":309,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":310,"author":{"gitId":"zoeykobe"},"content":"#cardPane {","lastModifiedDate":"2021-03-14"},{"lineNumber":311,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":312,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":313,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":314,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":315,"author":{"gitId":"zoeykobe"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-03-14"},{"lineNumber":316,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-03-14"},{"lineNumber":317,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2021-03-14"},{"lineNumber":318,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":319,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":320,"author":{"gitId":"zoeykobe"},"content":"#commandTextField {","lastModifiedDate":"2021-03-14"},{"lineNumber":321,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-03-14"},{"lineNumber":322,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":323,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2021-03-14"},{"lineNumber":324,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":325,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":326,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-14"},{"lineNumber":327,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-14"},{"lineNumber":328,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":329,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":330,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":331,"author":{"gitId":"zoeykobe"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2021-03-14"},{"lineNumber":332,"author":{"gitId":"zoeykobe"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":333,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":334,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":335,"author":{"gitId":"zoeykobe"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-03-14"},{"lineNumber":336,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2021-03-14"},{"lineNumber":337,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":338,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":339,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":340,"author":{"gitId":"zoeykobe"},"content":"#tags {","lastModifiedDate":"2021-03-14"},{"lineNumber":341,"author":{"gitId":"zoeykobe"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-14"},{"lineNumber":342,"author":{"gitId":"zoeykobe"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-14"},{"lineNumber":343,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":344,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":345,"author":{"gitId":"zoeykobe"},"content":"#tags .label {","lastModifiedDate":"2021-03-14"},{"lineNumber":346,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":347,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-03-14"},{"lineNumber":348,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-14"},{"lineNumber":349,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-14"},{"lineNumber":350,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-14"},{"lineNumber":351,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-14"},{"lineNumber":352,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":352}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":".error {","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":".list-cell:empty {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"    -fx-background: #383838;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":".tag-selector {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":".tooltip-text {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":20}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":39}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"         title\u003d\"iScam\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"zoeykobe"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"                \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"zoeykobe"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"zoeykobe"},"content":"                    \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"zoeykobe"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"zoeykobe"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"zoeykobe"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"zoeykobe"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":59,"Tomashiwa":1}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":8}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":11}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"Not a valid FXML file","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import seedu.iscam.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003cfx:root type\u003d\"seedu.iscam.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"zoeykobe":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"mainClassName \u003d \u0027seedu.iscam.Main\u0027","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"    archiveName \u003d \u0027iscam.jar\u0027","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"run {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zaiah0505":1,"Tomashiwa":3,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"# About Us","lastModifiedDate":"2021-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"You can reach us at the email at our individual emails below!","lastModifiedDate":"2021-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"### Kelvin","lastModifiedDate":"2021-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/members/zoeykobe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/zoeykobe) | [Portfolio](team/kelvin.md) | [Email](zhou_yi_kelvin@u.nus.edu)","lastModifiedDate":"2021-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"* Role: Team Leader","lastModifiedDate":"2021-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"### Friscilia","lastModifiedDate":"2021-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/members/frisciliasultan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/frisciliasultan) | [Portfolio](team/friscilia.md) | [Email](frisciliasultan@u.nus.edu)","lastModifiedDate":"2021-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"* Role: Developer","lastModifiedDate":"2021-02-21"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-02-21"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"### Isaiah","lastModifiedDate":"2021-02-21"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/members/zaiah0505.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/Zaiah0505) | [Portfolio](team/isaiah.md) | [Email](isaiah.koh@u.nus.edu)","lastModifiedDate":"2021-02-21"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"* Role: Developer","lastModifiedDate":"2021-02-21"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Scheduling and Tracking, UI","lastModifiedDate":"2021-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"### Jody","lastModifiedDate":"2021-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/members/jodylorah.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"[GitHub](https://github.com/JodyLorah) | [Portfolio](team/jodylorah.md) | [Email](jodylorah@u.nus.edu)","lastModifiedDate":"2021-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2021-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"### Qin Liang","lastModifiedDate":"2021-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/members/tomashiwa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"[GitHub](http://github.com/Tomashiwa) | [Portfolio](team/qinliang.md) | [Email](e0407322@u.nus.edu)","lastModifiedDate":"2021-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-02-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"### Shaun","lastModifiedDate":"2021-02-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"\u003cimg src\u003d\"images/members/juzzanoob.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"[GitHub](http://github.com/Juzzanoob) | [Portfolio](team/shaun.md) | [Email](e0418165@u.nus.edu)","lastModifiedDate":"2021-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-02-21"}],"authorContributionMap":{"JodyLorah":32,"-":28}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"zoeykobe"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/location/MainApp.java).","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`).","lastModifiedDate":"2020-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"zoeykobe":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/ClientBook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/java/seedu/location/Main.java) and [`MainApp`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/java/seedu/location/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"![Structure of the UI Component](images/UiClassDiagram.jpg)","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"zoeykobe"},"content":"[`Ui.java`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/java/seedu/location/ui/Ui.java)","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"zoeykobe"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ClientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"zoeykobe"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/java/seedu/location/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"zoeykobe"},"content":"[`Logic.java`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/java/seedu/location/logic/Logic.java)","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"zoeykobe"},"content":"1. `Logic` uses the `ClientBookParser` class to parse the user command.","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"zoeykobe"},"content":"1. The command execution can affect the `Model` (e.g. adding a client).","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"zoeykobe"},"content":"**API** : [`Model.java`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/java/seedu/location/model/Model.java)","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"The `Model` component,","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"Tomashiwa"},"content":"* stores the client book and meeting book data.","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"* exposes an unmodifiable `ObservableList\u003cClient\u003e` and `Observable\u003cMeeting\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to these lists so that the UI automatically updates when the data in these lists change.","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Tomashiwa"},"content":"The `Client` object,","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"Tomashiwa"},"content":"* stores the attributes of a client.","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"Tomashiwa"},"content":"* has `Name` to serve as its unique identifer.","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Tomashiwa"},"content":"The `Meeting` object,","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Tomashiwa"},"content":"* stores the attributes of a meeting.","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"Tomashiwa"},"content":"* has `Name` to represent a client\u0027s name that is not required to be in the `ClientBook`.","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"Tomashiwa"},"content":"* cannot be created by the user if the `DateTime` is in conflict with another `Meeting`\u0027s `DateTime` or before the date and time at the point of creation.","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"Tomashiwa"},"content":"* has `Name` and `DateTime` to serve as its unique identifier.","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"zoeykobe"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/ClientBook-level3/tree/master/src/main/java/seedu/location/storage/Storage.java)","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"* can save the `ClientBook` data in json format and read it back.","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"* can save the `MeetingBook` data in json format and read it back.","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"The `ClientBook` object,","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"* stores the data of clients","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"* retrieves stored data of clients","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"The `MeetingBook` object,","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"JodyLorah"},"content":"* stores the data of meetings","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"JodyLorah"},"content":"* retrieves stored data of meetings","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"Classes used by multiple components are in the `seedu.iscam.storage` package.","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"zoeykobe"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedClientBook`. It extends `ClientBook` with an undo/redo history, stored internally as an `ClientBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"zoeykobe"},"content":"* `VersionedClientBook#commit()` — Saves the current location book state in its history.","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"zoeykobe"},"content":"* `VersionedClientBook#undo()` — Restores the previous location book state from its history.","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"zoeykobe"},"content":"* `VersionedClientBook#redo()` — Restores a previously undone location book state from its history.","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"zoeykobe"},"content":"These operations are exposed in the `Model` interface as `Model#commitClientBook()`, `Model#undoClientBook()` and `Model#redoClientBook()` respectively.","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"zoeykobe"},"content":"Step 1. The user launches the application for the first time. The `VersionedClientBook` will be initialized with the initial location book state, and the `currentStatePointer` pointing to that single location book state.","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"zoeykobe"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the location book. The `delete` command calls `Model#commitClientBook()`, causing the modified state of the location book after the `delete 5` command executes to be saved in the `ClientBookStateList`, and the `currentStatePointer` is shifted to the newly inserted location book state.","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"zoeykobe"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also calls `Model#commitClientBook()`, causing another modified location book state to be saved into the `ClientBookStateList`.","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"zoeykobe"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitClientBook()`, so the location book state will not be saved into the `ClientBookStateList`.","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"zoeykobe"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoClientBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous location book state, and restores the location book to that state.","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"zoeykobe"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial ClientBook state, then there are no previous ClientBook states to restore. The `undo` command uses `Model#canUndoClientBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"zoeykobe"},"content":"The `redo` command does the opposite — it calls `Model#redoClientBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the location book to that state.","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"zoeykobe"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `ClientBookStateList.size() - 1`, pointing to the latest location book state, then there are no undone ClientBook states to restore. The `redo` command uses `Model#canRedoClientBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"zoeykobe"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the location book, such as `list`, will usually not call `Model#commitClientBook()`, `Model#undoClientBook()` or `Model#redoClientBook()`. Thus, the `ClientBookStateList` remains unchanged.","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"zoeykobe"},"content":"Step 6. The user executes `clear`, which calls `Model#commitClientBook()`. Since the `currentStatePointer` is not pointing at the end of the `ClientBookStateList`, all location book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"zoeykobe"},"content":"* **Alternative 1 (current choice):** Saves the entire location book.","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"zoeykobe"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"frisciliasultan"},"content":"* is an insurance agent","lastModifiedDate":"2021-02-22"},{"lineNumber":255,"author":{"gitId":"frisciliasultan"},"content":"* has a need to manage a significant number of clients","lastModifiedDate":"2021-02-22"},{"lineNumber":256,"author":{"gitId":"frisciliasultan"},"content":"* has significant number of client meetings","lastModifiedDate":"2021-02-22"},{"lineNumber":257,"author":{"gitId":"frisciliasultan"},"content":"* has a need to track clients\u0027 insurance policy expiration date","lastModifiedDate":"2021-02-22"},{"lineNumber":258,"author":{"gitId":"frisciliasultan"},"content":"* has a lot of details to remember for each client","lastModifiedDate":"2021-02-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"frisciliasultan"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-22"},{"lineNumber":265,"author":{"gitId":"frisciliasultan"},"content":"* save time by generating a consolidation of meetings and deadlines with the clients","lastModifiedDate":"2021-02-22"},{"lineNumber":266,"author":{"gitId":"frisciliasultan"},"content":"* target clients better by receiving reminders and tips before a client meeting (client\u0027s favourite food, profile)","lastModifiedDate":"2021-02-22"},{"lineNumber":267,"author":{"gitId":"frisciliasultan"},"content":"* increase customer retention by receiving reminders of when the client\u0027s insurance is expiring","lastModifiedDate":"2021-02-22"},{"lineNumber":268,"author":{"gitId":"frisciliasultan"},"content":"* improve convenience by providing a one page solution to an insurance agent\u0027s fast pace life","lastModifiedDate":"2021-02-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"frisciliasultan"},"content":"| Priority | As a …​                                 | I can …​                                             | So that I can…​                                                     |","lastModifiedDate":"2021-02-22"},{"lineNumber":275,"author":{"gitId":"frisciliasultan"},"content":"| -------- | ------------------------------------------ | ------------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-02-22"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                                  | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"zoeykobe"},"content":"| `* * *`  | user                                       | add a new client                                        |                                                                        |","lastModifiedDate":"2021-03-26"},{"lineNumber":278,"author":{"gitId":"zoeykobe"},"content":"| `* * *`  | user                                       | delete a client                                         | remove entries that I no longer need                                   |","lastModifiedDate":"2021-03-26"},{"lineNumber":279,"author":{"gitId":"zoeykobe"},"content":"| `* * *`  | user                                       | find a client by name                                   | locate details of clients without having to go through the entire list |","lastModifiedDate":"2021-03-26"},{"lineNumber":280,"author":{"gitId":"frisciliasultan"},"content":"| `* * *`  | popular insurance agent                    | view all my appointments without browsing the whole app | get a quick reminder of my appointments                                |","lastModifiedDate":"2021-02-22"},{"lineNumber":281,"author":{"gitId":"frisciliasultan"},"content":"| `* * *`  | busy insurance agent                       | schedule my meetings with my contacts                   | know when I am meeting my clients                                      |","lastModifiedDate":"2021-02-22"},{"lineNumber":282,"author":{"gitId":"frisciliasultan"},"content":"| `* * *`  | insurance agent                            | track my clients’ insurance expiry                      | remind my clients to renew their contract                              |","lastModifiedDate":"2021-02-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                            | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"frisciliasultan"},"content":"| `* *`    | time-constrained insurance agent           | view my tasks and appointments in a chronological list  | know what work to prioritize                                           |","lastModifiedDate":"2021-02-22"},{"lineNumber":285,"author":{"gitId":"frisciliasultan"},"content":"| `* *`    | opportunistic insurance agent              | filter my clients by their existing insurance plans     | upsell a new, similar plan to them                                     |","lastModifiedDate":"2021-02-22"},{"lineNumber":286,"author":{"gitId":"zoeykobe"},"content":"| `*`      | user with many clients in the location book | sort clients by name                                    | locate a client easily                                                 |","lastModifiedDate":"2021-03-26"},{"lineNumber":287,"author":{"gitId":"zoeykobe"},"content":"| `*`      | insurance agent with many contacts         | save my client’s likes/dislikes                         | interact with them more clientally                                     |","lastModifiedDate":"2021-03-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"Tomashiwa"},"content":"(For all use cases below, the **System** is the `iScam` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Add a client**","lastModifiedDate":"2021-02-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to add a client with parameters like name, contact details, age etc.","lastModifiedDate":"2021-02-22"},{"lineNumber":297,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows the client to be added.","lastModifiedDate":"2021-02-22"},{"lineNumber":298,"author":{"gitId":"Tomashiwa"},"content":"3. User confirm the addition.","lastModifiedDate":"2021-02-22"},{"lineNumber":299,"author":{"gitId":"Tomashiwa"},"content":"4. iScam adds the client.","lastModifiedDate":"2021-02-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":302,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":303,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":304,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam detects an error in the given client.","lastModifiedDate":"2021-02-22"},{"lineNumber":305,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction.","lastModifiedDate":"2021-02-22"},{"lineNumber":306,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected the client info.","lastModifiedDate":"2021-02-22"},{"lineNumber":307,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-02-22"},{"lineNumber":308,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":309,"author":{"gitId":"Tomashiwa"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-02-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":311,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":312,"author":{"gitId":"Tomashiwa"},"content":"* 3a. User chooses to cancel the addition.","lastModifiedDate":"2021-02-22"},{"lineNumber":313,"author":{"gitId":"Tomashiwa"},"content":"    * 3a1. iScam requests to confirm the cancellation.","lastModifiedDate":"2021-02-22"},{"lineNumber":314,"author":{"gitId":"Tomashiwa"},"content":"    * 3a2. User confirms the cancellation.","lastModifiedDate":"2021-02-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":318,"author":{"gitId":"Tomashiwa"},"content":"**Use case: List clients**","lastModifiedDate":"2021-02-22"},{"lineNumber":319,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":320,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":321,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to list clients.","lastModifiedDate":"2021-02-22"},{"lineNumber":322,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a list of clients.","lastModifiedDate":"2021-02-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-02-22"},{"lineNumber":328,"author":{"gitId":"zoeykobe"},"content":"    * 1a1. iScam shows a message to indicate that there are no clients.","lastModifiedDate":"2021-03-26"},{"lineNumber":329,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":330,"author":{"gitId":"Tomashiwa"},"content":"      Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Update a client**","lastModifiedDate":"2021-02-22"},{"lineNumber":333,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":334,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":335,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to update a client with new parameters.","lastModifiedDate":"2021-02-22"},{"lineNumber":336,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a preview of the updated client.","lastModifiedDate":"2021-02-22"},{"lineNumber":337,"author":{"gitId":"Tomashiwa"},"content":"3. User confirm the update.","lastModifiedDate":"2021-02-22"},{"lineNumber":338,"author":{"gitId":"Tomashiwa"},"content":"4. iScam updates the client.","lastModifiedDate":"2021-02-22"},{"lineNumber":339,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":340,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":341,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":342,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":343,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam detects an error in the new parameters.","lastModifiedDate":"2021-02-22"},{"lineNumber":344,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction.","lastModifiedDate":"2021-02-22"},{"lineNumber":345,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected the update info.","lastModifiedDate":"2021-02-22"},{"lineNumber":346,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-02-22"},{"lineNumber":347,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":348,"author":{"gitId":"Tomashiwa"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-02-22"},{"lineNumber":349,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":350,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":351,"author":{"gitId":"Tomashiwa"},"content":"* 3a. User chooses to cancel the update.","lastModifiedDate":"2021-02-22"},{"lineNumber":352,"author":{"gitId":"Tomashiwa"},"content":"    * 3a1. iScam requests to confirm the cancellation.","lastModifiedDate":"2021-02-22"},{"lineNumber":353,"author":{"gitId":"Tomashiwa"},"content":"    * 3a2. User confirms the cancellation.","lastModifiedDate":"2021-02-22"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Search clients**","lastModifiedDate":"2021-02-22"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":360,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to find clients that matches a search term.","lastModifiedDate":"2021-02-22"},{"lineNumber":361,"author":{"gitId":"Tomashiwa"},"content":"2. iScam shows a list of qualified clients.","lastModifiedDate":"2021-02-22"},{"lineNumber":362,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":363,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":364,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":365,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":366,"author":{"gitId":"zoeykobe"},"content":"* 1a. There is no client in ClientBook.","lastModifiedDate":"2021-03-26"},{"lineNumber":367,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam shows a message to indicate that there is no client.","lastModifiedDate":"2021-02-22"},{"lineNumber":368,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":369,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":370,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":371,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":372,"author":{"gitId":"Tomashiwa"},"content":"* 1b. The search term is empty.","lastModifiedDate":"2021-02-22"},{"lineNumber":373,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam shows a message to indicate that a search term is required.","lastModifiedDate":"2021-02-22"},{"lineNumber":374,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":375,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends","lastModifiedDate":"2021-02-22"},{"lineNumber":376,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":377,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Delete a client**","lastModifiedDate":"2021-02-22"},{"lineNumber":378,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":379,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":380,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to delete a client.","lastModifiedDate":"2021-02-22"},{"lineNumber":381,"author":{"gitId":"Tomashiwa"},"content":"2. iScam requests to confirm the deletion.","lastModifiedDate":"2021-02-22"},{"lineNumber":382,"author":{"gitId":"Tomashiwa"},"content":"3. User confirms the deletion.","lastModifiedDate":"2021-02-22"},{"lineNumber":383,"author":{"gitId":"Tomashiwa"},"content":"4. iScam delete the client.","lastModifiedDate":"2021-02-22"},{"lineNumber":384,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":385,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":386,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":387,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":388,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The client does not exist.","lastModifiedDate":"2021-02-22"},{"lineNumber":389,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam requests for correction.","lastModifiedDate":"2021-02-22"},{"lineNumber":390,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User corrected which client to delete.","lastModifiedDate":"2021-02-22"},{"lineNumber":391,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until the client entered is valid.","lastModifiedDate":"2021-02-22"},{"lineNumber":392,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":393,"author":{"gitId":"Tomashiwa"},"content":"        Use case resumes from step 2.","lastModifiedDate":"2021-02-22"},{"lineNumber":394,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":395,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":396,"author":{"gitId":"Tomashiwa"},"content":"* 2a. User chooses to cancel the deletion.","lastModifiedDate":"2021-02-22"},{"lineNumber":397,"author":{"gitId":"Tomashiwa"},"content":"    * 2a1. iScam requests to confirm the cancellation.","lastModifiedDate":"2021-02-22"},{"lineNumber":398,"author":{"gitId":"Tomashiwa"},"content":"    * 2a2. User confirms the cancellation.","lastModifiedDate":"2021-02-22"},{"lineNumber":399,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":400,"author":{"gitId":"Tomashiwa"},"content":"        Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":401,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":402,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Add a meeting**","lastModifiedDate":"2021-02-22"},{"lineNumber":403,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":404,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":405,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to add a meeting with a set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":406,"author":{"gitId":"Tomashiwa"},"content":"2. iScam adds the meeting.","lastModifiedDate":"2021-02-22"},{"lineNumber":407,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":408,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":411,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam detects an error within the new parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":412,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays the first invalid parameter and requests for a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":413,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User enters a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":414,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":415,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1a1-1a2 are repeated until all the parameters entered are valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":416,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":417,"author":{"gitId":"Tomashiwa"},"content":"    Use case resume from step 2.","lastModifiedDate":"2021-02-22"},{"lineNumber":418,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":419,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":420,"author":{"gitId":"Tomashiwa"},"content":"* 1b. iScam detects that the user did not provide all required parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":421,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam displays the expected command format and requests for a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":422,"author":{"gitId":"Tomashiwa"},"content":"    * 1b2. User enters a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":423,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":424,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1b1-1b2 are repeated until all required parameters are provided.","lastModifiedDate":"2021-03-27"},{"lineNumber":425,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":426,"author":{"gitId":"Tomashiwa"},"content":"    Use case resume from either 1a or 2, depending on whether the provided parameter are invalid.","lastModifiedDate":"2021-03-27"},{"lineNumber":427,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":428,"author":{"gitId":"Tomashiwa"},"content":"**Use case: List meetings**","lastModifiedDate":"2021-02-22"},{"lineNumber":429,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":430,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":431,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to list meetings.","lastModifiedDate":"2021-02-22"},{"lineNumber":432,"author":{"gitId":"Tomashiwa"},"content":"2. iScam displays a list of meetings.","lastModifiedDate":"2021-03-27"},{"lineNumber":433,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":434,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":435,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":436,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":437,"author":{"gitId":"Tomashiwa"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-02-22"},{"lineNumber":438,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays a message to indicate that there are no meetings.","lastModifiedDate":"2021-03-27"},{"lineNumber":439,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":440,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":441,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":442,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Edit a meeting**","lastModifiedDate":"2021-03-27"},{"lineNumber":443,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":444,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":445,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to update a meeting with new parameters.","lastModifiedDate":"2021-02-22"},{"lineNumber":446,"author":{"gitId":"Tomashiwa"},"content":"2. iScam updates the meeting.","lastModifiedDate":"2021-03-27"},{"lineNumber":447,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":448,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":449,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":450,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":451,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam detects an error within the new parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":452,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays the first invalid parameter and requests for a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":453,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User enters a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":454,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":455,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1a1-1a2 are repeated until all the parameters entered are valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":456,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":457,"author":{"gitId":"Tomashiwa"},"content":"    Use case resume from step 2.","lastModifiedDate":"2021-02-22"},{"lineNumber":458,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":459,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":460,"author":{"gitId":"Tomashiwa"},"content":"* 1b. iScam detects that the user did not provide any parameter.","lastModifiedDate":"2021-03-27"},{"lineNumber":461,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam displays the expected command format and requests for a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":462,"author":{"gitId":"Tomashiwa"},"content":"    * 1b2. User enters a new set of parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":463,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":464,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1b1-1b2 are repeated until at least 1 parameter is provided.","lastModifiedDate":"2021-03-27"},{"lineNumber":465,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":466,"author":{"gitId":"Tomashiwa"},"content":"    Use case resume from either 1a or 2, depending on whether the provided parameter is invalid.","lastModifiedDate":"2021-03-27"},{"lineNumber":467,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":468,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Delete a meeting**","lastModifiedDate":"2021-03-27"},{"lineNumber":469,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":470,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-03-27"},{"lineNumber":471,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to delete a meeting that is specified with an entered index.","lastModifiedDate":"2021-03-27"},{"lineNumber":472,"author":{"gitId":"Tomashiwa"},"content":"2. iScam deletes the meeting and displays a success message.","lastModifiedDate":"2021-03-27"},{"lineNumber":473,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":474,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":475,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":476,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-03-27"},{"lineNumber":477,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam cannot find the specified meeting.","lastModifiedDate":"2021-03-27"},{"lineNumber":478,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays the expected command format and requests for another index.","lastModifiedDate":"2021-03-27"},{"lineNumber":479,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User enters a new index.","lastModifiedDate":"2021-03-27"},{"lineNumber":480,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":481,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1a1-1a2 are repeated until the given index is valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":482,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":483,"author":{"gitId":"Tomashiwa"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-03-27"},{"lineNumber":484,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":485,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Find a meeting**","lastModifiedDate":"2021-03-27"},{"lineNumber":486,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":487,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-02-22"},{"lineNumber":488,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to find meetings that contain the given keywords.","lastModifiedDate":"2021-03-27"},{"lineNumber":489,"author":{"gitId":"Tomashiwa"},"content":"2. iScam lists out all matched meetings.","lastModifiedDate":"2021-03-27"},{"lineNumber":490,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":491,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":492,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":493,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-02-22"},{"lineNumber":494,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam did not receive any keyword.","lastModifiedDate":"2021-03-27"},{"lineNumber":495,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays the expected command format and requests for keywords.","lastModifiedDate":"2021-03-27"},{"lineNumber":496,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2 User enter keywords.","lastModifiedDate":"2021-03-27"},{"lineNumber":497,"author":{"gitId":"Tomashiwa"},"content":"    * Steps 1a1-1a2 are repeated until keywords are given.","lastModifiedDate":"2021-03-27"},{"lineNumber":498,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":499,"author":{"gitId":"Tomashiwa"},"content":"        Use case resumes from step 2.","lastModifiedDate":"2021-02-22"},{"lineNumber":500,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":501,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Reschedule a meeting**","lastModifiedDate":"2021-03-27"},{"lineNumber":502,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to change the date time of a meeting by specifying with an entered index and a new date time.","lastModifiedDate":"2021-03-27"},{"lineNumber":503,"author":{"gitId":"Tomashiwa"},"content":"2. iScam changes the date time of the meeting and displays a success message.","lastModifiedDate":"2021-03-27"},{"lineNumber":504,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":505,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-03-27"},{"lineNumber":506,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":507,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-03-27"},{"lineNumber":508,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam did not receive both parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":509,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays the expected command format and requests for both index and date time.","lastModifiedDate":"2021-03-27"},{"lineNumber":510,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User enters an index and a date time.","lastModifiedDate":"2021-03-27"},{"lineNumber":511,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":512,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1a1-1a2 are repeated until both parameters are provided.","lastModifiedDate":"2021-03-27"},{"lineNumber":513,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":514,"author":{"gitId":"Tomashiwa"},"content":"    Use cases can resume from either 1b or 2, depending on whether both parameters are valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":515,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":516,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":517,"author":{"gitId":"Tomashiwa"},"content":"* 1b. iScam receives one or more invalid parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":518,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam displays which parameter is invalid and requests for both index and date time.","lastModifiedDate":"2021-03-27"},{"lineNumber":519,"author":{"gitId":"Tomashiwa"},"content":"    * 1b2. User enters an index and a location.","lastModifiedDate":"2021-03-27"},{"lineNumber":520,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":521,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1b1-1b2 are repeated until the both parameters are valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":522,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":523,"author":{"gitId":"Tomashiwa"},"content":"    Use cases can resume from either 1a or 2, depending on whether both parameters are present.","lastModifiedDate":"2021-03-27"},{"lineNumber":524,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":525,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-03-27"},{"lineNumber":526,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":527,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Relocate a meeting**","lastModifiedDate":"2021-03-27"},{"lineNumber":528,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":529,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-03-27"},{"lineNumber":530,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to change the location of a meeting by specifying with an entered index and a new location.","lastModifiedDate":"2021-03-27"},{"lineNumber":531,"author":{"gitId":"Tomashiwa"},"content":"2. iScam changes the location of the meeting and displays a success message.","lastModifiedDate":"2021-03-27"},{"lineNumber":532,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":533,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-03-27"},{"lineNumber":534,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":535,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-03-27"},{"lineNumber":536,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam did not receive both parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":537,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays the expected command format and requests for both index and location.","lastModifiedDate":"2021-03-27"},{"lineNumber":538,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User enters an index and a location.","lastModifiedDate":"2021-03-27"},{"lineNumber":539,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":540,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1a1-1a2 are repeated until both parameters are provided.","lastModifiedDate":"2021-03-27"},{"lineNumber":541,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":542,"author":{"gitId":"Tomashiwa"},"content":"    Use cases can resume from either 1b or 2, depending on whether both parameters are valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":543,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":544,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":545,"author":{"gitId":"Tomashiwa"},"content":"* 1b. iScam receives one or more invalid parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":546,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam displays which parameter is invalid and requests for both index and location.","lastModifiedDate":"2021-03-27"},{"lineNumber":547,"author":{"gitId":"Tomashiwa"},"content":"    * 1b2. User enters an index and a location.","lastModifiedDate":"2021-03-27"},{"lineNumber":548,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":549,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1b1-1b2 are repeated until the both parameters are valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":550,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":551,"author":{"gitId":"Tomashiwa"},"content":"    Use cases can resume from either 1a or 2, depending on whether both parameters are present.","lastModifiedDate":"2021-03-27"},{"lineNumber":552,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":553,"author":{"gitId":"Tomashiwa"},"content":"**Use case: Complete a meeting**","lastModifiedDate":"2021-03-27"},{"lineNumber":554,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":555,"author":{"gitId":"Tomashiwa"},"content":"**MSS**","lastModifiedDate":"2021-03-27"},{"lineNumber":556,"author":{"gitId":"Tomashiwa"},"content":"1. User requests to complete a meeting that is specified by an entered index.","lastModifiedDate":"2021-03-27"},{"lineNumber":557,"author":{"gitId":"Tomashiwa"},"content":"2. iScam marks the meeting as completed and display a success message.","lastModifiedDate":"2021-03-27"},{"lineNumber":558,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":559,"author":{"gitId":"Tomashiwa"},"content":"    Use case ends.","lastModifiedDate":"2021-02-22"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"Tomashiwa"},"content":"**Extensions**","lastModifiedDate":"2021-03-27"},{"lineNumber":562,"author":{"gitId":"Tomashiwa"},"content":"* 1a. iScam did not receive any index from the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":563,"author":{"gitId":"Tomashiwa"},"content":"    * 1a1. iScam displays the expected command format and request for an index.","lastModifiedDate":"2021-03-27"},{"lineNumber":564,"author":{"gitId":"Tomashiwa"},"content":"    * 1a2. User enters a new index.","lastModifiedDate":"2021-03-27"},{"lineNumber":565,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":566,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1a1-1a2 are repeated until an index is provided.","lastModifiedDate":"2021-03-27"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":568,"author":{"gitId":"Tomashiwa"},"content":"    Use case can resume from either 1b or 2, depending on whether the index is valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":571,"author":{"gitId":"Tomashiwa"},"content":"* 1b. iScam cannot find a meeting with the entered index.","lastModifiedDate":"2021-03-27"},{"lineNumber":572,"author":{"gitId":"Tomashiwa"},"content":"    * 1b1. iScam displays that index is invalid and requests for another index.","lastModifiedDate":"2021-03-27"},{"lineNumber":573,"author":{"gitId":"Tomashiwa"},"content":"    * 1b2. User enters a new index.","lastModifiedDate":"2021-03-27"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":575,"author":{"gitId":"Tomashiwa"},"content":"    Steps 1b1-1b2 are repeated until the index entered is valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":577,"author":{"gitId":"Tomashiwa"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-03-27"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":579,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"Tomashiwa"},"content":"2.  Should be able to hold up to 1000 clients and meetings without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-22"},{"lineNumber":585,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"Tomashiwa"},"content":"4.  A user should be able to quickly identify the purpose of different interface elements through larger buttons, recognizable color scheme etc.","lastModifiedDate":"2021-02-22"},{"lineNumber":587,"author":{"gitId":"Tomashiwa"},"content":"5.  An average user should be able to get a grasp on the user interface within a few iteration of usage","lastModifiedDate":"2021-02-22"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"zoeykobe"},"content":"### Deleting a client","lastModifiedDate":"2021-03-26"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"zoeykobe"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2021-03-26"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"zoeykobe"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"zoeykobe"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-26"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":12,"zoeykobe":38,"Tomashiwa":275,"frisciliasultan":17,"-":303}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"   1. Run the `seedu.iscam.Main` and try a few commands.","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Zaiah0505":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"   e.g. `seedu.iscam.commons.StringUtilTest`","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"   e.g. `seedu.iscam.storage.StorageManagerTest`","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"   e.g. `seedu.iscam.logic.LogicManagerTest`","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Zaiah0505":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"iScam is a **desktop app for insurance agents to manage clients and meetings, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, iScam can get your client management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"1. Download the latest `iScam.jar` from [here](https://github.com/AY2021S2-CS2103-W17-4/tp/releases).","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your iScam.","lastModifiedDate":"2021-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"   * **`list`** : Lists all clients.","lastModifiedDate":"2021-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com l/John street, block 123, #01-01 ip/MediShield Life i/john_doe.png t/friends` : Adds a client named `John Doe` to iScam.","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    ","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"   * **`edit`**`1 p/98765432`: Change the phone number of the 1st client shown in the current list to `98765432`","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    ","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"   * **`find`**`John`: Find a client named `John`","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    ","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"   * **`findplan`**`MediShield Life`: Find a client with `MediShield Life` insurance plan","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"   * **`show`**`2` : Shows the 2nd client shown in the list in the bottom right detail panel","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"   * **`delete`**`3` : Deletes the 3rd client shown in the current list.","lastModifiedDate":"2021-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"   * **`listmeet`** : Lists all meetings.","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"   * **`addmeet`**`c/John Doe on/12-10-2021 10:00 l/Starbucks d/Catch up t/friend` : Adds a meeting with a client named `John Doe` to iScam.","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"   * **`editmeet`**`1 d/Discuss insurance plan`: Change the description of the 1st meeting shown in the current list to `Discuss insurance plan`","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"   * **`findmeet`**`John`: Find a meeting with the keyword `John`","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    ","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"   * **`deletemeet`**`3` : Deletes the 3rd meeting shown in the current list.","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"   * **`clear`** : Deletes all clients and meetings.","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `listmeet`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"zoeykobe"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-02-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"zoeykobe"},"content":"### Adding a client: `add`","lastModifiedDate":"2021-02-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"zoeykobe"},"content":"Adds a client to iScam.","lastModifiedDate":"2021-02-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"Format: `add n/NAME p/PHONE e/EMAIL l/LOCATION [ip/INSURANCE_PLAN] [i/IMAGE_FILE] [t/TAG]…​`","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"zoeykobe"},"content":"A client can have any number of tags (including 0)","lastModifiedDate":"2021-02-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"A client can have only one or no insurance plan","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"You can add a profile picture for your client by first adding the picture file into [JAR file location]/data/[picture file].","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"Then, include the file name under the i/ prefix when adding client.","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"\u003c/div\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com l/01 Singapore Street, #23-45 ip/MediShield Life i/john_doe.png t/friends t/owesMoney`","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com l/Newgate Prison p/1234567 t/criminal i/criminal.jpeg`","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"zoeykobe"},"content":"### Listing all clients : `list`","lastModifiedDate":"2021-02-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"zoeykobe"},"content":"Changes the mode of iScam to Client Mode.","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"zoeykobe"},"content":"Client Mode displays lists of clients and client details.","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"frisciliasultan"},"content":"### Showing a particular client : `show`","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"frisciliasultan"},"content":"Display client details on the right panel of the Ui.","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":"Format: `show INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"frisciliasultan"},"content":"* Shows the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"frisciliasultan"},"content":"Examples:","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"* `show 1` Shows the details (such as name, phone number, profile picture, insurance, etc) of the first Client on the right panel of the UI.","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"frisciliasultan"},"content":"![result for show command](images/show7.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"zoeykobe"},"content":"### Editing a client : `edit`","lastModifiedDate":"2021-02-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"zoeykobe"},"content":"Edits an existing client in iScam.","lastModifiedDate":"2021-02-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"frisciliasultan"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [l/LOCATION] [ip/INSURANCE_PLAN] [i/IMAGE_FILE] [t/TAG]…​`","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"zoeykobe"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-02-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"zoeykobe"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-02-22"},{"lineNumber":146,"author":{"gitId":"zoeykobe"},"content":"* You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2021-02-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Zaiah0505"},"content":"* You can also remove the client\u0027s existing insurance plan by typing `ip/` without specifying any insurance plan after it.","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"Zaiah0505"},"content":"* When specifying which image file to use, the file extension must be included in the IMAGE_FILE name.","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"zoeykobe"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email location of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"frisciliasultan"},"content":"*  `edit 2 n/Betsy Crower t/ ip/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags and remove insurance plan.","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"zoeykobe"},"content":"### Locating clients by name: `find`","lastModifiedDate":"2021-02-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"zoeykobe"},"content":"Finds clients whose names contain any of the given keywords.","lastModifiedDate":"2021-02-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"zoeykobe"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-02-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"frisciliasultan"},"content":"### Locating clients by insurance plan: `findplan`","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"frisciliasultan"},"content":"Finds clients whose insurance plan contains any of the given keywords.","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"frisciliasultan"},"content":"Format: `findplan KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"frisciliasultan"},"content":"* The search is case-insensitive. e.g `medishield` will match `MediShield`","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"frisciliasultan"},"content":"* The order of the keywords does not matter. e.g. `Life MediShield` will match `MediShield Life`","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"frisciliasultan"},"content":"* Only the insurance plan is searched.","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"frisciliasultan"},"content":"* Only full words will be matched e.g. `Medi` will not match `MediShield`","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"frisciliasultan"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"frisciliasultan"},"content":"  e.g. `MediShield Life` will return `MediShield Pro`, `Life Protection`","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"frisciliasultan"},"content":"Examples:","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"frisciliasultan"},"content":"* `findplan MediShield Life` returns `medishield` and `MediShield Life`","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"frisciliasultan"},"content":"* `findplan medishield eldershield` returns `MediShield Life`, `ElderShield`","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"frisciliasultan"},"content":"  ","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"zoeykobe"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2021-02-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"zoeykobe"},"content":"Deletes the specified client from iScam.","lastModifiedDate":"2021-02-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"zoeykobe"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2021-02-22"},{"lineNumber":197,"author":{"gitId":"zoeykobe"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2021-02-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"zoeykobe"},"content":"* `list` followed by `delete 2` deletes the 2nd client in iScam.","lastModifiedDate":"2021-02-22"},{"lineNumber":202,"author":{"gitId":"zoeykobe"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2021-02-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Tomashiwa"},"content":"### Adding a meeting: `addmeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"Tomashiwa"},"content":"Adds a meeting to iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"Tomashiwa"},"content":"Format: `addmeet c/CLIENT_NAME on/DATE_TIME l/ADDRESS d/DESCRIPTION [t/TAG(s)]`","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"Tomashiwa"},"content":"* Date and time is in the format of `dd-MM-yyyy HH:mm` where:","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"Tomashiwa"},"content":"  * `dd` is the day of the month in double digits.","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"Tomashiwa"},"content":"  * `MM` is the month in double digits. ","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"Tomashiwa"},"content":"  * `yyyy` is the year.","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"Tomashiwa"},"content":"  * `HH:mm` is the time in 24:00 format. ","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"Tomashiwa"},"content":"* The specified date and time **cannot be in the past**.","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"Tomashiwa"},"content":"* There can only be 1 meeting happening at a specific date and time.","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"Tomashiwa"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"Tomashiwa"},"content":"* `addmeet c/John Smith on/20-02-2022 15:00 l/Starbucks, Serangoon d/Discuss on insurance plans t/VIP`","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"Tomashiwa"},"content":"### Listing all meetings: `listmeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"Tomashiwa"},"content":"Changes the mode of iScam to Meeting Mode.","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"Tomashiwa"},"content":"Meeting mode displays the list of all meetings.","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"Tomashiwa"},"content":"Format: `listmeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"Tomashiwa"},"content":"* The meetings are in their chronological order with the most upcoming meetings at the top.","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"Tomashiwa"},"content":"### Editing a meeting: `editmeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"Tomashiwa"},"content":"Edits an existing meeting in iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"Tomashiwa"},"content":"Format: `editmeet INDEX [c/CLIENT_NAME] [on/DATE_TIME] [l/ADDRESS] [d/DESCRIPTION] [t/TAG(s)] [done/YES_OR_NO]`","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"Tomashiwa"},"content":"* `INDEX` refer to the meeting\u0027s index number shown in the displayed meeting list from `listmeet`. The index **must be a ","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"Tomashiwa"},"content":"  positive integer 1, 2, 3, …**","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"Tomashiwa"},"content":"* At least one of the optional fields must be provided. ","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"Tomashiwa"},"content":"* Existing values will be replaced by the input values.","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"Tomashiwa"},"content":"* Date and time is in the format of `dd-MM-yyyy HH:mm` where:","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"Tomashiwa"},"content":"  * `dd` is the day of the month in double digits.","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"Tomashiwa"},"content":"  * `MM` is the month in double digits. ","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"Tomashiwa"},"content":"  * `yyyy` is the year.","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"Tomashiwa"},"content":"  * `HH:mm` is the time in 24 hours format. ","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"Tomashiwa"},"content":"* The specified date and time **cannot be in the past**.","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"Tomashiwa"},"content":"* The specified date and time **cannot be in conflict with existing meetings** in iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"Tomashiwa"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"Tomashiwa"},"content":"* The `done` parameter **only accepts `yes` or `no`**.","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"Tomashiwa"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"Tomashiwa"},"content":"* `editmeet 1 l/Macdonald, Simei d/Client\u0027s family will be coming along`","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"Tomashiwa"},"content":"### Relocating a meeting: `relocate`","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"Tomashiwa"},"content":"Modify the location of an existing meeting in iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"Tomashiwa"},"content":"Format: `relocate INDEX l/LOCATION`","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"Tomashiwa"},"content":"* `INDEX` refer to the meeting\u0027s index in the displayed list from `listmeet`.","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"Tomashiwa"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"Tomashiwa"},"content":"* `relocate 1 l/KFC, Block 556 Bugis`","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"Tomashiwa"},"content":"### Rescheduling a meeting: `reschedule`","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"Tomashiwa"},"content":"Modify the date and time of an existing meeting in iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"Tomashiwa"},"content":"Format: `reschedule INDEX on/DATE_TIME`","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"Tomashiwa"},"content":"* `INDEX` refer to the meeting\u0027s index number shown in the displayed meeting list from `listmeet`. The index **must be a ","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"Tomashiwa"},"content":"  positive integer 1, 2, 3, …**   ","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"Tomashiwa"},"content":"* Date and time is in the format of `dd-MM-yyyy HH:mm` where:","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"Tomashiwa"},"content":"  * `dd` is the day of the month in double digits.","lastModifiedDate":"2021-03-31"},{"lineNumber":274,"author":{"gitId":"Tomashiwa"},"content":"  * `MM` is the month in double digits. ","lastModifiedDate":"2021-03-31"},{"lineNumber":275,"author":{"gitId":"Tomashiwa"},"content":"  * `yyyy` is the year.","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"Tomashiwa"},"content":"  * `HH:mm` is the time in 24 hour format. ","lastModifiedDate":"2021-03-31"},{"lineNumber":277,"author":{"gitId":"Tomashiwa"},"content":"* The specified date and time **cannot be in the past**.","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"Tomashiwa"},"content":"* The modified date and time cannot be in conflict with existing meetings in iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"Tomashiwa"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":281,"author":{"gitId":"Tomashiwa"},"content":"* `reschedule 3 on/08-10-2021 20:00`","lastModifiedDate":"2021-03-31"},{"lineNumber":282,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"Tomashiwa"},"content":"### Finding meetings by keywords: `findmeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"Tomashiwa"},"content":"Finds meetings which has its parameters matched by any of the given keywords.","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"Tomashiwa"},"content":"Format: `findmeet KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"frisciliasultan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-01"},{"lineNumber":289,"author":{"gitId":"frisciliasultan"},"content":"Do a listmeet command first to switch to Meeting Mode and view the meetings in the Ui","lastModifiedDate":"2021-04-01"},{"lineNumber":290,"author":{"gitId":"frisciliasultan"},"content":"\u003c/div\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":291,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":292,"author":{"gitId":"Tomashiwa"},"content":"* The search is case-insensitive. e.g `john` will match `John`","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"Tomashiwa"},"content":"* The order of the keywords does not matter. e.g. `plans discussion` will match `discuss plans`","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"Tomashiwa"},"content":"* Both full and partial keywords can match. e.g. `insurance` and `sur` will both match `insurance`","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"Tomashiwa"},"content":"* The keywords will be match against all parameters of a meeting.","lastModifiedDate":"2021-03-31"},{"lineNumber":296,"author":{"gitId":"Tomashiwa"},"content":"* Meeting matching all keywords will be returned (i.e. `AND` search). e.g. `Johnson Smith` will not return ","lastModifiedDate":"2021-04-04"},{"lineNumber":297,"author":{"gitId":"Tomashiwa"},"content":"  `Sam Smith` and `Johnson Drake` but will return `Johnson Shawn Smith`.","lastModifiedDate":"2021-04-04"},{"lineNumber":298,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":299,"author":{"gitId":"Tomashiwa"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":300,"author":{"gitId":"Tomashiwa"},"content":"* `findmeet 05-2022` returns a meeting witn `Johnson` on `24-05-2022 12:00` and another meeting with `Sam` on ","lastModifiedDate":"2021-03-31"},{"lineNumber":301,"author":{"gitId":"Tomashiwa"},"content":"  `01-05-2022 20:00`.","lastModifiedDate":"2021-03-31"},{"lineNumber":302,"author":{"gitId":"Tomashiwa"},"content":"* `findmeet 05-2022 Sam` returns a meeting with `Sam` on `01-05-2022 20:00`.\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":303,"author":{"gitId":"Tomashiwa"},"content":"  ![result for \u0027findmeet 05-2022 Sam\u0027](images/findmeetResult.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":304,"author":{"gitId":"Tomashiwa"},"content":"  ","lastModifiedDate":"2021-03-31"},{"lineNumber":305,"author":{"gitId":"Tomashiwa"},"content":"### Deleting a meeting: `deletemeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":306,"author":{"gitId":"Tomashiwa"},"content":"Deletes a specified existing meeting from iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":307,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":308,"author":{"gitId":"Tomashiwa"},"content":"Format: `deletemeet INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":310,"author":{"gitId":"Tomashiwa"},"content":"* `INDEX` refer to the meeting\u0027s index number shown in the displayed meeting list from `listmeet`. The index **must be a ","lastModifiedDate":"2021-03-31"},{"lineNumber":311,"author":{"gitId":"Tomashiwa"},"content":"  positive integer 1, 2, 3, …**","lastModifiedDate":"2021-03-31"},{"lineNumber":312,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":313,"author":{"gitId":"Tomashiwa"},"content":"### Complete a meeting `donemeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"Tomashiwa"},"content":"Marks a specified existing meeting from iScam as completed. ","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":316,"author":{"gitId":"Tomashiwa"},"content":"Format: `donemeet INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":318,"author":{"gitId":"Tomashiwa"},"content":"* `INDEX` refer to the meeting\u0027s index number shown in the displayed meeting list from `listmeet`. The index **must be a ","lastModifiedDate":"2021-03-31"},{"lineNumber":319,"author":{"gitId":"Tomashiwa"},"content":"  positive integer 1, 2, 3, …**","lastModifiedDate":"2021-03-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"Tomashiwa"},"content":"Clears all client and meeting entries from iScam.","lastModifiedDate":"2021-03-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"zoeykobe"},"content":"iScam data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-02-22"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"frisciliasultan"},"content":"### Editing the data files","lastModifiedDate":"2021-04-01"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":339,"author":{"gitId":"JodyLorah"},"content":"iScam data are saved as JSON files. Advanced users are welcome to update data directly by editing those data files.","lastModifiedDate":"2021-04-04"},{"lineNumber":340,"author":{"gitId":"JodyLorah"},"content":"Client data are saved in `[JAR file location]/data/clientbook.json`. ","lastModifiedDate":"2021-04-04"},{"lineNumber":341,"author":{"gitId":"JodyLorah"},"content":"Meeting data are saved in `[JAR file location]/data/meetingbook.json`. ","lastModifiedDate":"2021-04-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"zoeykobe"},"content":"If your changes to the data file makes its format invalid, iScam will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"Zaiah0505"},"content":"### Adding images for clients","lastModifiedDate":"2021-04-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":349,"author":{"gitId":"Zaiah0505"},"content":"Images for clients can be added by placing an image in the `/data` folder, with the","lastModifiedDate":"2021-04-01"},{"lineNumber":350,"author":{"gitId":"Zaiah0505"},"content":"`clientbook.json` and `meetingbook.json` files. Any image file used must be of file","lastModifiedDate":"2021-04-01"},{"lineNumber":351,"author":{"gitId":"Zaiah0505"},"content":"type `.jpg`, `.jpeg` or `.png`.","lastModifiedDate":"2021-04-01"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":353,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"zoeykobe"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous iScam home folder.","lastModifiedDate":"2021-02-22"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"frisciliasultan"},"content":"**Add Client** | `add n/NAME p/PHONE e/EMAIL l/LOCATION [ip/INSURANCE_PLAN] [i/IMAGE_FILE] [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com l/01 Singapore Street, #23-45 ip/MediShield Life i/john_doe.png t/friends t/owesMoney`","lastModifiedDate":"2021-03-31"},{"lineNumber":368,"author":{"gitId":"frisciliasultan"},"content":"**List Clients** | `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":369,"author":{"gitId":"frisciliasultan"},"content":"**Show Client** | `show INDEX` \u003cbr\u003e e.g., `show 1`","lastModifiedDate":"2021-04-01"},{"lineNumber":370,"author":{"gitId":"frisciliasultan"},"content":"**Edit Client** | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [l/LOCATION] [ip/INSURANCE_PLAN] [i/IMAGE_FILE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"frisciliasultan"},"content":"**Find Client by Name** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-03-31"},{"lineNumber":372,"author":{"gitId":"frisciliasultan"},"content":"**Find Client by Insurance Plan** | `findplan KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findplan MediShield`","lastModifiedDate":"2021-03-31"},{"lineNumber":373,"author":{"gitId":"frisciliasultan"},"content":"**Delete Client** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-03-31"},{"lineNumber":374,"author":{"gitId":"frisciliasultan"},"content":"**Add Meeting** | `addmeet c/CLIENT_NAME on/DATE_TIME l/LOCATION d/DESCRIPTION [t/TAG]…​` \u003cbr\u003e e.g., `addmeet c/John Doe on/12-10-2021 10:00 l/Starbucks, Tampines Hub d/Discuss insurance policy t/Urgent t/Premium`","lastModifiedDate":"2021-03-31"},{"lineNumber":375,"author":{"gitId":"frisciliasultan"},"content":"**List Meetings** | `listmeet`","lastModifiedDate":"2021-03-31"},{"lineNumber":376,"author":{"gitId":"frisciliasultan"},"content":"**Edit Meeting** | `editmeet INDEX [c/CLIENT_NAME] [on/DATE_TIME] [l/LOCATION] [d/DESCRIPTION] [t/TAG] [done/IS_DONE]…​`\u003cbr\u003e e.g.,`editmeet 2 c/James Lee done/yes`","lastModifiedDate":"2021-04-01"},{"lineNumber":377,"author":{"gitId":"frisciliasultan"},"content":"**Relocate Meeting** | `relocate INDEX l/LOCATION` \u003cbr\u003e e.g., `relocate 1 l/KFC, Blk 556 Bugis`","lastModifiedDate":"2021-03-31"},{"lineNumber":378,"author":{"gitId":"frisciliasultan"},"content":"**Reschedule Meeting** | `reschedule INDEX on/DATE_TIME` \u003cbr\u003e e.g., `reschedule 2 on/20-10-2021 10:00`","lastModifiedDate":"2021-03-31"},{"lineNumber":379,"author":{"gitId":"frisciliasultan"},"content":"**Find Meeting** | `findmeet KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findmeet 05-2022 Sam`","lastModifiedDate":"2021-03-31"},{"lineNumber":380,"author":{"gitId":"frisciliasultan"},"content":"**Delete Meeting** | `deletemeet INDEX`\u003cbr\u003e e.g., `deletemeet 3`","lastModifiedDate":"2021-04-04"},{"lineNumber":381,"author":{"gitId":"frisciliasultan"},"content":"**Complete Meeting** | `donemeet INDEX` \u003cbr\u003e e.g., `donemeet 3`","lastModifiedDate":"2021-03-31"},{"lineNumber":382,"author":{"gitId":"frisciliasultan"},"content":"**Clear All** | `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":383,"author":{"gitId":"frisciliasultan"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Zaiah0505":7,"JodyLorah":3,"zoeykobe":30,"Tomashiwa":113,"frisciliasultan":78,"-":152}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"JodyLorah"},"content":"    content: \"iScam\";","lastModifiedDate":"2021-04-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"JodyLorah":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(clientBook)","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"zoeykobe":1,"-":37}},{"path":"docs/diagrams/ClientBook.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"Interface ReadOnlyClientBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"Class ModelManager","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"Class ClientBook","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"Package Client {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"Class Client","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"Class Name","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"Class Location","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"Class Email","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"Class Phone","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"Class UniqueClientList","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"Package Tag {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"Class Tag","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"ClientBook .up.|\u003e ReadOnlyClientBook","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"ModelManager o--\u003e \"1\" ClientBook","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"ClientBook *--\u003e \"1\" UniqueClientList","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"UniqueClientList o--\u003e \"*\" Client","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Name","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Location","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Email","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Phone","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"ModelManager -----\u003e\" ~* filtered list\" Client","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Tomashiwa":40}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"package Storage{","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"Class HiddenStorage #FFFFFF","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e\"1\" AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBookParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JodyLorah":4,"-":62}},{"path":"docs/diagrams/MeetingBook.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"Interface ReadOnlyMeetingBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"Class ModelManager","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"Class MeetingBook","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"Package Meeting {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"Class Meeting","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"Class Name","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"Class DateTime","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"Class Location","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"Class Description","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"Class UniqueMeetingList","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"Package Tag {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"Class Tag","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"MeetingBook .up.|\u003e ReadOnlyMeetingBook","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"ModelManager o--\u003e \"1\" MeetingBook","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"MeetingBook *--\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"UniqueMeetingList o--\u003e \"*\" Meeting","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e Name","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e DateTime","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e Location","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e Description","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"ModelManager -----\u003e\" ~* filtered list\" Meeting","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Tomashiwa":40}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"HiddenOutside .down.\u003e Model","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"Interface ReadOnlyClientBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"Interface ReadOnlyMeetingBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"Class ClientBook","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"Class MeetingBook","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"Package Client {","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"Class UniqueClientList","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"Class Client","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"Class InsurancePlan","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"Class Image","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"Package Meeting {","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"Class Meeting","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"Class DateTime","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"Class Description","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"Class UniqueMeetingList","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"Package Commons {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"Class Location","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"Class Name","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"Class Tag","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Name","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Location","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Email","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e Phone","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e InsurancePlan","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"Client *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"Client *-left-\u003e Image","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e Name","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e DateTime","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e Location","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e Description","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"Meeting *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"ModelManager o---\u003e \"1\" ClientBook","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"ModelManager o---\u003e \"1\" MeetingBook","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"ModelManager o-down-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"UserPrefs .down.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"ClientBook .right.|\u003e ReadOnlyClientBook","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"ClientBook *-down-\u003e \"1  \" UniqueClientList","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"UniqueClientList o-down-\u003e \"~*  \" Client","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"MeetingBook .left.|\u003e ReadOnlyMeetingBook","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"MeetingBook *-down-\u003e \"1   \" UniqueMeetingList","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"UniqueMeetingList o-down-\u003e \"*\" Meeting","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"ModelManager -left-\u003e\"~* filtered list     \" Client","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"ModelManager --\u003e\"        ~* filtered sorted list\" Meeting","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"Tomashiwa"},"content":"note bottom of Commons: Attributes that are used by different object types in the Model.","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Tomashiwa":57,"-":27}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"Interface ClientBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"Interface MeetingBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"Class JsonClientBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"Class JsonMeetingBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"StorageManager o--\u003e ClientBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"StorageManager o-up-\u003e MeetingBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"Storage -|\u003e UserPrefsStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"Storage -|\u003e ClientBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"Storage -|\u003e MeetingBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"JsonClientBookStorage .left.|\u003e ClientBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"JsonClientBookStorage .down.\u003e JsonSerializableClientBook","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"JsonSerializableClientBook .right.\u003e JsonAdaptedClient","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"JsonAdaptedClient .right.\u003e JsonAdaptedClientTag","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"JsonMeetingBookStorage .left.|\u003e MeetingBookStorage","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"JsonMeetingBookStorage .up.\u003e JsonSerializableMeetingBook","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"JsonSerializableMeetingBook .right.\u003e JsonAdaptedMeeting","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"JsonAdaptedMeeting .right.\u003e JsonAdaptedMeetingTag","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JodyLorah":20,"-":17}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"title: iScam","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W17-4/tp/actions)","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2021S2-CS2103-W17-4/tp)","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"![Ui](images/ActualUi.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"**Welcome to iSCAM, your new client management app.** It helps catalogue and manage your clients\u0027 information, including upcoming appointments with them, and allows you to retrieve these data efficiently. iSCAM also presents your daily scheduled appointments in a one-page solution, where you can easily see your schedule for the day. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"* If you are interested in using iScam, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"* If you are interested about developing iScam, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tomashiwa":7,"-":12}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"AddressBook - Level 3 is a desktop location book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zoeykobe":1,"-":45}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their location book and edit it if required. The command should have the following format:","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/location/logic/command` directory.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":" * Changes the remark of an existing person in the location book.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"Zaiah0505"},"content":"Create a `RemarkCommandParser` class in the `seedu.iscam.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"Zaiah0505"},"content":"Create a new `Remark` in `seedu.iscam.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"Zaiah0505"},"content":"Simply add the following to [`seedu.iscam.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"zoeykobe"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty location book!","lastModifiedDate":"2021-03-14"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Zaiah0505":6,"zoeykobe":4,"-":384}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"In this tutorial, we’ll do exactly just that and remove the `location` field from `Person`.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"The `location` field in `Person` is actually an instance of the `seedu.iscam.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"1. Safe delete the field `location` in `EditPersonDescriptor`.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"1. Remove the usages of `location` and select `Do refactor` when you are done.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `location` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `location` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$location` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"![$location](../images/remove/$location.png)","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"zoeykobe"},"content":"private Label location;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"\u003cLabel fx:id\u003d\"location\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"zoeykobe"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `location` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"zoeykobe"},"content":"    \"location\": \"4th street\"","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"zoeykobe"},"content":"You can go through each individual `json` file and manually remove the `location` field.","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":1,"zoeykobe":12,"-":90}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.iscam.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"zoeykobe"},"content":"    3.  Save the location book in the CSV format instead","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"zoeykobe"},"content":"    6.  Add a new entity to the location book","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":1,"zoeykobe":2,"-":247}},{"path":"src/main/java/seedu/iscam/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"        return configPath;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Zaiah0505":11,"-":53}},{"path":"src/main/java/seedu/iscam/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Zaiah0505":5,"-":20}},{"path":"src/main/java/seedu/iscam/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Config;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Version;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.Logic;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.LogicManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.storage.StorageManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.client.ClientBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.client.JsonClientBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.meeting.JsonMeetingBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.meeting.MeetingBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.user.JsonUserPrefsStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.user.UserPrefsStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.ui.UiManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ClientBook and MeetingBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"zoeykobe"},"content":"        ClientBookStorage clientBookStorage \u003d new JsonClientBookStorage(userPrefs.getClientBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"        MeetingBookStorage meetingBookStorage \u003d new JsonMeetingBookStorage(userPrefs.getMeetingBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        storage \u003d new StorageManager(clientBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s iscam book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"     * The data from the sample iscam book will be used instead if {@code storage}\u0027s iscam book is not found,","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"     * or an empty iscam book will be used instead if errors occur when reading {@code storage}\u0027s iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"zoeykobe"},"content":"        Optional\u003cReadOnlyClientBook\u003e clientBookOptional;","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"        ReadOnlyClientBook initialClientBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"        Optional\u003cReadOnlyMeetingBook\u003e meetingBookOptional;","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"        ReadOnlyMeetingBook initialMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"        //initialMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"zoeykobe"},"content":"            clientBookOptional \u003d storage.readClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"            meetingBookOptional \u003d storage.readMeetingBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"zoeykobe"},"content":"            if (!clientBookOptional.isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"zoeykobe"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ClientBook\");","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"            if (!meetingBookOptional.isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"                logger.info(\"Data file not found. Will be starting with a sample MeetingBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"            logger.info(\"Data file found. Loading ClientBook and MeetingBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"            initialClientBook \u003d clientBookOptional.orElseGet(SampleDataUtil::getSampleClientBook);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"            initialMeetingBook \u003d meetingBookOptional.orElseGet(SampleDataUtil::getSampleMeetingBook);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with \"","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"                    + \"an empty ClientBook and MeetingBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"Tomashiwa"},"content":"            initialClientBook \u003d new ClientBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"            initialMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with \"","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"                    + \"an empty ClientBook and MeetingBook\");","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"Tomashiwa"},"content":"            initialClientBook \u003d new ClientBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"Tomashiwa"},"content":"            initialMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"Tomashiwa"},"content":"        return new ModelManager(initialClientBook, initialMeetingBook, userPrefs);","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"zoeykobe"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ClientBook\");","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"zoeykobe"},"content":"        logger.info(\"Starting ClientBook \" + MainApp.VERSION);","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"zoeykobe"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Location Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":19,"JodyLorah":33,"zoeykobe":8,"Tomashiwa":8,"-":137}},{"path":"src/main/java/seedu/iscam/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":1,"-":62}},{"path":"src/main/java/seedu/iscam/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":1,"-":78}},{"path":"src/main/java/seedu/iscam/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    private static final String LOG_FILE \u003d \"clientbook.log\";","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":1,"-":109}},{"path":"src/main/java/seedu/iscam/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided does not\"","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"            + \" exist in the current list\";","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided does not\"","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"            + \" exist in the current list\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"%1$d meetings listed!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":1,"Tomashiwa":1,"frisciliasultan":4,"-":10}},{"path":"src/main/java/seedu/iscam/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"    public int getMajor() {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"        return major;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"    public int getMinor() {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"        return minor;","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"    public int getPatch() {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"        return patch;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"        return isEarlyAccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":18,"-":99}},{"path":"src/main/java/seedu/iscam/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core.index;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    public int getZeroBased() {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    public int getOneBased() {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Zaiah0505":10,"-":44}},{"path":"src/main/java/seedu/iscam/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":1,"-":10}},{"path":"src/main/java/seedu/iscam/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause   of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":1,"-":20}},{"path":"src/main/java/seedu/iscam/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.MainApp;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zaiah0505":2,"-":40}},{"path":"src/main/java/seedu/iscam/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":4,"-":33}},{"path":"src/main/java/seedu/iscam/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Config;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Zaiah0505":3,"-":20}},{"path":"src/main/java/seedu/iscam/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":3,"-":82}},{"path":"src/main/java/seedu/iscam/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":7,"-":139}},{"path":"src/main/java/seedu/iscam/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if the {@code sentence} contains the {@code str}.","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"     * Ignores case and search with partial word match.","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"     *       containsIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"     *       containsIgnoreCase(\"ABc def\", \"EF\") \u003d\u003d true","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"     * @param str     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"    public static boolean containsIgnoreCase(String sentence, String str) {","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(str);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        String preppedWord \u003d str.trim();","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"        return Arrays.stream(wordsInPreppedSentence).anyMatch(w -\u003e w.toLowerCase().contains(preppedWord.toLowerCase()));","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"     * Checks whether {@code s} represents a number greater than {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"     * Will return false if {@code s} is larger than {@code Integer.MAX_VALUE}.","lastModifiedDate":"2021-04-05"},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"     * Will ignore NumberFormatException and return true.","lastModifiedDate":"2021-04-05"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"     * NumberFormatException will be handled by {@code isNonZeroUnsignedInteger}.","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"     *","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-04-05"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"    public static boolean isSmallerThanIntegerMaxValue(String s) {","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"        try {","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"            long value \u003d Long.parseLong(s);","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"            return value \u003c Integer.MAX_VALUE;","lastModifiedDate":"2021-04-05"},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-04-05"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"            return true;","lastModifiedDate":"2021-04-05"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":4,"Tomashiwa":25,"frisciliasultan":18,"-":66}},{"path":"src/main/java/seedu/iscam/logic/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.util.Stack;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.Event;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":" * A command history class keeping track of commands, or events, that can be undone or redone.","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"public class CommandHistory {","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    private static Stack\u003cEvent\u003e undoEventStack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    private static Stack\u003cEvent\u003e redoEventStack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     * Checks if undo event stack is empty.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * @return true if empty, else false.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public static boolean isEmptyUndoStack() {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        return undoEventStack.empty();","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * Checks if redo event stack is empty.","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     * @return true if empty, else false.","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    public static boolean isEmptyRedoStack() {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        return redoEventStack.empty();","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"     * Adds new undoable event to the undo event stack.","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"     * @param undoableEvent Undoable event to be added.","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    public static void addToUndoStack(Event undoableEvent) {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"        undoEventStack.push(undoableEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     * Adds new redoable event to the redo event stack.","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"     * @param redoableEvent Redoable event to be added.","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    public static void addToRedoStack(Event redoableEvent) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        redoEventStack.push(redoableEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"    public static void clearRedoStack() {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        redoEventStack.clear();","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"     * Retrieves the latest undoable event in the stack.","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"     * @return Latest undo event.","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"    public static Event getUndoEvent() {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"        return undoEventStack.pop();","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"     * Retrieves the latest redoable event in the stack.","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"     * @return latest redo event.","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"    public static Event getRedoEvent() {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"        return redoEventStack.pop();","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":65}},{"path":"src/main/java/seedu/iscam/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.CommandResult;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ObservableClient;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ObservableMeeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException, EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"     * Returns the ClientBook.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"     * @see seedu.iscam.model.Model#getClientBook()","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    ReadOnlyClientBook getClientBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"     * Returns an unmodifiable view of the filtered list of clients","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"     * Returns the mode of iScam.","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"zoeykobe"},"content":"    ObservableValue\u003cBoolean\u003e getIsClientMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"     * Returns an unmodifiable view of a client to be displayed in detail","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"    ObservableClient getDetailedClient();","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"     * Returns the user prefs\u0027 iscam book file path.","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"    Path getClientBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"     * Returns the MeetingBook.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"     * @see seedu.iscam.model.Model#getMeetingBook()","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"    ReadOnlyMeetingBook getMeetingBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of the filtered list of clients","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of a client to be displayed in detail","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"    ObservableMeeting getDetailedMeeting();","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"     * Returns the user prefs\u0027 iscam book file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zaiah0505":17,"JodyLorah":31,"zoeykobe":8,"Juzzanoob":2,"-":35}},{"path":"src/main/java/seedu/iscam/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.CommandResult;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.RedoCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.BookParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.MeetingBookParser;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.clientcommands.ClientBookParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseIndexException;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ObservableClient;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ObservableMeeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"    private final List\u003cBookParser\u003e bookParsers;","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        this.bookParsers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        bookParsers.add(new ClientBookParser());","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        bookParsers.add(new MeetingBookParser());","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException, EventException {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"        CommandResult commandResult \u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"        // Execute the first command that is successfully parsed","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"        for (BookParser parser : bookParsers) {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"            try {","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"                command \u003d parser.parseCommand(commandText);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"            } catch (ParseFormatException | ParseIndexException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"                throw e;","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"                continue;","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"            commandResult \u003d command.execute(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"            break;","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"        if (!(command instanceof UndoCommand) \u0026\u0026 !(command instanceof RedoCommand)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"            // We clear the redo stack here as the command is a new command, so can\u0027t \"redo\" commands anymore","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"            CommandHistory.clearRedoStack();","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"zoeykobe"},"content":"            storage.saveClientBook(model.getClientBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"            storage.saveMeetingBook(model.getMeetingBook());","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"    public ReadOnlyClientBook getClientBook() {","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"zoeykobe"},"content":"        return model.getClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"    public ReadOnlyMeetingBook getMeetingBook() {","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"        return model.getMeetingBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"zoeykobe"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"zoeykobe"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":"    public ObservableValue\u003cBoolean\u003e getIsClientMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"zoeykobe"},"content":"        return model.getIsClientMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"Zaiah0505"},"content":"    public ObservableClient getDetailedClient() {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"Zaiah0505"},"content":"        return model.getDetailedClient();","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"    public Path getClientBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"zoeykobe"},"content":"        return model.getClientBookFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"JodyLorah"},"content":"    public ObservableMeeting getDetailedMeeting() {","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"        return model.getDetailedMeeting();","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"        return model.getMeetingBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zaiah0505":15,"JodyLorah":35,"zoeykobe":8,"Tomashiwa":22,"Juzzanoob":18,"frisciliasultan":2,"-":56}},{"path":"src/main/java/seedu/iscam/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_IMAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":" * Adds a client to the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"public class AddCommand extends UndoableCommand {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the iScam Book. \\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_PLAN + \"INSURANCE_PLAN] \"","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"            + \"[\" + PREFIX_IMAGE + \"IMAGE_FILE] \"","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG(s)]\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"            + PREFIX_LOCATION + \"01 Singapore Street, #23-45 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"            + PREFIX_PLAN + \"MediShield Life \"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"            + PREFIX_IMAGE + \"john_doe.png \"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the iscam book\";","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"    private final Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    private final Client toAdd;","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"     * Creates an AddCommand to add the specified {@code Client}","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"     * @param client client to be added","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"    public AddCommand(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        toAdd \u003d client;","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"        index \u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"     * Creates an AddCommand to add the specified {@code Client} at the specified {@code Index}","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"     * @param index index to add client into","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"     * @param client client to be added","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"    public AddCommand(Index index, Client client) {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"        toAdd \u003d client;","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"    public Client getClient() {","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"        return toAdd;","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"            model.addClient(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"            model.addClientAtIndex(index, toAdd);","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":13,"JodyLorah":11,"Juzzanoob":33,"frisciliasultan":3,"-":42}},{"path":"src/main/java/seedu/iscam/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_ON;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":" * Adds a meeting to the iscam book.","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"addmeet\";","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add a meeting with a client to the iScam Book. \\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"            + PREFIX_CLIENT + \"CLIENT_NAME \"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_ON + \"DATE TIME \"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG(s)] \\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"            + PREFIX_CLIENT + \"John Doe \"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"            + PREFIX_ON + \"12-10-2021 10:00 \"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"            + PREFIX_LOCATION + \"Starbucks, Tampines Hub \"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_DESCRIPTION + \"Discuss insurance policy \"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_TAG + \"Urgent \"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_TAG + \"Premium\";","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_MEETING_CONFLICT \u003d \"A meeting with this date and time already exists in the \"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"            + \"iscam book \";","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"    private final Meeting toAdd;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    public AddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        toAdd \u003d meeting;","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"        if (model.hasMeeting(toAdd)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_MEETING_CONFLICT);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        model.addMeeting(toAdd);","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this || (other instanceof AddMeetingCommand \u0026\u0026 toAdd.equals(((AddMeetingCommand) other).toAdd));","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":10,"JodyLorah":3,"zoeykobe":1,"Tomashiwa":50,"frisciliasultan":2}},{"path":"src/main/java/seedu/iscam/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":" * Clears the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All clients and meetings have been cleared!\";","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"        model.setClientBook(new ClientBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"        model.setMeetingBook(new MeetingBook());","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":2,"zoeykobe":1,"Tomashiwa":2,"Juzzanoob":1,"frisciliasultan":1,"-":15}},{"path":"src/main/java/seedu/iscam/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":3,"-":17}},{"path":"src/main/java/seedu/iscam/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"     * The application should exit.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":7,"-":68}},{"path":"src/main/java/seedu/iscam/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.CommandHistory;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.Event;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.EventFactory;","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":" * Deletes a client identified using it\u0027s displayed index from the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"public class DeleteCommand extends UndoableCommand {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    private Client clientToDelete;","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    private Index targetIndex;","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a DeleteCommand to delete the client at the specified {@code Index}","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     * @param targetIndex index of client to be deleted","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        clientToDelete \u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a DeleteCommand to delete the specified {@code Client}","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"     * @param client client to be deleted","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    public DeleteCommand(Client client) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        clientToDelete \u003d client;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        targetIndex \u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    public Index getTargetIndex(Model model) {","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"        if (targetIndex \u003d\u003d null) {","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"            targetIndex \u003d model.getIndexOfClient(clientToDelete);","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"        return targetIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"        Client clientToBeDeleted;","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"        if (clientToDelete !\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"            clientToBeDeleted \u003d clientToDelete;","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"        } else if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"            clientToBeDeleted \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"            clientToDelete \u003d clientToBeDeleted;","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"            Event undoableEvent \u003d EventFactory.parse(this, model);","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"            CommandHistory.addToUndoStack(undoableEvent);","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"        } catch (EventException e) {","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"        model.deleteClient(clientToBeDeleted);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete));","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":7,"JodyLorah":5,"Juzzanoob":50,"-":36}},{"path":"src/main/java/seedu/iscam/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":" * Deletes a meeting identified using it\u0027s displayed index from the iscam book\u0027s interface.","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"deletemeet\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"            + \": Delete the meeting identified by the index number used in displayed meeting list.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted Meeting: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"    public DeleteMeetingCommand(Index targetIndex) {","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        model.deleteMeeting(meetingToDelete);","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, meetingToDelete));","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"                || (other instanceof DeleteMeetingCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteMeetingCommand) other).targetIndex));","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":4,"Tomashiwa":48}},{"path":"src/main/java/seedu/iscam/logic/commands/DoneMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":" * Completes an existing meeting in the iscam book.","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"public class DoneMeetingCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"donemeet\";","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"            + \": Mark the meeting identified by the index number, used in displayed meeting list, as complete.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Completed meeting: %1$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_ALREADY_COMPLETE \u003d \"The specified meeting has already been completed.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    private final Index index;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"     * Completes a meeting specified by an index.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"    public DoneMeetingCommand(Index targetIndex) {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"        this.index \u003d targetIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meeting} but is completed.","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    private Meeting completeMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"        return new Meeting(meeting.getClientName(), meeting.getDateTime(), meeting.getLocation(),","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"                meeting.getDescription(), meeting.getTags(), meeting.getStatus().complete());","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"        if (index.getZeroBased() \u003e\u003d meetings.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        Meeting meeting \u003d meetings.get(index.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"        Meeting completedMeeting \u003d completeMeeting(meeting);","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.equals(completedMeeting)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_ALREADY_COMPLETE);","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        model.setMeeting(meeting, completedMeeting);","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, completedMeeting));","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"Tomashiwa":62}},{"path":"src/main/java/seedu/iscam/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_IMAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Image;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":" * Edits the details of an existing client in the iScam book.","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"public class EditCommand extends UndoableCommand {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_PLAN + \"INSURANCE_PLAN] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_IMAGE + \"IMAGE_FILE] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the iScam book.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"     * @param index                of the client in the filtered client list to edit","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"    public EditCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"    public Index getIndex() {","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"Juzzanoob"},"content":"        return index;","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"    public String getCommandWord() {","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Zaiah0505"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Zaiah0505"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Zaiah0505"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Zaiah0505"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Zaiah0505"},"content":"        Phone updatedPhone \u003d editClientDescriptor.getPhone().orElse(clientToEdit.getPhone());","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"        Email updatedEmail \u003d editClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Zaiah0505"},"content":"        Location updatedLocation \u003d editClientDescriptor.getLocation().orElse(clientToEdit.getLocation());","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"        InsurancePlan updatedPlan \u003d editClientDescriptor.getPlan().orElse(clientToEdit.getPlan());","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Zaiah0505"},"content":"        Set\u003cTag\u003e updatedTags \u003d editClientDescriptor.getTags().orElse(clientToEdit.getTags());","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":"        Image updatedImageRes \u003d editClientDescriptor.getImageRes().orElse(clientToEdit.getImageRes());","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"Zaiah0505"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedLocation, updatedPlan, updatedTags,","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"                updatedImageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"        // Causes the ClientDetailFragment to update if was displaying the edited client","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"Zaiah0505"},"content":"        Client displayedClient \u003d model.getDetailedClient().getValue();","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"Zaiah0505"},"content":"        if (clientToEdit.equals(displayedClient)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"Zaiah0505"},"content":"            model.setDetailedClient(editedClient);","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient));","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"Juzzanoob"},"content":"    public EditClientDescriptor getEditClientDescriptor() {","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"Juzzanoob"},"content":"        return editClientDescriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"JodyLorah"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"JodyLorah"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"JodyLorah"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"Juzzanoob"},"content":"        private InsurancePlan plan;","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"zoeykobe"},"content":"        private Location location;","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"Zaiah0505"},"content":"        private Image imageRes;","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"Zaiah0505"},"content":"        public EditClientDescriptor() {","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"JodyLorah"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"Juzzanoob"},"content":"            setPlan(toCopy.plan);","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"zoeykobe"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"Zaiah0505"},"content":"            setImageRes(toCopy.imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"Zaiah0505"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, location, plan, tags, imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"Zaiah0505"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"Zaiah0505"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"Zaiah0505"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"Zaiah0505"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"Zaiah0505"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"Zaiah0505"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"zoeykobe"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"zoeykobe"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"Zaiah0505"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"Zaiah0505"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"Juzzanoob"},"content":"        public Optional\u003cInsurancePlan\u003e getPlan() {","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"Juzzanoob"},"content":"            return Optional.ofNullable(plan);","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"Zaiah0505"},"content":"        public void setPlan(InsurancePlan plan) {","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"Zaiah0505"},"content":"            this.plan \u003d plan;","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"Zaiah0505"},"content":"        public Optional\u003cImage\u003e getImageRes() {","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"Zaiah0505"},"content":"            return Optional.ofNullable(imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"Zaiah0505"},"content":"        public void setImageRes(Image imageRes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"Zaiah0505"},"content":"            this.imageRes \u003d imageRes;","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"JodyLorah"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"JodyLorah"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"Juzzanoob"},"content":"                    \u0026\u0026 getPlan().equals(e.getPlan())","lastModifiedDate":"2021-03-14"},{"lineNumber":272,"author":{"gitId":"zoeykobe"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2021-03-14"},{"lineNumber":273,"author":{"gitId":"Zaiah0505"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"Zaiah0505"},"content":"                    \u0026\u0026 getImageRes().equals(e.getImageRes());","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Zaiah0505":68,"JodyLorah":25,"zoeykobe":6,"Tomashiwa":3,"Juzzanoob":26,"frisciliasultan":4,"-":145}},{"path":"src/main/java/seedu/iscam/logic/commands/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_ON;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.model.meeting.CompletionStatus.ARGUMENT_COMPLETE;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.model.meeting.CompletionStatus.ARGUMENT_INCOMPLETE;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.CompletionStatus;","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Description;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":" * Edits the details of an existing Meeting in the iScam book.","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"editmeet\";","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"            + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_CLIENT + \"CLIENT_NAME] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"            + \"[\" + PREFIX_ON + \"DATE_TIME] \"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG(s)] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS (\" + ARGUMENT_COMPLETE + \"/\" + ARGUMENT_INCOMPLETE + \")]\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"            + PREFIX_LOCATION + \"Macdonald, Bedok \"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_DESCRIPTION + \"Client\u0027s family will be coming along\";","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"No changes found in any field.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_CONFLICT \u003d \"There is another meeting with the same date and time, consider \"","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"            + \"changing to another time.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_NOT_ALLOWED \u003d \"This meeting was already completed, no modification can be made \"","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"            + \"unless it is set back to incomplete.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_ALREADY_COMPLETE \u003d \"This meeting was already completed, it cannot be complete \"","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"            + \"again.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"    private final Index index;","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"     * Edits a Meeting specified by an index and their edited fields.","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"    public EditMeetingCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"    private static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"        Name updatedClientName \u003d editMeetingDescriptor.getClientName().orElse(meetingToEdit.getClientName());","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"        DateTime updatedDateTime \u003d editMeetingDescriptor.getDateTime().orElse(meetingToEdit.getDateTime());","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"        Location updatedLocation \u003d editMeetingDescriptor.getAddress().orElse(meetingToEdit.getLocation());","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Zaiah0505"},"content":"        Description updatedDescription \u003d editMeetingDescriptor.getDescription().orElse(meetingToEdit.getDescription());","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Zaiah0505"},"content":"        Set\u003cTag\u003e updatedTags \u003d editMeetingDescriptor.getTags().orElse(meetingToEdit.getTags());","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Tomashiwa"},"content":"        CompletionStatus updatedStatus \u003d editMeetingDescriptor.getStatus().orElse(meetingToEdit.getStatus());","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Tomashiwa"},"content":"        return new Meeting(updatedClientName, updatedDateTime, updatedLocation, updatedDescription, updatedTags,","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"Tomashiwa"},"content":"                updatedStatus);","lastModifiedDate":"2021-04-04"},{"lineNumber":91,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"Tomashiwa"},"content":"        if (index.getZeroBased() \u003e\u003d meetings.size()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"        Meeting meeting \u003d meetings.get(index.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"Tomashiwa"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meeting, editMeetingDescriptor);","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"Tomashiwa"},"content":"        Optional\u003cCompletionStatus\u003e editedStatus \u003d editMeetingDescriptor.getStatus();","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.getStatus().isComplete() \u0026\u0026 editedStatus.isEmpty()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_NOT_ALLOWED);","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"Tomashiwa"},"content":"        } else if (meeting.getStatus().isComplete() \u0026\u0026 editedStatus.get().isComplete()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":109,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_ALREADY_COMPLETE);","lastModifiedDate":"2021-04-05"},{"lineNumber":110,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":111,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.equals(editedMeeting)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"Tomashiwa"},"content":"        if (model.hasConflictingMeetingWith(editedMeeting, meeting)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":117,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_CONFLICT);","lastModifiedDate":"2021-04-04"},{"lineNumber":118,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":119,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":120,"author":{"gitId":"Tomashiwa"},"content":"        model.setMeeting(meeting, editedMeeting);","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"Tomashiwa"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting));","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"Tomashiwa"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the corresponding field","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"Tomashiwa"},"content":"     * value of the meeting.","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":129,"author":{"gitId":"Tomashiwa"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"Tomashiwa"},"content":"        private Name clientName;","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"Tomashiwa"},"content":"        private DateTime dateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":132,"author":{"gitId":"zoeykobe"},"content":"        private Location location;","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"Tomashiwa"},"content":"        private Description description;","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"Tomashiwa"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"Tomashiwa"},"content":"        private CompletionStatus status;","lastModifiedDate":"2021-04-04"},{"lineNumber":136,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"Zaiah0505"},"content":"        public EditMeetingDescriptor() {","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"Tomashiwa"},"content":"        /**","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"Tomashiwa"},"content":"         * Copy constructor to copy field values from previous version of the descriptor.","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"Tomashiwa"},"content":"         */","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"Tomashiwa"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"Tomashiwa"},"content":"            setClientName(toCopy.clientName);","lastModifiedDate":"2021-03-21"},{"lineNumber":145,"author":{"gitId":"Tomashiwa"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"zoeykobe"},"content":"            setAddress(toCopy.location);","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"Tomashiwa"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"Tomashiwa"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"Tomashiwa"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2021-04-04"},{"lineNumber":150,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"Tomashiwa"},"content":"        /**","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"Tomashiwa"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"Tomashiwa"},"content":"         */","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"Tomashiwa"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"Tomashiwa"},"content":"            return CollectionUtil.isAnyNonNull(clientName, dateTime, location, description, tags, status);","lastModifiedDate":"2021-04-04"},{"lineNumber":157,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"Tomashiwa"},"content":"        public Optional\u003cName\u003e getClientName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"Tomashiwa"},"content":"            return Optional.ofNullable(clientName);","lastModifiedDate":"2021-03-21"},{"lineNumber":161,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":162,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"Tomashiwa"},"content":"        public void setClientName(Name clientName) {","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"Tomashiwa"},"content":"            this.clientName \u003d clientName;","lastModifiedDate":"2021-03-21"},{"lineNumber":165,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"Tomashiwa"},"content":"        public Optional\u003cDateTime\u003e getDateTime() {","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"Tomashiwa"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"Tomashiwa"},"content":"        public void setDateTime(DateTime dateTime) {","lastModifiedDate":"2021-03-21"},{"lineNumber":172,"author":{"gitId":"Zaiah0505"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":174,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":175,"author":{"gitId":"zoeykobe"},"content":"        public Optional\u003cLocation\u003e getAddress() {","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"zoeykobe"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":179,"author":{"gitId":"Zaiah0505"},"content":"        public void setAddress(Location location) {","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"Zaiah0505"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"Tomashiwa"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"Tomashiwa"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":186,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":187,"author":{"gitId":"Zaiah0505"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"Zaiah0505"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":190,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"Tomashiwa"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-09"},{"lineNumber":192,"author":{"gitId":"Tomashiwa"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-09"},{"lineNumber":193,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":194,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":195,"author":{"gitId":"Zaiah0505"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"Zaiah0505"},"content":"            this.tags \u003d tags !\u003d null ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"Tomashiwa"},"content":"        public Optional\u003cCompletionStatus\u003e getStatus() {","lastModifiedDate":"2021-04-04"},{"lineNumber":200,"author":{"gitId":"Tomashiwa"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2021-04-04"},{"lineNumber":201,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":203,"author":{"gitId":"Tomashiwa"},"content":"        public void setStatus(CompletionStatus status) {","lastModifiedDate":"2021-04-04"},{"lineNumber":204,"author":{"gitId":"Tomashiwa"},"content":"            this.status \u003d status;","lastModifiedDate":"2021-04-04"},{"lineNumber":205,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":206,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":207,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":208,"author":{"gitId":"Tomashiwa"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":209,"author":{"gitId":"Tomashiwa"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":210,"author":{"gitId":"Tomashiwa"},"content":"                return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":211,"author":{"gitId":"Tomashiwa"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":212,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"Tomashiwa"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":214,"author":{"gitId":"Tomashiwa"},"content":"                return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":215,"author":{"gitId":"Tomashiwa"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":216,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":217,"author":{"gitId":"Tomashiwa"},"content":"            EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":218,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":219,"author":{"gitId":"Tomashiwa"},"content":"            return getClientName().equals(e.getClientName())","lastModifiedDate":"2021-03-21"},{"lineNumber":220,"author":{"gitId":"Tomashiwa"},"content":"                    \u0026\u0026 getDateTime().equals(e.getDateTime())","lastModifiedDate":"2021-03-09"},{"lineNumber":221,"author":{"gitId":"Tomashiwa"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-09"},{"lineNumber":222,"author":{"gitId":"Tomashiwa"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-03-09"},{"lineNumber":223,"author":{"gitId":"Tomashiwa"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-22"},{"lineNumber":224,"author":{"gitId":"Tomashiwa"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus());","lastModifiedDate":"2021-04-04"},{"lineNumber":225,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":226,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":227,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":31,"zoeykobe":5,"Tomashiwa":187,"frisciliasultan":4}},{"path":"src/main/java/seedu/iscam/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Client Book as requested ...\";","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":1,"-":16}},{"path":"src/main/java/seedu/iscam/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":" * Finds and lists all clients in iscam book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":3,"Tomashiwa":1,"-":34}},{"path":"src/main/java/seedu/iscam/logic/commands/FindMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":" * Finds and lists all clients in iscam book which details contain any of the argument keywords.","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":" * Keyword matching is case insensitive and can be partial-word.","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"public class FindMeetingsCommand extends Command {","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"findmeet\";","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all meetings which details contain any of the \"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"            + \"specified keywords (whole word, case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            + \"Example: \" + COMMAND_WORD + \" Shawn 25-04-2023 10:00PM\";","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    private final MeetingContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"    public FindMeetingsCommand(MeetingContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    private String stringifyMeetings(ObservableList\u003cMeeting\u003e meetings) {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"        for (int i \u003d 0; i \u003c meetings.size(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"            str +\u003d meetings.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"        return str;","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"                model.getFilteredMeetingList().size()) + \"\\n\" + stringifyMeetings(model.getFilteredMeetingList()));","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this || (other instanceof FindMeetingsCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 predicate.equals(((FindMeetingsCommand) other).predicate));","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Tomashiwa":51}},{"path":"src/main/java/seedu/iscam/logic/commands/FindPlansCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.client.PlanContainsKeywordsPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":" * Finds and lists all clients in iscam book whose insurance plan contains any of the argument keywords.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"public class FindPlansCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    public static final String COMMAND_WORD \u003d \"findplan\";","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose insurance plan contain any of \"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"            + \"Example: \" + COMMAND_WORD + \" MediShield Life\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    private final PlanContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    public FindPlansCommand(PlanContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"                || (other instanceof FindPlansCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"                \u0026\u0026 predicate.equals(((FindPlansCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"frisciliasultan":41}},{"path":"src/main/java/seedu/iscam/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":2,"-":19}},{"path":"src/main/java/seedu/iscam/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":" * Lists all clients in the iscam book to the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_EMPTY_LIST \u003d \"There is no client in the iScam book.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"        model.setClientMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        ObservableList\u003cClient\u003e clients \u003d model.getFilteredClientList();","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        if (clients.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"            throw new CommandException(MESSAGE_EMPTY_LIST);","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":2,"zoeykobe":1,"frisciliasultan":9,"-":17}},{"path":"src/main/java/seedu/iscam/logic/commands/ListMeetingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":" * Lists all meetings in the iscam book to the user.","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"public class ListMeetingsCommand extends Command {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"listmeet\";","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all meetings.\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_EMPTY_LIST \u003d \"There is no meeting in the iScam book.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    private String stringifyMeetings(ObservableList\u003cMeeting\u003e meetings) {","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"        for (int i \u003d 0; i \u003c meetings.size(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"            str +\u003d meetings.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"        return str;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"        model.setMeetingMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"        if (meetings.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_EMPTY_LIST);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"\\n\" + stringifyMeetings(meetings));","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"zoeykobe":1,"Tomashiwa":38,"frisciliasultan":1}},{"path":"src/main/java/seedu/iscam/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.CommandHistory;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.Event;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":" * Redo the most recent undone command.","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"Redo successful!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    public static final String FAILURE_MESSAGE \u003d \"No commands to redo.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        if (CommandHistory.isEmptyRedoStack()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"            throw new CommandException(FAILURE_MESSAGE);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        Event redoableEvent \u003d CommandHistory.getRedoEvent();","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"        CommandHistory.addToUndoStack(redoableEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        UndoableCommand commandToUndo \u003d redoableEvent.redo();","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        return commandToUndo.execute(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":33}},{"path":"src/main/java/seedu/iscam/logic/commands/RelocateMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":" * Relocates an existing meeting in the iscam book.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"public class RelocateMeetingCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"relocate\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            + \": Relocate the meeting identified by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_LOCATION + \"LOCATION\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_LOCATION + \" Starbucks, Bedok North\\n\";","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Relocated meeting: %1$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_DUPLICATE_LOCATION \u003d \"The new location must be different from the one in the \"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"            + \"iscam book\";","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_ALREADY_COMPLETE \u003d \"This meeting was already completed, it cannot be relocated.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"    private final Index index;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"    private final Location location;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"     * Relocates the location of a meeting specified by an index.","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"    public RelocateMeetingCommand(Index index, Location location) {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    private Meeting relocateMeeting(Meeting meeting, Location newLocation) {","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        return new Meeting(meeting.getClientName(), meeting.getDateTime(), newLocation,","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"                meeting.getDescription(), meeting.getTags(), meeting.getStatus());","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"        if (index.getZeroBased() \u003e\u003d meetings.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        Meeting meeting \u003d meetings.get(index.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.getStatus().isComplete()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_ALREADY_COMPLETE);","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"        Meeting relocatedMeeting \u003d relocateMeeting(meeting, location);","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.equals(relocatedMeeting)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_LOCATION);","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"        model.setMeeting(meeting, relocatedMeeting);","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, relocatedMeeting));","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"Tomashiwa":73}},{"path":"src/main/java/seedu/iscam/logic/commands/RescheduleMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_ON;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":" * Reschedules the date and time of a meeting in the iscam book.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"public class RescheduleMeetingCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final String COMMAND_WORD \u003d \"reschedule\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            + \": Reschedule the date and time for a meeting identified by the index number used in displayed meeting \"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"            + \"list. \\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_ON + \"DATE-TIME (must not be in the past)\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"            + PREFIX_ON + \"12-10-2020 16:30\\n\";","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Rescheduled meeting: %1$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_DUPLICATE_DATETIME \u003d \"The new date and time must be different from the \"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"            + \"original.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_CONFLICT \u003d \"There is another meeting with the same date and time, consider \"","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"            + \"scheduling to another time.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_ALREADY_COMPLETE \u003d \"This meeting was already completed, it cannot be \"","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"            + \"rescheduled.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"    private final Index index;","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    private final DateTime dateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"     * Creates a RescheduleMeetingCommand to change the {@code DateTime} for a meeting specified by {@code Index}","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"    public RescheduleMeetingCommand(Index index, DateTime dateTime) {","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"    private Meeting rescheduleMeeting(Meeting meeting, DateTime newDateTime) {","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"        return new Meeting(meeting.getClientName(), newDateTime, meeting.getLocation(),","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"                meeting.getDescription(), meeting.getTags(), meeting.getStatus());","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        ObservableList\u003cMeeting\u003e meetings \u003d model.getFilteredMeetingList();","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"        if (index.getZeroBased() \u003e\u003d meetings.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"        Meeting meeting \u003d meetings.get(index.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"        Meeting rescheduledMeeting \u003d rescheduleMeeting(meeting, dateTime);","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.getStatus().isComplete()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_ALREADY_COMPLETE);","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.equals(rescheduledMeeting)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DATETIME);","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"        if (model.hasConflictingMeetingWith(rescheduledMeeting)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"            throw new CommandException(MESSAGE_CONFLICT);","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"        model.setMeeting(meeting, rescheduledMeeting);","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"Tomashiwa"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, rescheduledMeeting));","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"Tomashiwa":83}},{"path":"src/main/java/seedu/iscam/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":" * Shows a client identified using it\u0027s displayed index from the iscam book.","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"            + \": Shows the client identified by the index number used in the displayed client list \"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"            + \"in the details fragment below\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    public static final String MESSAGE_SHOW_CLIENT_SUCCESS \u003d \"Showing Client: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    public ShowCommand(Index targetIndex) {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"        if (!model.getIsClientMode().getValue()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"            model.setClientMode();","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"        Client clientToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"        model.setDetailedClient(clientToShow);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"        model.updateFilteredMeetingList(meeting -\u003e meeting.getClientName().equals(clientToShow.getName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"        return new CommandResult(String.format(MESSAGE_SHOW_CLIENT_SUCCESS, clientToShow));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"                || (other instanceof ShowCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"                \u0026\u0026 targetIndex.equals(((ShowCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Zaiah0505":60}},{"path":"src/main/java/seedu/iscam/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.CommandHistory;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.Event;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":" * Undo the most recent Undoable command.","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo successful!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No commands to undo.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        if (CommandHistory.isEmptyUndoStack()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        Event undoableEvent \u003d CommandHistory.getUndoEvent();","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"        CommandHistory.addToRedoStack(undoableEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        UndoableCommand commandToUndo \u003d undoableEvent.undo();","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        return commandToUndo.execute(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":33}},{"path":"src/main/java/seedu/iscam/logic/commands/UndoableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":" * Represents a command then can be undone.","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"public abstract class UndoableCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"     * Gets the command word of the undoable command.","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"     * @return command word of the undoable command.","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    public abstract String getCommandWord();","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":12}},{"path":"src/main/java/seedu/iscam/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Zaiah0505":1,"-":16}},{"path":"src/main/java/seedu/iscam/logic/events/AddClientEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoableCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":" * An event representing an \u0027add contact\u0027 command","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"public class AddClientEvent implements Event {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    private final Client clientAdded;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    public AddClientEvent(Client clientAdded) {","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"        this.clientAdded \u003d clientAdded;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    public UndoableCommand undo() {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        return new DeleteCommand(clientAdded);","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"    public UndoableCommand redo() {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        return new AddCommand(clientAdded);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":26}},{"path":"src/main/java/seedu/iscam/logic/events/AddEventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":" * Class to create corresponding add Events according to the add Commands input by user.","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"public class AddEventFactory {","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    public static final String MESSAGE_NOT_UNDOABLE \u003d \"The following command \\\u0027%1$s\\\u0027 \\\u0027%2$s\\\u0027 is not undoable\";","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"     * A static method to generate the add events based on the add commands parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     * @param command Add Command to be parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * @return Corresponding event representing the add command parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * @throws EventException","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    public static Event parse(AddCommand command) throws EventException {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        String commandWord \u003d command.getCommandWord();","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"        switch(commandWord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"        case (AddCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"            AddCommand tempCommand \u003d command;","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"            return generateAddClientEvent(tempCommand.getClient());","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        /*","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        case (AddMeetingCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"            AddMeetingCommand tempCommand \u003d (AddMeetingCommand) command;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            return generateAddMeetingEvent(tempCommand.getToAdd());","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        */","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"        default:","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"            throw new EventException(","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"                    String.format(MESSAGE_NOT_UNDOABLE, command.getCommandWord())","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"            );","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"    public static AddClientEvent generateAddClientEvent(Client clientAdded) {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"        return new AddClientEvent(clientAdded);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    /*","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"    public static AddMeetingEvent generateAddMeetingEvent(Meeting meetingAdded) {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        return new AddMeetingEvent(meetingAdded);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    */","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":50}},{"path":"src/main/java/seedu/iscam/logic/events/ClearCommandEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"/*","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoableCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.Event;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"public class ClearCommandEvent implements Event {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    private final ReadOnlyMeetingBook prevMeetingBook;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    private final ReadOnlyUserPrefs prevUserPrefs;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    private final ReadOnlyClientBook prevClientBook;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    public ClearCommandEvent(Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"        prevMeetingBook \u003d model.getMeetingBook();","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"        prevUserPrefs \u003d model.getUserPrefs();","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        prevClientBook \u003d model.getClientBook();","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    public UndoableCommand undo() {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"        return ;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"*/","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"JodyLorah":1,"Juzzanoob":26}},{"path":"src/main/java/seedu/iscam/logic/events/DeleteClientEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoableCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":" * An event representing a \u0027delete client\u0027 command.","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"public class DeleteClientEvent implements Event {","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    private final Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    private final Client deletedClient;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * Creates a DeleteClientEvent wrapper that wraps around a DeleteClient Command deleting the client at the","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * specified {@code Index}","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     * @param index index of client to be deleted","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * @param model model of app that client is to be deleted from","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    public DeleteClientEvent(Index index, Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        this.deletedClient \u003d generateDeletedClient(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"    public UndoableCommand undo() {","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        return new AddCommand(index, deletedClient);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    public UndoableCommand redo() {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"     * Retrieves the Client object that is going to be deleted.","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"     * @param model Current model in the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     * @return Client about to be deleted.","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    private Client generateDeletedClient(Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        Client clientToDelete;","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        assert (index.getZeroBased() \u003c lastShownList.size());","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        clientToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        return clientToDelete;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":50}},{"path":"src/main/java/seedu/iscam/logic/events/DeleteEventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":" * Class to create corresponding delete Events according to the delete Commands input by user.","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"public class DeleteEventFactory {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    public static final String MESSAGE_NOT_UNDOABLE \u003d \"The following command \\\u0027%1$s\\\u0027 \\\u0027%2$s\\\u0027 is not undoable\";","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     * A static method to generate the delete events based on the delete commands parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * @param command Delete Command to be parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * @return Corresponding event representing the delete command parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     * @throws EventException","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    public static Event parse(DeleteCommand command, Model model) throws EventException {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"        String commandWord \u003d command.getCommandWord();","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"        switch(commandWord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"        case (DeleteCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"            DeleteCommand tempCommand \u003d command;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"            return generateDeleteClientEvent(tempCommand.getTargetIndex(model), model);","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        /*","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"        case (DeleteMeetingCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            DeleteMeetingCommand tempCommand \u003d (DeleteMeetingCommand) command;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"            return generateDeleteMeetingEvent(tempCommand.getTargetIndex(), model);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        */","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"        default:","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"            throw new EventException(","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"                    String.format(MESSAGE_NOT_UNDOABLE, command.getCommandWord())","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"            );","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    public static DeleteClientEvent generateDeleteClientEvent(Index index, Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"        return new DeleteClientEvent(index, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"    /*","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"    public static DeleteMeetingEvent generateDeleteMeetingEvent(Index index, Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"        return new DeleteMeetingEvent(index, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    */","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":50}},{"path":"src/main/java/seedu/iscam/logic/events/EditClientEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.EditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoableCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":" * An event representing a \u0027edit client\u0027s details\u0027 command.","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"public class EditClientEvent implements Event {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    private final Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    private final EditCommand.EditClientDescriptor editInfo;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"    private final EditCommand.EditClientDescriptor reversedEditInfo;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * Creates an EditClientEvent wrapper that wraps around an EditCommand editing the client","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * at the specified {@code Index}","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     * @param index index of client to be edited","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * @param editInfo information that client should have after being edited","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     * @param model model of app that client is to be deleted from","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    public EditClientEvent(Index index, EditCommand.EditClientDescriptor editInfo, Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        this.editInfo \u003d editInfo;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"        this.reversedEditInfo \u003d generateReversedEditInfo(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    public UndoableCommand undo() {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"        return new EditCommand(index, reversedEditInfo);","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"    public UndoableCommand redo() {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"        return new EditCommand(index, editInfo);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     * A method to construct an EditClientDescriptor based on the current Client to edit in the model.","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"     * @param model Current model in the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"     * @return the EditClientDescriptor containing information of the original Client to be edited.","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"    private EditCommand.EditClientDescriptor generateReversedEditInfo(Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        EditCommand.EditClientDescriptor result \u003d new EditCommand.EditClientDescriptor();","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        assert(index.getZeroBased() \u003c lastShownList.size());","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"        Client originalClient \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"        result.setName(originalClient.getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"        result.setPhone(originalClient.getPhone());","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"        result.setEmail(originalClient.getEmail());","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"        result.setLocation(originalClient.getLocation());","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"        if (originalClient.getPlan() !\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"            result.setPlan(originalClient.getPlan());","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"            result.setPlan(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"        if (originalClient.getImageRes() !\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"            result.setImageRes(originalClient.getImageRes());","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"            result.setImageRes(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"        result.setTags(originalClient.getTags());","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"Juzzanoob"},"content":"        return result;","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":74}},{"path":"src/main/java/seedu/iscam/logic/events/EditEventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.EditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":" * Class to create corresponding edit Events according to the edit Commands input by user.","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"public class EditEventFactory {","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    public static final String MESSAGE_NOT_UNDOABLE \u003d \"The following command \\\u0027%1$s\\\u0027 \\\u0027%2$s\\\u0027 is not undoable\";","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * A static method to generate the edit events based on the edit commands parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * @param command Edit Command to be parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     * @param model Current model of the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * @return Corresponding event representing the edit command parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * @throws EventException","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    public static Event parse(EditCommand command, Model model) throws EventException {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"        String commandWord \u003d command.getCommandWord();","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"        switch(commandWord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"        case (EditCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"            EditCommand tempCommand \u003d (EditCommand) command;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"            return generateEditClientEvent(tempCommand.getIndex(),","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"                    tempCommand.getEditClientDescriptor(), model);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        /*","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        case (EditMeeting.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"            EditMeeting tempCommand \u003d (EditMeeting) command;","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"            return generateEditMeetingEvent(tempCommand.getIndex(),","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"                tempCommand.getEditMeetingDescriptor(), model);","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"        default:","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"            throw new EventException(","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"                    String.format(MESSAGE_NOT_UNDOABLE, command.getCommandWord())","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"            );","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    public static EditClientEvent generateEditClientEvent(","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"            Index index, EditClientDescriptor editInfo, Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        return new EditClientEvent(index, editInfo, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    /*","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    public static EditMeetingEvent generateEditMeetingEvent() {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"        return ;","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"    */","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":54}},{"path":"src/main/java/seedu/iscam/logic/events/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoableCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":" * Represents events that can be undone.","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"public interface Event {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"     * A method to undo the effects of the event.","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"     * @return Returns a CommandResult to undo the effects of the event.","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"    UndoableCommand undo();","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * A method to redo the effects of the event undone.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     * @return Returns a CommandResult to redo the effects of the event that was previously undone.","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"    UndoableCommand redo();","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":20}},{"path":"src/main/java/seedu/iscam/logic/events/EventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.EditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoableCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":" * Class to create corresponding events that undo the current command from the user\u0027s input.","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"public class EventFactory {","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    private static final String MESSAGE_COMMAND_ERROR \u003d \"\\\u0027%1$s\\\u0027 command is not undoable.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"     * A static method to parse the command and generate the corresponding event.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"     * @param command Command to be parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"     * @param model Current model of the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"     * @return Corresponding event for the command parsed.","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * @throws EventException","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    public static Event parse(UndoableCommand command, Model model) throws EventException {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"        String commandWord \u003d command.getCommandWord();","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"        case (AddCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"            return AddEventFactory.parse((AddCommand) command);","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"        case (DeleteCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"            return DeleteEventFactory.parse((DeleteCommand) command, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        case (EditCommand.COMMAND_WORD):","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"            return EditEventFactory.parse((EditCommand) command, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"        default:","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"            throw new EventException(String.format(MESSAGE_COMMAND_ERROR, commandWord));","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":46}},{"path":"src/main/java/seedu/iscam/logic/events/exceptions/EventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.logic.events.exceptions;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":" * Represents an error which occurs during creation of a {@link Event}.","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"public class EventException extends Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    public EventException(String message) {","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"        super(message);","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    public EventException(String message, Throwable cause) {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"        super(message, cause);","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Juzzanoob":17}},{"path":"src/main/java/seedu/iscam/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"     **/","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Zaiah0505":4,"-":58}},{"path":"src/main/java/seedu/iscam/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"Zaiah0505"},"content":"        private int startPosition;","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Zaiah0505":3,"-":145}},{"path":"src/main/java/seedu/iscam/logic/parser/BookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"public interface BookParser {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"    Command parseCommand(String userInput) throws ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"Tomashiwa":8}},{"path":"src/main/java/seedu/iscam/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"    public static final Prefix PREFIX_PLAN \u003d new Prefix(\"ip/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"    public static final Prefix PREFIX_CLIENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"    public static final Prefix PREFIX_ON \u003d new Prefix(\"on/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"    public static final Prefix PREFIX_IMAGE \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Zaiah0505":2,"Tomashiwa":5,"Juzzanoob":1,"-":12}},{"path":"src/main/java/seedu/iscam/logic/parser/MeetingBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.AddMeetingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.Command;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.DoneMeetingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.EditMeetingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.FindMeetingsCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.ListMeetingsCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.RelocateMeetingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.commands.RescheduleMeetingCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.meetingcommands.AddMeetingCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.meetingcommands.DeleteMeetingCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.meetingcommands.DoneMeetingCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.meetingcommands.EditMeetingCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.meetingcommands.FindMeetingsCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.meetingcommands.RelocateMeetingCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.meetingcommands.RescheduleMeetingCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":" * Parses user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"public class MeetingBookParser implements BookParser {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        case EditMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"            return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"        case FindMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"            return new FindMeetingsCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        case ListMeetingsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"            return new ListMeetingsCommand();","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"        case RescheduleMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"            return new RescheduleMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"        case RelocateMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"            return new RelocateMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"        case DoneMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"            return new DoneMeetingCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"        default:","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"JodyLorah":83,"Tomashiwa":3}},{"path":"src/main/java/seedu/iscam/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Zaiah0505":4,"-":13}},{"path":"src/main/java/seedu/iscam/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.model.meeting.CompletionStatus.ARGUMENT_COMPLETE;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.model.meeting.CompletionStatus.ARGUMENT_INCOMPLETE;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseIndexException;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Image;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.CompletionStatus;","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Description;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index must be a non-zero positive integer.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_EMPTY_INDEX \u003d \"Index field is empty.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MESSAGE_INDEX_TOO_LARGE \u003d \"Index specified is too big! Please input a \"","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"            + \"number smaller than 2147483647.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"     * @throws ParseIndexException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"     * @throws ParseIndexException if the specified index is bigger than the maximum holding value of an int.","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"     * @throws ParseException if {@code oneBasedIndex} is an empty string (index field is empty).","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"        // Remove the trailing white spaces at the beginning and ending of oneBasedIndex.","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        // Split the trimmedIndex by space to detect the presence of additional parameters.","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"        String[] params \u003d trimmedIndex.split(\" \", 2);","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"        if (trimmedIndex.length() \u003d\u003d 0) {","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"            // Throw ParseException if oneBasedIndex is an empty string.","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseException(MESSAGE_EMPTY_INDEX);","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        } else if (params.length \u003e 1) {","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"            // Throw ParseFormatException if there are parameters more than required parameters.","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        } else if (!StringUtil.isSmallerThanIntegerMaxValue(trimmedIndex)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"            // Throw ParseIndexException if the index specified is larger than Integer.MAX_VALUE.","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseIndexException(MESSAGE_INDEX_TOO_LARGE);","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"        } else if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"            // Throw ParseIndexException if the index is invalid.","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseIndexException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Name.MESSAGE_TYPE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"        if (!Name.isValidLength(trimmedName)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Name.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"        if (!Phone.isValidPhoneLength(trimmedPhone)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Phone.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"        if (!Phone.isValidNumbersOnly(trimmedPhone)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Phone.MESSAGE_INPUT_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"        if (!Phone.isValidPhoneNumber(trimmedPhone)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Phone.MESSAGE_STARTING_DIGIT_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2021-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2021-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"zoeykobe"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"zoeykobe"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"zoeykobe"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"zoeykobe"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"        if (!Location.isValidLength(trimmedLocation)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Location.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"zoeykobe"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"        if (!Email.isValidLength(trimmedEmail)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Email.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":145,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"Juzzanoob"},"content":"     * Parses a {@code String plan} into an {@code InsurancePlan}.","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"Juzzanoob"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"Juzzanoob"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"Juzzanoob"},"content":"     * @throws ParseException if the given {@code plan} is invalid.","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"Juzzanoob"},"content":"    public static InsurancePlan parsePlan(String plan) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(plan);","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"Juzzanoob"},"content":"        String trimmedPlan \u003d plan.trim();","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"Juzzanoob"},"content":"        if (!InsurancePlan.isValidPlan(trimmedPlan)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(InsurancePlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"JodyLorah"},"content":"        if (!InsurancePlan.isValidLength(trimmedPlan)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":162,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(InsurancePlan.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":163,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":164,"author":{"gitId":"Juzzanoob"},"content":"        return new InsurancePlan(trimmedPlan);","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"JodyLorah"},"content":"        if (!Tag.isValidLength(trimmedTag)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":180,"author":{"gitId":"JodyLorah"},"content":"            throw new ParseFormatException(Tag.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":181,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":197,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":198,"author":{"gitId":"Tomashiwa"},"content":"     * Parses {@code String desc} into a {@code Description}.","lastModifiedDate":"2021-03-21"},{"lineNumber":199,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":200,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the given {@code desc} is invalid.","lastModifiedDate":"2021-03-21"},{"lineNumber":201,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":202,"author":{"gitId":"Tomashiwa"},"content":"    public static Description parseDescription(String desc) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":203,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(desc);","lastModifiedDate":"2021-03-21"},{"lineNumber":204,"author":{"gitId":"Tomashiwa"},"content":"        if (!Description.isValidDescription(desc)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":205,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":207,"author":{"gitId":"Tomashiwa"},"content":"        return new Description(desc);","lastModifiedDate":"2021-03-21"},{"lineNumber":208,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":209,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":210,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":211,"author":{"gitId":"Tomashiwa"},"content":"     * Parses {@code String dateTimeStr} into a {@code DateTime}.","lastModifiedDate":"2021-03-21"},{"lineNumber":212,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":213,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the given {@code dateTimeStr} is invalid.","lastModifiedDate":"2021-03-21"},{"lineNumber":214,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":215,"author":{"gitId":"Tomashiwa"},"content":"    public static DateTime parseDateTime(String dateTimeStr) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":216,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(dateTimeStr);","lastModifiedDate":"2021-03-21"},{"lineNumber":217,"author":{"gitId":"Tomashiwa"},"content":"        if (!DateTime.isStringValidFormat(dateTimeStr)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":218,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(DateTime.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":219,"author":{"gitId":"Tomashiwa"},"content":"        } else if (!DateTime.isStringValidDateTime(dateTimeStr)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":220,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(DateTime.MESSAGE_IN_PAST);","lastModifiedDate":"2021-04-05"},{"lineNumber":221,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":222,"author":{"gitId":"Tomashiwa"},"content":"        return new DateTime(dateTimeStr);","lastModifiedDate":"2021-03-21"},{"lineNumber":223,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":224,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":226,"author":{"gitId":"Tomashiwa"},"content":"     * Parses {@code String status} into a CompletionStatus.","lastModifiedDate":"2021-04-04"},{"lineNumber":227,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":228,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if given {@code status} is not compliant to what is declared in EditMeetingCommand","lastModifiedDate":"2021-04-04"},{"lineNumber":229,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"Tomashiwa"},"content":"    public static CompletionStatus parseCompletionStatus(String status) throws ParseException {","lastModifiedDate":"2021-04-04"},{"lineNumber":231,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-04-04"},{"lineNumber":232,"author":{"gitId":"Tomashiwa"},"content":"        if (!status.equals(ARGUMENT_COMPLETE)","lastModifiedDate":"2021-04-04"},{"lineNumber":233,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 !status.equals(ARGUMENT_INCOMPLETE)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":234,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(CompletionStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-04"},{"lineNumber":235,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":236,"author":{"gitId":"Tomashiwa"},"content":"        return new CompletionStatus(status);","lastModifiedDate":"2021-04-04"},{"lineNumber":237,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":238,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"Zaiah0505"},"content":"     * Parses {@code String imageRes} into a boolean.","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"Zaiah0505"},"content":"    public static Image parseImageRes(String imageRes) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"Zaiah0505"},"content":"        requireNonNull(imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"Zaiah0505"},"content":"        if (!Image.isValidImageRes(imageRes)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(Image.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"Zaiah0505"},"content":"        return new Image(imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Zaiah0505":18,"JodyLorah":24,"zoeykobe":5,"Tomashiwa":51,"Juzzanoob":15,"frisciliasultan":40,"-":96}},{"path":"src/main/java/seedu/iscam/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Zaiah0505":1,"-":38}},{"path":"src/main/java/seedu/iscam/logic/parser/ShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ShowCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":" * Parses input arguments and creates a new ShowCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"     * @throws ParseException if the user does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"    public ShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"            return new ShowCommand(index);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Zaiah0505":29,"Tomashiwa":1}},{"path":"src/main/java/seedu/iscam/logic/parser/clientcommands/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.clientcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_IMAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Prefix;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Image;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION, PREFIX_PLAN,","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"                        PREFIX_TAG, PREFIX_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LOCATION, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"        InsurancePlan plan \u003d ParserUtil.parsePlan(argMultimap.getValue(PREFIX_PLAN).orElse(\"No plans yet\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"        // TODO: Set a better place to refer default.png to","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"        Image imageRes \u003d ParserUtil.parseImageRes(argMultimap.getValue(PREFIX_IMAGE).orElse(\"default.png\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"        Client client \u003d new Client(name, phone, email, location, plan, tagList, imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"        return new AddCommand(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Zaiah0505":27,"JodyLorah":7,"Tomashiwa":5,"Juzzanoob":3,"frisciliasultan":2,"-":31}},{"path":"src/main/java/seedu/iscam/logic/parser/clientcommands/ClientBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.clientcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.FindCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.commands.FindPlansCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ListCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.RedoCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ShowCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.commands.UndoCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.BookParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.ShowCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"public class ClientBookParser implements BookParser {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        case FindPlansCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"            return new FindPlansCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"            return new ShowCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"Juzzanoob"},"content":"            return new RedoCommand();","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":17,"JodyLorah":2,"Tomashiwa":3,"Juzzanoob":8,"frisciliasultan":4,"-":61}},{"path":"src/main/java/seedu/iscam/logic/parser/clientcommands/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.clientcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseIndexException;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     * @throws ParseIndexException if the user index input is not a non-zero unsigned integer","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        } catch (ParseIndexException pie) {","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"            throw pie;","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"                            DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Zaiah0505":5,"JodyLorah":3,"Tomashiwa":2,"frisciliasultan":6,"-":22}},{"path":"src/main/java/seedu/iscam/logic/parser/clientcommands/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.clientcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_IMAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseIndexException;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"                args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_LOCATION, PREFIX_PLAN, PREFIX_TAG, PREFIX_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"        } catch (ParseIndexException pie) {","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"            throw pie;","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"                    pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"zoeykobe"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"zoeykobe"},"content":"            editClientDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"Juzzanoob"},"content":"        if (argMultimap.getValue(PREFIX_PLAN).isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"            String planName \u003d argMultimap.getValue(PREFIX_PLAN).get();","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"            // If user input \"ip/\", Insurance Plan changes to \"No plans yet\"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"            if (planName.equals(\"\")) {","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"                planName \u003d \"No plans yet\";","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"            editClientDescriptor.setPlan(ParserUtil.parsePlan(planName));","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"        if (argMultimap.getValue(PREFIX_IMAGE).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"            editClientDescriptor.setImageRes(ParserUtil.parseImageRes(argMultimap.getValue(PREFIX_IMAGE).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editClientDescriptor::setTags);","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"        return new EditCommand(index, editClientDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Zaiah0505":16,"JodyLorah":12,"zoeykobe":2,"Tomashiwa":4,"Juzzanoob":4,"frisciliasultan":13,"-":57}},{"path":"src/main/java/seedu/iscam/logic/parser/clientcommands/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.clientcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.FindCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":2,"Tomashiwa":3,"-":27}},{"path":"src/main/java/seedu/iscam/logic/parser/clientcommands/FindPlansCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"package seedu.iscam.logic.parser.clientcommands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.commands.FindPlansCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.client.PlanContainsKeywordsPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":" * Parses input arguments and creates a new FindPlansCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"public class FindPlansCommandParser implements Parser\u003cFindPlansCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPlansCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     * and returns a FindPlansCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    public FindPlansCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPlansCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"        String[] planKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        return new FindPlansCommand(new PlanContainsKeywordsPredicate(Arrays.asList(planKeywords)));","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"frisciliasultan":34}},{"path":"src/main/java/seedu/iscam/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Zaiah0505":2,"-":15}},{"path":"src/main/java/seedu/iscam/logic/parser/exceptions/ParseFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.logic.parser.exceptions;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"public class ParseFormatException extends ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"    public ParseFormatException(String message) {","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"        super(message);","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"    public ParseFormatException(String message, Throwable cause) {","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"        super(message, cause);","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"Tomashiwa":11}},{"path":"src/main/java/seedu/iscam/logic/parser/exceptions/ParseIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"package seedu.iscam.logic.parser.exceptions;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"public class ParseIndexException extends ParseException {","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    public ParseIndexException(String message) {","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"        super(message);","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    public ParseIndexException(String message, Throwable cause) {","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"        super(message, cause);","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"frisciliasultan":11}},{"path":"src/main/java/seedu/iscam/logic/parser/meetingcommands/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.meetingcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_ON;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.AddMeetingCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Prefix;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Description;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMeetingCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"     * and returns an AddMeetingCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLIENT, PREFIX_ON, PREFIX_LOCATION,","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"                PREFIX_DESCRIPTION, PREFIX_TAG);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CLIENT, PREFIX_ON, PREFIX_LOCATION, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"                    AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"        Name clientName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_CLIENT).get());","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"        DateTime dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_ON).get());","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"        Meeting meeting \u003d new Meeting(clientName, dateTime, location, description, tagList);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        return new AddMeetingCommand(meeting);","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":9,"JodyLorah":6,"zoeykobe":3,"Tomashiwa":39,"Juzzanoob":1}},{"path":"src/main/java/seedu/iscam/logic/parser/meetingcommands/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.meetingcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseIndexException;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"            return new DeleteMeetingCommand(index);","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        } catch (ParseIndexException pie) {","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"            throw pie;","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"                            DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":5,"JodyLorah":3,"Tomashiwa":18,"frisciliasultan":6}},{"path":"src/main/java/seedu/iscam/logic/parser/meetingcommands/DoneMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.meetingcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.DoneMeetingCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":" * Parses input arguments and creates a new DoneMeetingCommand object.","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"public class DoneMeetingCommandParser implements Parser\u003cDoneMeetingCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneMeetingCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"     * and returns a DoneMeetingCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"    public DoneMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"            return new DoneMeetingCommand(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"                    DoneMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"JodyLorah":3,"Tomashiwa":28}},{"path":"src/main/java/seedu/iscam/logic/parser/meetingcommands/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.meetingcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_CLIENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_ON;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditMeetingCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.parser.exceptions.ParseIndexException;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.CompletionStatus;","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":" * Parses input arguments and creates a new EditMeetingCommand object.","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditMeetingCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMeetingCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"     * and returns an EditMeetingCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"    public EditMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CLIENT, PREFIX_ON, PREFIX_LOCATION, PREFIX_DESCRIPTION,","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"                        PREFIX_TAG, PREFIX_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        Index index;","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        } catch (ParseIndexException pie) {","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"            throw pie;","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"            throw new ParseFormatException(","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"                            EditMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT).isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"            // Parse client ID and retrieve client from Model to set in descriptor","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"            editMeetingDescriptor.setClientName(ParserUtil.parseName(argMultimap.getValue(PREFIX_CLIENT).get()));","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"        if (argMultimap.getValue(PREFIX_ON).isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"            // Parse string to date and time to set in descriptor","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"            editMeetingDescriptor.setDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_ON).get()));","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"zoeykobe"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"zoeykobe"},"content":"            editMeetingDescriptor.setAddress(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"            // Parse string to Description to set in descriptor","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"            editMeetingDescriptor.setDescription(ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION)","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"                    .get()));","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editMeetingDescriptor::setTags);","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"Tomashiwa"},"content":"            String argument \u003d argMultimap.getValue(PREFIX_STATUS).get();","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"            CompletionStatus status \u003d ParserUtil.parseCompletionStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"            editMeetingDescriptor.setStatus(status);","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"Tomashiwa"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"Tomashiwa"},"content":"        return new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"Tomashiwa"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"Tomashiwa"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"Tomashiwa"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"Tomashiwa"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"Tomashiwa"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"Tomashiwa"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":6,"JodyLorah":5,"zoeykobe":3,"Tomashiwa":88,"frisciliasultan":5}},{"path":"src/main/java/seedu/iscam/logic/parser/meetingcommands/FindMeetingsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.meetingcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.FindMeetingsCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.MeetingContainsKeywordsPredicate;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":" * Parses input arguments and create a new FindMeetingsCommand Object","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"public class FindMeetingsCommandParser implements Parser\u003cFindMeetingsCommand\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMeetingsCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"     * and returns a FindMeetingsCommand object for execution.","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    public FindMeetingsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"                    FindMeetingsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"        String[] meetingKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"        return new FindMeetingsCommand(new MeetingContainsKeywordsPredicate(Arrays.asList(meetingKeywords)));","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"JodyLorah":2,"Tomashiwa":32}},{"path":"src/main/java/seedu/iscam/logic/parser/meetingcommands/RelocateMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.meetingcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.RelocateMeetingCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":" * Parses input arguments and creates a new RelocateMeetingCommand object.","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"public class RelocateMeetingCommandParser implements Parser\u003cRelocateMeetingCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the given {@code String} of arguments in the context of the RelocateMeetingCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"     * and returns an RelocateMeetingCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    public RelocateMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LOCATION);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"        Index index;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"                    RelocateMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"        Location location;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"            location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"                    RelocateMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        return new RelocateMeetingCommand(index, location);","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"JodyLorah":5,"Tomashiwa":44}},{"path":"src/main/java/seedu/iscam/logic/parser/meetingcommands/RescheduleMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.logic.parser.meetingcommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_ON;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.commands.RescheduleMeetingCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.Parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":" * Parses input arguments and creates a RescheduleMeetingCommand object.","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"public class RescheduleMeetingCommandParser implements Parser\u003cRescheduleMeetingCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the given {@code String} of arguments in the context of the RescheduleMeetingCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"     * and returns a RescheduleMeetingCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"    public RescheduleMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ON);","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"        Index index;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"                    RescheduleMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"        DateTime dateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        if (argMultimap.getValue(PREFIX_ON).isPresent()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"            dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_ON).get());","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"            throw new ParseFormatException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"                    RescheduleMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"        return new RescheduleMeetingCommand(index, dateTime);","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"JodyLorah":5,"Tomashiwa":45}},{"path":"src/main/java/seedu/iscam/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ObservableClient;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ObservableMeeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"     * Returns the user prefs\u0027 iscam book file path.","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"    Path getClientBookFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"     * Sets the user prefs\u0027 iscam book file path.","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"zoeykobe"},"content":"    void setClientBookFilePath(Path clientBookFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"     * Returns the ClientBook","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"zoeykobe"},"content":"    ReadOnlyClientBook getClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"     * Replaces iscam book data with the data in {@code clientBook}.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"    void setClientBook(ReadOnlyClientBook clientBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the iscam book.","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"     * Deletes the given client.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"     * The client must exist in the iscam book.","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"     * Adds the given client.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"     * {@code client} must not already exist in the iscam book.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"    void addClient(Client client);","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"Juzzanoob"},"content":"     * Adds a given client at a specific index.","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"     * {@code client} must not already exist in the iscam book.","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"    void addClientAtIndex(Index index, Client client);","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"     * {@code target} must exist in the iscam book.","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the iscam book.","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of the filtered client list","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"Tomashiwa"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of a client to be displayed in detail","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"    ObservableClient getDetailedClient();","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"JodyLorah"},"content":"     * Returns the user prefs\u0027 iscam book file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"     * Sets the user prefs\u0027 iscam book file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"    void setMeetingBookFilePath(Path meetingBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"     * Returns the MeetingBook","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"    ReadOnlyMeetingBook getMeetingBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"     * Replaces iscam book data with the data in {@code meetingBook}.","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"JodyLorah"},"content":"    void setMeetingBook(ReadOnlyMeetingBook meetingBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the iscam book.","lastModifiedDate":"2021-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":145,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if any meeting except the ones in {@code exclusions} has conflicting date-time with {@code","lastModifiedDate":"2021-04-05"},{"lineNumber":146,"author":{"gitId":"Tomashiwa"},"content":"     * meeting}.","lastModifiedDate":"2021-04-05"},{"lineNumber":147,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":148,"author":{"gitId":"Tomashiwa"},"content":"    boolean hasConflictingMeetingWith(Meeting meeting, Meeting... exclusions);","lastModifiedDate":"2021-04-05"},{"lineNumber":149,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":151,"author":{"gitId":"JodyLorah"},"content":"     * Deletes the given meeting.","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"JodyLorah"},"content":"     * The meeting must exist in the iscam book.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"JodyLorah"},"content":"    void deleteMeeting(Meeting target);","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"JodyLorah"},"content":"     * Adds the given meeting.","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"JodyLorah"},"content":"     * {@code meeting} must not already exist in the iscam book.","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"JodyLorah"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"JodyLorah"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"Zaiah0505"},"content":"     * {@code target} must exist in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"JodyLorah"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the iscam book.","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":167,"author":{"gitId":"JodyLorah"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":169,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of the filtered meeting list","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"JodyLorah"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"JodyLorah"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"JodyLorah"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of a meeting to be displayed in detail","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"JodyLorah"},"content":"    ObservableMeeting getDetailedMeeting();","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":187,"author":{"gitId":"Zaiah0505"},"content":"     * Updates the detailed client to match the supplied client.","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":189,"author":{"gitId":"Zaiah0505"},"content":"    void setDetailedClient(Client client);","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":192,"author":{"gitId":"zoeykobe"},"content":"     * Set iScam to Client mode.","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"zoeykobe"},"content":"    void setClientMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"zoeykobe"},"content":"     * Set iScam to Meeting mode.","lastModifiedDate":"2021-03-26"},{"lineNumber":198,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"zoeykobe"},"content":"    void setMeetingMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":202,"author":{"gitId":"JodyLorah"},"content":"     * Updates the detailed meeting to match the supplied meeting.","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":204,"author":{"gitId":"JodyLorah"},"content":"    void setDetailedMeeting(Meeting meeting);","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"zoeykobe"},"content":"     * Return iScam\u0027s current mode.","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"zoeykobe"},"content":"    ObservableValue\u003cBoolean\u003e getIsClientMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":211,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-02"},{"lineNumber":212,"author":{"gitId":"Juzzanoob"},"content":"     * Returns index of given {@code Client}.","lastModifiedDate":"2021-04-02"},{"lineNumber":213,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-02"},{"lineNumber":214,"author":{"gitId":"Juzzanoob"},"content":"    Index getIndexOfClient(Client client);","lastModifiedDate":"2021-04-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zaiah0505":28,"JodyLorah":63,"zoeykobe":18,"Tomashiwa":36,"Juzzanoob":12,"-":58}},{"path":"src/main/java/seedu/iscam/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.property.SimpleBooleanProperty;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ObservableClient;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ObservableMeeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":" * Represents the in-memory model of the iscam book data.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"    private final ClientBook clientBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"    private final ObservableClient detailedClient;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"    private final SimpleBooleanProperty isClientMode;","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    private final MeetingBook meetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    private final ObservableMeeting detailedMeeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"     * Initializes a ModelManager with the given clientBook and userPrefs.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    public ModelManager(ReadOnlyClientBook clientBook, ReadOnlyMeetingBook meetingBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        requireAllNonNull(clientBook, meetingBook, userPrefs);","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        logger.fine(\"Initializing with iscam book: \" + clientBook","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"                + \", meeting book \" + meetingBook","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        this.clientBook \u003d new ClientBook(clientBook);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        this.filteredClients \u003d new FilteredList\u003c\u003e(this.clientBook.getClientList());","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        this.detailedClient \u003d new ObservableClient();","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"        this.isClientMode \u003d new SimpleBooleanProperty(true);","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"        this.meetingBook \u003d new MeetingBook(meetingBook);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"        this.filteredMeetings \u003d new FilteredList\u003c\u003e(this.meetingBook.getMeetingList());","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        this.detailedMeeting \u003d new ObservableMeeting();","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"        this(new ClientBook(), new MeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"        return userPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"zoeykobe"},"content":"    public Path getClientBookFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"zoeykobe"},"content":"        return userPrefs.getClientBookFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"    public void setClientBookFilePath(Path clientBookFilePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(clientBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"        userPrefs.setClientBookFilePath(clientBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"        return userPrefs.getMeetingBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"    public void setMeetingBookFilePath(Path meetingBookFilePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(meetingBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"        userPrefs.setMeetingBookFilePath(meetingBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"zoeykobe"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ClientBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"    public ReadOnlyClientBook getClientBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"Zaiah0505"},"content":"        return clientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"    public void setClientBook(ReadOnlyClientBook clientBook) {","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"        this.clientBook.resetData(clientBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"zoeykobe"},"content":"        return clientBook.hasClient(client);","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"zoeykobe"},"content":"        clientBook.removeClient(target);","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"zoeykobe"},"content":"        clientBook.addClient(client);","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"Juzzanoob"},"content":"    public void addClientAtIndex(Index index, Client client) {","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"Juzzanoob"},"content":"        clientBook.addClientAtIndex(index, client);","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"Juzzanoob"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"JodyLorah"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"JodyLorah"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"zoeykobe"},"content":"        clientBook.setClient(target, editedClient);","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"JodyLorah"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MeetingBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"JodyLorah"},"content":"    public ReadOnlyMeetingBook getMeetingBook() {","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"JodyLorah"},"content":"        return meetingBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"JodyLorah"},"content":"    public void setMeetingBook(ReadOnlyMeetingBook meetingBook) {","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"JodyLorah"},"content":"        this.meetingBook.resetData(meetingBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"Tomashiwa"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":172,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-21"},{"lineNumber":173,"author":{"gitId":"Tomashiwa"},"content":"        return meetingBook.hasMeeting(meeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":175,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":176,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":177,"author":{"gitId":"Tomashiwa"},"content":"    public boolean hasConflictingMeetingWith(Meeting meeting, Meeting... exclusions) {","lastModifiedDate":"2021-04-05"},{"lineNumber":178,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-04-04"},{"lineNumber":179,"author":{"gitId":"Tomashiwa"},"content":"        return meetingBook.hasConflictingMeetingWith(meeting, exclusions);","lastModifiedDate":"2021-04-05"},{"lineNumber":180,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":181,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":182,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":183,"author":{"gitId":"Tomashiwa"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2021-03-21"},{"lineNumber":184,"author":{"gitId":"Tomashiwa"},"content":"        meetingBook.removeMeeting(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":186,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":187,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":188,"author":{"gitId":"Tomashiwa"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":189,"author":{"gitId":"Tomashiwa"},"content":"        meetingBook.addMeeting(meeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"JodyLorah"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":192,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":193,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"Tomashiwa"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"Tomashiwa"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2021-03-21"},{"lineNumber":196,"author":{"gitId":"Tomashiwa"},"content":"        meetingBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":198,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":199,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"JodyLorah"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":203,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2021-03-08"},{"lineNumber":204,"author":{"gitId":"JodyLorah"},"content":"     * {@code versionedClientBook}","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":207,"author":{"gitId":"JodyLorah"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":208,"author":{"gitId":"JodyLorah"},"content":"        return filteredClients;","lastModifiedDate":"2021-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":212,"author":{"gitId":"JodyLorah"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2021-03-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":214,"author":{"gitId":"JodyLorah"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":217,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"Zaiah0505"},"content":"    public ObservableClient getDetailedClient() {","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"Zaiah0505"},"content":"        return detailedClient;","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":223,"author":{"gitId":"Zaiah0505"},"content":"    public void setDetailedClient(Client client) {","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"Zaiah0505"},"content":"        detailedClient.setClient(client);","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":227,"author":{"gitId":"Tomashiwa"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Meeting List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"Tomashiwa"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"JodyLorah"},"content":"     * {@code versionedClientBook}","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"Tomashiwa"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"Tomashiwa"},"content":"        return filteredMeetings;","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"Tomashiwa"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"Tomashiwa"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":245,"author":{"gitId":"zoeykobe"},"content":"     * Set isClientMode to true.","lastModifiedDate":"2021-03-26"},{"lineNumber":246,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":247,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":248,"author":{"gitId":"zoeykobe"},"content":"    public void setClientMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":249,"author":{"gitId":"zoeykobe"},"content":"        isClientMode.set(true);","lastModifiedDate":"2021-03-26"},{"lineNumber":250,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":251,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":252,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":253,"author":{"gitId":"zoeykobe"},"content":"     * Set isClientMode to false.","lastModifiedDate":"2021-03-26"},{"lineNumber":254,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":255,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":256,"author":{"gitId":"zoeykobe"},"content":"    public void setMeetingMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":257,"author":{"gitId":"zoeykobe"},"content":"        isClientMode.set(false);","lastModifiedDate":"2021-03-26"},{"lineNumber":258,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":259,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":260,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":261,"author":{"gitId":"zoeykobe"},"content":"     * Set isClientMode to false.","lastModifiedDate":"2021-03-26"},{"lineNumber":262,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":263,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":264,"author":{"gitId":"zoeykobe"},"content":"    public ObservableValue\u003cBoolean\u003e getIsClientMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":265,"author":{"gitId":"zoeykobe"},"content":"        return isClientMode;","lastModifiedDate":"2021-03-26"},{"lineNumber":266,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":267,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":268,"author":{"gitId":"JodyLorah"},"content":"    //TODO: header","lastModifiedDate":"2021-03-28"},{"lineNumber":269,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"JodyLorah"},"content":"    public ObservableMeeting getDetailedMeeting() {","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"JodyLorah"},"content":"        return detailedMeeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"JodyLorah"},"content":"    //TODO: header","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":276,"author":{"gitId":"JodyLorah"},"content":"    public void setDetailedMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-27"},{"lineNumber":277,"author":{"gitId":"JodyLorah"},"content":"        detailedMeeting.setMeeting(meeting);","lastModifiedDate":"2021-03-27"},{"lineNumber":278,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":281,"author":{"gitId":"Juzzanoob"},"content":"    public Index getIndexOfClient(Client client) {","lastModifiedDate":"2021-04-02"},{"lineNumber":282,"author":{"gitId":"Juzzanoob"},"content":"        return Index.fromZeroBased(filteredClients.indexOf(client));","lastModifiedDate":"2021-04-02"},{"lineNumber":283,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":284,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":285,"author":{"gitId":"JodyLorah"},"content":"    //TODO: header","lastModifiedDate":"2021-03-28"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":300,"author":{"gitId":"zoeykobe"},"content":"        return clientBook.equals(other.clientBook)","lastModifiedDate":"2021-03-14"},{"lineNumber":301,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 meetingBook.equals(other.meetingBook)","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":303,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients);","lastModifiedDate":"2021-03-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":21,"JodyLorah":74,"zoeykobe":38,"Tomashiwa":61,"Juzzanoob":11,"-":101}},{"path":"src/main/java/seedu/iscam/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":" * Represents a Client in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"public class Client {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    private final Name name;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    private final Phone phone;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    private final Email email;","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    private final InsurancePlan insurancePlan;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    private final Location location;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    private final Image imageRes;","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"     * Every field must be present and not null except for imageRes.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     * If insurance plan is not present, it will be a String of \"No plans yet\"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    public Client(Name name, Phone phone, Email email, Location location, InsurancePlan plan, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"                  Image imageRes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        requireAllNonNull(name, phone, email, location, plan, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"        this.insurancePlan \u003d plan;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        this.imageRes \u003d imageRes;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"zoeykobe"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"zoeykobe"},"content":"        return location;","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"    public InsurancePlan getPlan() {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"        return insurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"     * Returns an optional containing the imageRes String. May return an empty optional.","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"    public Image getImageRes() {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"        return imageRes;","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 otherClient.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"                \u0026\u0026 otherClient.getPlan().equals(getPlan())","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"zoeykobe"},"content":"                \u0026\u0026 otherClient.getLocation().equals(getLocation())","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"Zaiah0505"},"content":"                \u0026\u0026 otherClient.getTags().equals(getTags())","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":"                \u0026\u0026 otherClient.getImageRes().equals(getImageRes());","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":"        return Objects.hash(name, phone, email, location, tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"zoeykobe"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"frisciliasultan"},"content":"                .append(getLocation());","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"frisciliasultan"},"content":"        // If insurance plan is present, display it","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"frisciliasultan"},"content":"        InsurancePlan plan \u003d getPlan();","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"frisciliasultan"},"content":"        if (!plan.toString().equals(\"No plans yet\")) {","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"frisciliasultan"},"content":"            builder.append(\"; Insurance Plan: \")","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"Juzzanoob"},"content":"                    .append(getPlan());","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"Zaiah0505"},"content":"        builder.append(\"; Image: \")","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"Zaiah0505"},"content":"                .append(imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":20,"JodyLorah":22,"zoeykobe":6,"Tomashiwa":3,"Juzzanoob":7,"frisciliasultan":9,"-":89}},{"path":"src/main/java/seedu/iscam/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * Represents a Client\u0027s email in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_LENGTH_CONSTRAINTS \u003d \"Email address should not be longer than 254 characters.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    private static final int MESSAGE_MAX_LENGTH \u003d 254;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidLength(email), MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given email has valid length.","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidLength(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        return test.length() \u003c\u003d MESSAGE_MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":10,"-":63}},{"path":"src/main/java/seedu/iscam/model/client/Image.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * Represents a Client\u0027s image link in the iscam book.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"public class Image {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Images should refer to a jpg, jpeg or png file in the \\\"data\\\" \"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"            + \"folder\";","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\w+\\\\.(gif|png|jpg|jpeg)$\"; // Must not contain spaces","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"    public final String value;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"     * Constructs an {@code Image}.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"     * @param imageRes name of the image file, including the file type extension.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"    public Image(String imageRes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"        requireNonNull(imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"        checkArgument(isValidImageRes(imageRes), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"        value \u003d imageRes;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public static boolean isValidImageRes(String test) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        return value;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"                || (other instanceof Image","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"                \u0026\u0026 value.equals(((Image) other).value));","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Zaiah0505":46}},{"path":"src/main/java/seedu/iscam/model/client/InsurancePlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Juzzanoob"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":" * Represents a Client\u0027s insurance plan in the client book.","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"public class InsurancePlan {","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"            \"Insurance Plan should only contain alphanumeric characters\";","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_LENGTH_CONSTRAINTS \u003d \"Insurance plans should not be longer than 50 characters.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    /*","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    private static final int MESSAGE_MAX_LENGTH \u003d 50;","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"    public final String planName;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"     * Constructs an {@code InsurancePlan}.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"     * @param planName A valid Insurance Plan name.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    public InsurancePlan(String planName) {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(planName);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"        checkArgument(isValidPlan(planName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidLength(planName), MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"        this.planName \u003d planName;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given string is a valid plan.","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    public static boolean isValidPlan(String test) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given plan has valid length.","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidLength(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        return test.length() \u003c\u003d MESSAGE_MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"        return planName;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Juzzanoob"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"                || (other instanceof InsurancePlan // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"                \u0026\u0026 planName.equals(((InsurancePlan) other).planName)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"        return planName.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"JodyLorah":13,"Juzzanoob":51}},{"path":"src/main/java/seedu/iscam/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * Represents a Client\u0027s phone number in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhoneLength(String)}","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_LENGTH_CONSTRAINTS \u003d \"Phone number should be only 8 digits long.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_INPUT_CONSTRAINTS \u003d \"Phone number should only consist of numbers.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_STARTING_DIGIT_CONSTRAINTS \u003d \"Phone numbers should start with 6, 8 or 9.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidNumbersOnly(phone), MESSAGE_INPUT_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidPhoneLength(phone), MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidPhoneNumber(phone), MESSAGE_STARTING_DIGIT_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given string has a valid phone number length.","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidPhoneLength(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        return test.length() \u003d\u003d 8;","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given string only consists of numbers.","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidNumbersOnly(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        try {","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"            Integer.parseInt(test);","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"            return true;","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"            return false;","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given string has valid starting digits.","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidPhoneNumber(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        String acceptableFirstDigits \u003d \"689\";","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        String firstDigit \u003d Character.toString(test.charAt(0));","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        return acceptableFirstDigits.contains(firstDigit);","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":32,"-":42}},{"path":"src/main/java/seedu/iscam/model/client/PlanContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.commons.util.StringUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":" * Tests that a {@code Client}\u0027s {@code InsurancePlan} matches any of the keywords given.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"public class PlanContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    public PlanContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getPlan().toString(), keyword));","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"                || (other instanceof PlanContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"                \u0026\u0026 keywords.equals(((PlanContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"frisciliasultan":31}},{"path":"src/main/java/seedu/iscam/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"     * Adds a client to the list at a specific index.","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    public void addAtIndex(Index index, Client toAdd) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"        internalList.add(index.getZeroBased(), toAdd);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"     * Adds a client to the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"     * The client must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"JodyLorah"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"JodyLorah"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"                    return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"JodyLorah"},"content":"                }","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"JodyLorah"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"JodyLorah"},"content":"        return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Zaiah0505":5,"JodyLorah":132,"Juzzanoob":13}},{"path":"src/main/java/seedu/iscam/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"public class ClientNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Zaiah0505":7}},{"path":"src/main/java/seedu/iscam/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":" * identity).","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":10}},{"path":"src/main/java/seedu/iscam/model/commons/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.model.commons;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * Represents a Client\u0027s iscam in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"public class Location {","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_LENGTH_CONSTRAINTS \u003d \"Locations should not be longer than 100 characters.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"     * The first character of the iscam must not be a whitespace,","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    private static final int MESSAGE_MAX_LENGTH \u003d 100;","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     * @param location A valid location.","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"    public Location(String location) {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidLength(location), MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"        value \u003d location;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given location has valid length.","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidLength(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        return test.length() \u003c\u003d MESSAGE_MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"zoeykobe"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"                \u0026\u0026 value.equals(((Location) other).value)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":11,"zoeykobe":11,"Tomashiwa":1,"-":39}},{"path":"src/main/java/seedu/iscam/model/commons/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.model.commons;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * Represents a Client\u0027s name in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_TYPE_CONSTRAINTS \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_LENGTH_CONSTRAINTS \u003d \"Names should not be longer than 50 characters.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"     * The first character of the iScam must not be a whitespace,","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    private static final int MESSAGE_MAX_LENGTH \u003d 50;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidName(name), MESSAGE_TYPE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidLength(name), MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given name has valid length.","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidLength(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        return test.length() \u003c\u003d MESSAGE_MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":14,"Tomashiwa":1,"-":50}},{"path":"src/main/java/seedu/iscam/model/commons/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.model.commons;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":4,"Tomashiwa":2,"-":25}},{"path":"src/main/java/seedu/iscam/model/commons/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.model.commons;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * Represents a Tag in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric, and it should not be blank.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_LENGTH_CONSTRAINTS \u003d \"Tags should not be longer than 50 characters.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    private static final int MESSAGE_MAX_LENGTH \u003d 50;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        checkArgument(isValidLength(tagName), MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"     * Returns true if a given tag has valid length.","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public static boolean isValidLength(String test) {","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        return test.length() \u003c\u003d MESSAGE_MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":12,"Tomashiwa":1,"-":50}},{"path":"src/main/java/seedu/iscam/model/meeting/CompletionStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":" * Represents whether the status of a Meeting in the iscam book","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":" * Guarantees: immutable; is valid as declared in {@link #isStringValid(String)}","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"public class CompletionStatus {","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"    public enum Status {","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"        COMPLETED,","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"        INCOMPLETE","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"    public static final String ARGUMENT_COMPLETE \u003d \"complete\";","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"    public static final String ARGUMENT_INCOMPLETE \u003d \"incomplete\";","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"    public static final String TEXT_COMPLETE \u003d \"Completed\";","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"    public static final String TEXT_INCOMPLETE \u003d \"Not completed\";","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Completion status should only be [\" + ARGUMENT_COMPLETE + \"] or [\"","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"            + ARGUMENT_INCOMPLETE + \"].\";","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"    public final Status value;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"     * Constructs a {@code CompletionStatus}","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"     * @param status A valid status","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    public CompletionStatus(Status status) {","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"        this.value \u003d status;","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"     * Constructs a {@code CompletionStatus} through a string","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"     * @param str A valid status in string form","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    public CompletionStatus(String str) {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(str);","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        checkArgument(isStringValid(str), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        this.value \u003d str.equals(ARGUMENT_COMPLETE) ? Status.COMPLETED : Status.INCOMPLETE;","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"     * Returns if a given string is a valid status","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    public static boolean isStringValid(String str) {","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"        return str.equals(ARGUMENT_COMPLETE) || str.equals(ARGUMENT_INCOMPLETE);","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"        return value \u003d\u003d Status.COMPLETED;","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"    public CompletionStatus complete() {","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        return new CompletionStatus(Status.COMPLETED);","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"    public Status get() {","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"        return value;","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"    public String toDisplayString() {","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"        return value \u003d\u003d Status.COMPLETED ? TEXT_COMPLETE : TEXT_INCOMPLETE;","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"    public String toString() {","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"        return value \u003d\u003d Status.COMPLETED ? ARGUMENT_COMPLETE : ARGUMENT_INCOMPLETE;","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"                || (other instanceof CompletionStatus","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 value.equals(((CompletionStatus) other).value));","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"Tomashiwa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"        return value.hashCode();","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"Tomashiwa":84}},{"path":"src/main/java/seedu/iscam/model/meeting/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":" * Represents a meeting\u0027s date and time in the iscam book.","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":" * Guarantees: immutable; is valid as declared in {@link #isStringValidDateTime(String)}","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"public class DateTime {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_INVALID_FORMAT \u003d \"The given date-time is invalid. Possibly due to: \\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"            + \". Incorrect format (Should be of the format of dd-MM-yyyy HH:mm)\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"            + \". Invalid date (e.g. 29-02-2021, because 29-02 is not a valid date in a non-leap year)\";","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_IN_PAST \u003d \"Date and time cannot be in the past.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"    public static final DateTimeFormatter DATETIME_PATTERN \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HH:mm\")","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"    private static final DateTimeFormatter DAY_OF_WEEK_FORMAT \u003d DateTimeFormatter.ofPattern(\"EEE\");","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    private static final DateTimeFormatter DAY_OF_WEEK_FORMAT_FULL \u003d DateTimeFormatter.ofPattern(\"EEEE\");","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"    public final LocalDateTime dateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"     * Constructs a {@code DateTime} with a {@code String dateTime}","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, DATETIME_PATTERN);","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"     * Checks if {@code string} follows the correct date-time format.","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    public static boolean isStringValidFormat(String str) {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"        try {","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"            LocalDateTime validDateTime \u003d LocalDateTime.parse(str, DATETIME_PATTERN);","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"            return true;","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"            return false;","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"     * Checks if {@code string} can be converted into a valid {@code DateTime}.","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"    public static boolean isStringValidDateTime(String str) {","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"            LocalDateTime toVerify \u003d LocalDateTime.parse(str, DATETIME_PATTERN);","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"            LocalDateTime now \u003d LocalDateTime.now().withSecond(0).withNano(0);","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"            return toVerify.isEqual(now) || toVerify.isAfter(now);","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"    public LocalDateTime get() {","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"        return this.dateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"    public String getDayOfWeek() {","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"        return this.dateTime.format(DAY_OF_WEEK_FORMAT).toLowerCase();","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"    public String getDayOfWeekFull() {","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"        return this.dateTime.format(DAY_OF_WEEK_FORMAT_FULL).toLowerCase();","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"        return dateTime.format(DATETIME_PATTERN);","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this || (other instanceof DateTime \u0026\u0026 this.dateTime.isEqual(((DateTime) other).dateTime));","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"Tomashiwa"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Tomashiwa":87}},{"path":"src/main/java/seedu/iscam/model/meeting/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":" * Represents a meeting\u0027s description in the iscam book.","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"public class Description {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description should be under 1000 characters.\\n\";","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"    private static final int CHAR_LIMIT \u003d 1000;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"    public final String value;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"     * Constructs an {@code Description}","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"     * @param desc A valid description","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    public Description(String desc) {","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(desc);","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"        checkArgument(isValidDescription(desc), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"        value \u003d desc;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"     * Returns if a given string is a valid description","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    public static boolean isValidDescription(String desc) {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        return desc.length() \u003c\u003d CHAR_LIMIT \u0026\u0026 desc.length() \u003e\u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"        return value;","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this || (other instanceof Description \u0026\u0026 value.equals(((Description) other).value));","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":1,"Tomashiwa":44}},{"path":"src/main/java/seedu/iscam/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.CompletionStatus.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":" * Represents a Meeting in the client book.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":" * Guarantees: identity fields are present and not null, data fields are validated, immutable.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"public class Meeting {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    private static final DateTimeFormatter DATETIME_PATTERN \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"    // Identity fields","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    private Name clientName;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"    private DateTime dateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    // Data fields","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    private Location location;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    private Description description;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    private CompletionStatus status;","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    public Meeting(Name clientName, DateTime dateTime, Location location, Description description, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        requireAllNonNull(clientName, dateTime, location, description, tags);","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"        this.status \u003d new CompletionStatus(Status.INCOMPLETE);","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"     * Secondary constructor to indicate completion status of a meeting.","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"    public Meeting(Name clientName, DateTime dateTime, Location location, Description description, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"                   CompletionStatus status) {","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        requireAllNonNull(clientName, dateTime, location, description, tags);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"    public Name getClientName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"        return clientName;","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"    public DateTime getDateTime() {","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"        return dateTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"        return location;","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"        return description;","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"    public CompletionStatus getStatus() {","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"        return status;","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"Tomashiwa"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"Tomashiwa"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if both meetings have the same date and time.","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"Tomashiwa"},"content":"    public boolean isInConflict(Meeting otherMeeting) {","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"Tomashiwa"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"Tomashiwa"},"content":"        String thisDateTime \u003d this.dateTime.get().format(DATETIME_PATTERN);","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"Tomashiwa"},"content":"        String otherDateTime \u003d otherMeeting.dateTime.get().format(DATETIME_PATTERN);","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 thisDateTime.equals(otherDateTime);","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if both meetings have the same identity and date fields.","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"Tomashiwa"},"content":"     * This defines a notion of equality between two meetings.","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"Tomashiwa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"Tomashiwa"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"Tomashiwa"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"Tomashiwa"},"content":"            return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"Tomashiwa"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"Tomashiwa"},"content":"        String thisDateTime \u003d this.dateTime.get().format(DATETIME_PATTERN);","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"Tomashiwa"},"content":"        String otherDateTime \u003d otherMeeting.dateTime.get().format(DATETIME_PATTERN);","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"Tomashiwa"},"content":"        return otherMeeting.getClientName().equals(this.clientName)","lastModifiedDate":"2021-03-21"},{"lineNumber":124,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 otherDateTime.equals(thisDateTime)","lastModifiedDate":"2021-03-21"},{"lineNumber":125,"author":{"gitId":"Zaiah0505"},"content":"                \u0026\u0026 otherMeeting.getLocation().equals(this.location)","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 otherMeeting.getDescription().equals(this.description)","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 otherMeeting.getTags().equals(this.tags)","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 otherMeeting.getStatus().equals(this.status);","lastModifiedDate":"2021-04-04"},{"lineNumber":129,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"Tomashiwa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"Tomashiwa"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"Tomashiwa"},"content":"        return Objects.hash(clientName, dateTime, location, description, tags, status);","lastModifiedDate":"2021-04-04"},{"lineNumber":135,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"Tomashiwa"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"Tomashiwa"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"JodyLorah"},"content":"        builder.append(\"Client Name: \")","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"                .append(clientName.toString())","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"Tomashiwa"},"content":"                .append(\"; Date \u0026 Time: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"Tomashiwa"},"content":"                .append(dateTime.toString())","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"Zaiah0505"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"Zaiah0505"},"content":"                .append(location.toString())","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"Tomashiwa"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"Tomashiwa"},"content":"                .append(description.toString());","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"Tomashiwa"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"Tomashiwa"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"Tomashiwa"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"Tomashiwa"},"content":"        builder.append(\"; Status: \")","lastModifiedDate":"2021-04-04"},{"lineNumber":155,"author":{"gitId":"Tomashiwa"},"content":"                .append(status.toDisplayString());","lastModifiedDate":"2021-04-04"},{"lineNumber":156,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"Tomashiwa"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Zaiah0505":10,"JodyLorah":3,"Tomashiwa":145,"frisciliasultan":1}},{"path":"src/main/java/seedu/iscam/model/meeting/MeetingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.model.meeting.CompletionStatus.TEXT_COMPLETE;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.model.meeting.CompletionStatus.TEXT_INCOMPLETE;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.commons.util.StringUtil;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":" * Tests that the details of a {@code Meeting} matches any of the keywords given.","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"public class MeetingContainsKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"    private final String searchString;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"     * Creates a MeetingContainsKeywordsPredicate to check if given {@code keywords} match any {Meeting}.","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"            str \u003d str.concat(keyword + \" \");","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"        searchString \u003d str.strip();","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"        if (searchString.equals(TEXT_COMPLETE.toLowerCase())) {","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"            return meeting.getStatus().isComplete();","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"        } else if (searchString.equals(TEXT_INCOMPLETE.toLowerCase())) {","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"            return !meeting.getStatus().isComplete();","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"            return keywords.stream()","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsIgnoreCase(meeting.getClientName().toString(), keyword)","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"                        || StringUtil.containsIgnoreCase(meeting.getDateTime().toString(), keyword)","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"                        || meeting.getDateTime().getDayOfWeek().equals(keyword.toLowerCase())","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"                        || meeting.getDateTime().getDayOfWeekFull().equals(keyword.toLowerCase())","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"                        || StringUtil.containsIgnoreCase(meeting.getLocation().toString(), keyword)","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"                        || StringUtil.containsIgnoreCase(meeting.getDescription().toString(), keyword)","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"                        || meeting.getTags().stream()","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"                            .anyMatch(tag -\u003e StringUtil.containsIgnoreCase(tag.toString(), keyword)));","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this || (other instanceof MeetingContainsKeywordsPredicate","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 keywords.equals(((MeetingContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Tomashiwa":55}},{"path":"src/main/java/seedu/iscam/model/meeting/MeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"public class MeetingList implements ReadOnlyMeetingList {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    /*","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    public MeetingList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a Meeting list using the Meetings in the {@code toBeCopied}","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    public MeetingList(ReadOnlyMeetingList toBeCopied) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        this();","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"     * Resets the existing data of this {@code MeetingList} with {@code newData}.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"    public void resetData(ReadOnlyMeetingList newData) {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    //// client-level operations","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the meeting list.","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"     * Adds a meeting to the meeting list.","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"     * The meeting must not already exist in the meeting list.","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"    public void addMeeting(Meeting p) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"        meetings.add(p);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"     * Replaces the contents of the meetings list with {@code meetings}.","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"     * Replaces the given meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"     * {@code target} must exist in the meeting book.","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"     * in the meeting list.","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"    public void setMeetings(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"     * Removes {@code key} from this {@code Meeting List}.","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"     * {@code key} must exist in the meeting list.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"        meetings.remove(key);","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"    //// util methods","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"        return meetings.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"                || (other instanceof MeetingList // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"                \u0026\u0026 meetings.equals(((MeetingList) other).meetings));","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":"        return meetings.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":1,"Tomashiwa":1,"frisciliasultan":114}},{"path":"src/main/java/seedu/iscam/model/meeting/ReadOnlyMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":" * Unmodifiable view of a meeting list","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"public interface ReadOnlyMeetingList {","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"JodyLorah":1,"frisciliasultan":14}},{"path":"src/main/java/seedu/iscam/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.meeting;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.exceptions.MeetingConflictException;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":" * A meeting is considered unique by comparing using {@code Meeting#isInConflict(Meeting)}. As such, adding and","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":" * updating of meetings uses Meeting#isInConflict(Meeting) for equality so as to ensure that the meeting being added or","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":" * updated is unique in terms of identity in the UniqueMeetingList. However, the removal of a meeting uses","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":" * Meeting#equals(Object) so as to ensure that the meeting with exactly the same fields will be removed.","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        return internalList.stream().anyMatch(toCheck::isInConflict);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        sortMeetings();","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"        if (!target.isInConflict(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"            throw new MeetingConflictException();","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"        sortMeetings();","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"        sortMeetings();","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"Tomashiwa"},"content":"        sortMeetings();","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"    // TODO: Complete this method and add headers","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"Tomashiwa"},"content":"    private void sortMeetings() {","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"        FXCollections.sort(internalList, new MeetingComparator());","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"    // This is done","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"Tomashiwa"},"content":"                || (other instanceof UniqueMeetingList","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 internalList.equals(((UniqueMeetingList) other).internalList));","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"Tomashiwa"},"content":"    private class MeetingComparator implements Comparator\u003cMeeting\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"Tomashiwa"},"content":"        public int compare(Meeting m1, Meeting m2) {","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"Tomashiwa"},"content":"            if (m1.getStatus().isComplete() \u0026\u0026 !m2.getStatus().isComplete()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"Tomashiwa"},"content":"                return 1;","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"Tomashiwa"},"content":"            } else if (!m1.getStatus().isComplete() \u0026\u0026 m2.getStatus().isComplete()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"Tomashiwa"},"content":"                return -1;","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"Tomashiwa"},"content":"            } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"Tomashiwa"},"content":"                return m1.getDateTime().get().compareTo(m2.getDateTime().get());","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"Tomashiwa"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":1,"Tomashiwa":56,"frisciliasultan":73}},{"path":"src/main/java/seedu/iscam/model/meeting/exceptions/MeetingConflictException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.meeting.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":" * Signals that the operation will result in meetings with same date and time.","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"public class MeetingConflictException extends RuntimeException {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingConflictException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"        super(\"Meeting\u0027s date or time is in conflict with other Meetings\");","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":1,"Tomashiwa":9}},{"path":"src/main/java/seedu/iscam/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.meeting.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"public class MeetingNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingNotFoundException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"        super(\"Desired Meeting cannot be found\");","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Zaiah0505":1,"Tomashiwa":9}},{"path":"src/main/java/seedu/iscam/model/user/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.user;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"    Path getClientBookFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":2,"zoeykobe":1,"-":13}},{"path":"src/main/java/seedu/iscam/model/user/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.user;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"    private Path clientBookFilePath \u003d Paths.get(\"data\", \"clientbook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    private Path meetingBookFilePath \u003d Paths.get(\"data\", \"meetingbook.json\");","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"    public UserPrefs() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"        setClientBookFilePath(newUserPrefs.getClientBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        setMeetingBookFilePath(newUserPrefs.getMeetingBookFilePath());","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"zoeykobe"},"content":"    public Path getClientBookFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"zoeykobe"},"content":"        return clientBookFilePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"    public void setClientBookFilePath(Path clientBookFilePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"zoeykobe"},"content":"        requireNonNull(clientBookFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"        this.clientBookFilePath \u003d clientBookFilePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        return meetingBookFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"    public void setMeetingBookFilePath(Path meetingBookFilePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(meetingBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        this.meetingBookFilePath \u003d meetingBookFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 clientBookFilePath.equals(o.clientBookFilePath)","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 meetingBookFilePath.equals(o.meetingBookFilePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"        return Objects.hash(guiSettings, clientBookFilePath, meetingBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"        sb.append(\"\\nLocal client data file location : \" + clientBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"        sb.append(\"\\nLocal meeting data file location : \" + meetingBookFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":13,"zoeykobe":7,"-":78}},{"path":"src/main/java/seedu/iscam/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Image;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.Description;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":" * Contains utility methods for populating {@code ClientBook} with sample data.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        return new Client[]{","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"), new InsurancePlan(\"Plan A\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"                    getTagSet(\"friends\"), new Image(\"default.png\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"                    new Location(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new InsurancePlan(\"Plan B\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"                    getTagSet(\"colleagues\", \"friends\"), new Image(\"default.png\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"                    new Location(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new InsurancePlan(\"Plan C\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"                    getTagSet(\"neighbours\"), new Image(\"default.png\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"                    new Location(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new InsurancePlan(\"Plan B\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"                    getTagSet(\"family\"), new Image(\"default.png\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"                    new Location(\"Blk 47 Tampines Street 20, #17-35\"), new InsurancePlan(\"Plan A\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"                    getTagSet(\"classmates\"), new Image(\"default.png\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"                    new Location(\"Blk 45 Aljunied Street 85, #11-31\"), new InsurancePlan(\"Plan A\"),","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"                    getTagSet(\"colleagues\"), new Image(\"default.png\"))","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    public static Meeting[] getSampleMeetings() {","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        return new Meeting[]{","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"            new Meeting(new Name(\"Client A\"), new DateTime(\"12-10-2021 10:00\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"                    new Location(\"Starbucks, Paya Lebar Square\"), new Description(\"Sell insurance plan\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"                    getTagSet(\"Urgent\")),","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"            new Meeting(new Name(\"Client B\"), new DateTime(\"13-10-2021 10:00\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"                    new Location(\"Coffee Bean, NUH\"), new Description(\"Sell insurance plan\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"                    getTagSet(\"Urgent\")),","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"            new Meeting(new Name(\"Client C\"), new DateTime(\"14-10-2021 10:00\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"                    new Location(\"Toast Box, NEX\"), new Description(\"Sell insurance plan\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"                    getTagSet(\"Urgent\"))","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"        };","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"zoeykobe"},"content":"    public static ReadOnlyClientBook getSampleClientBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        ClientBook sampleCb \u003d new ClientBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"            sampleCb.addClient(sampleClient);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        return sampleCb;","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"    public static ReadOnlyMeetingBook getSampleMeetingBook() {","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"        MeetingBook sampleMb \u003d new MeetingBook();","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"        for (Meeting sampleMeeting : getSampleMeetings()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"            sampleMb.addMeeting(sampleMeeting);","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"        return sampleMb;","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Zaiah0505":11,"JodyLorah":41,"zoeykobe":2,"Tomashiwa":3,"Juzzanoob":7,"-":25}},{"path":"src/main/java/seedu/iscam/model/util/clientbook/ClientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.util.clientbook;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.UniqueClientList;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":" * Wraps all client data at the iscam-book leveL","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"public class ClientBook implements ReadOnlyClientBook {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"    {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    public ClientBook() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"     * Creates an ClientBook using the Clients in the {@code toBeCopied}","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"    public ClientBook(ReadOnlyClientBook toBeCopied) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"zoeykobe"},"content":"     * Resets the existing data of this {@code ClientBook} with {@code newData}.","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"    public void resetData(ReadOnlyClientBook newData) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"    //// client-level operations","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        return clients.contains(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"     * Adds a client to the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Zaiah0505"},"content":"     * The client must not already exist in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"        clients.add(p);","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"     * Adds a client to the iscam book at a specific index.","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"     * The client must not already exist in the iscam book.","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"    public void addClientAtIndex(Index index, Client p) {","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"        clients.addAtIndex(index, p);","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"     * {@code target} must exist in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Zaiah0505"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"zoeykobe"},"content":"     * Removes {@code key} from this {@code ClientBook}.","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"     * {@code key} must exist in the iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"        clients.remove(key);","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"zoeykobe"},"content":"                || (other instanceof ClientBook // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":"                \u0026\u0026 clients.equals(((ClientBook) other).clients));","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"        return clients.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":12,"JodyLorah":26,"zoeykobe":8,"Juzzanoob":9,"-":75}},{"path":"src/main/java/seedu/iscam/model/util/clientbook/ObservableClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.util.clientbook;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import javafx.beans.value.ObservableObjectValue;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":" * Observable Client object that will notify listeners when the client contained changes.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"public class ObservableClient implements ObservableObjectValue\u003cClient\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"    private Client client;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    private final List\u003cChangeListener\u003c? super Client\u003e\u003e listeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"    public void setClient(Client newClient) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"        Client oldClient \u003d this.client;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"        this.client \u003d newClient;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"        for (ChangeListener\u003c? super Client\u003e cl : listeners) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"            cl.changed(this, oldClient, newClient);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"    public Client get() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"        return client;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    public void addListener(ChangeListener\u003c? super Client\u003e listener) {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"        this.listeners.add(listener);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Juzzanoob"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Juzzanoob"},"content":"    public void removeListener(ChangeListener\u003c? super Client\u003e listener) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Juzzanoob"},"content":"        this.listeners.remove(listener);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Juzzanoob"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Juzzanoob"},"content":"    public Client getValue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"        return client;","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"            ObservableClient that \u003d (ObservableClient) o;","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"            return this.equals(that.client) \u0026\u0026 this.listeners.equals(that.listeners);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Juzzanoob"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Zaiah0505":12,"JodyLorah":1,"Juzzanoob":54}},{"path":"src/main/java/seedu/iscam/model/util/clientbook/ReadOnlyClientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.util.clientbook;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":" * Unmodifiable view of an iscam book","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"public interface ReadOnlyClientBook {","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":4,"zoeykobe":1,"-":9}},{"path":"src/main/java/seedu/iscam/model/util/meetingbook/MeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.util.meetingbook;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.UniqueMeetingList;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":" * Wraps all meeting data at the iscam-book level","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":" * Duplicates are not allowed (by .isInConflict comparison)","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"public class MeetingBook implements ReadOnlyMeetingBook {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"    private UniqueMeetingList meetings;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    /*","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"    {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBook() {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"     * Creates an MeetingBook using the meetings in the {@code toBeCopied}","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBook(ReadOnlyMeetingBook toBeCopied) {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        this();","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"     * Resets the existing data of this {@code MeetingBook} with {@code newData}.","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"    public void resetData(ReadOnlyMeetingBook newData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the iscam book.","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"     * Returns true if any meeting except the ones in {@code exclusions} has conflicting date-time with {@code","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"     * meeting}.","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"    public boolean hasConflictingMeetingWith(Meeting meeting, Meeting... exclusions) {","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"        for (Meeting other : meetings) {","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"            if (other.isInConflict(meeting) \u0026\u0026 !other.getClientName().equals(meeting.getClientName())) {","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"                return Arrays.stream(exclusions).noneMatch(e -\u003e other.getClientName().equals(e.getClientName()));","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"        return false;","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"Tomashiwa"},"content":"     * Adds a meeting to the iscam book.","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"     * The meeting must not already exist in the iscam book.","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"    public void addMeeting(Meeting m) {","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Tomashiwa"},"content":"        meetings.add(m);","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"Tomashiwa"},"content":"     * Replaces the given meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"Tomashiwa"},"content":"     * {@code target} must exist in the iscam book.","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"Tomashiwa"},"content":"     * The identity of {@code editedMeeting} must not be the same as another existing meeting in the iscam book.","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"Tomashiwa"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"Tomashiwa"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"Tomashiwa"},"content":"     * Removes {@code key} from this {@code MeetingBook}.","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"Tomashiwa"},"content":"     * {@code key} must exist in the iscam book.","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"Tomashiwa"},"content":"        meetings.remove(key);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"Tomashiwa"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"Tomashiwa"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"Tomashiwa"},"content":"    public String toString() {","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"Tomashiwa"},"content":"        return meetings.asUnmodifiableObservableList().size() + \" meetings\";","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"Tomashiwa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"Tomashiwa"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"Tomashiwa"},"content":"                || (other instanceof MeetingBook","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"Tomashiwa"},"content":"                \u0026\u0026 meetings.equals(((MeetingBook) other).meetings));","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"Tomashiwa"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"Tomashiwa"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"Tomashiwa"},"content":"        return meetings.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"JodyLorah":1,"Tomashiwa":126}},{"path":"src/main/java/seedu/iscam/model/util/meetingbook/ObservableMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.util.meetingbook;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import javafx.beans.value.ObservableObjectValue;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":" * Observable Meeting object that will notify listeners when the meeting contained changes.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"public class ObservableMeeting implements ObservableObjectValue\u003cMeeting\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    private Meeting meeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    private final List\u003cChangeListener\u003c? super Meeting\u003e\u003e listeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    public void setMeeting(Meeting newMeeting) {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"        Meeting oldMeeting \u003d this.meeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"        this.meeting \u003d newMeeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"        for (ChangeListener\u003c? super Meeting\u003e cl : listeners) {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"            cl.changed(this, oldMeeting, newMeeting);","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public Meeting get() {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        return meeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    public void addListener(ChangeListener\u003c? super Meeting\u003e listener) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        this.listeners.add(listener);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    public void removeListener(ChangeListener\u003c? super Meeting\u003e listener) {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        this.listeners.remove(listener);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    public Meeting getValue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        return meeting;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"            ObservableMeeting that \u003d (ObservableMeeting) o;","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"            return this.equals(that.meeting) \u0026\u0026 this.listeners.equals(that.listeners);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"JodyLorah":67}},{"path":"src/main/java/seedu/iscam/model/util/meetingbook/ReadOnlyMeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.model.util.meetingbook;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":" * Unmodifiable view of an iscam book","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"public interface ReadOnlyMeetingBook {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"JodyLorah":9,"Tomashiwa":7}},{"path":"src/main/java/seedu/iscam/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.client.ClientBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.meeting.MeetingBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.user.UserPrefsStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":" * API of the Storage component","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"public interface Storage extends ClientBookStorage, MeetingBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"    Path getClientBookFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"    Optional\u003cReadOnlyClientBook\u003e readClientBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"    void saveClientBook(ReadOnlyClientBook clientBook) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":17,"zoeykobe":26}},{"path":"src/main/java/seedu/iscam/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.client.ClientBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.meeting.MeetingBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.user.UserPrefsStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":" * Manages storage of ClientBook data in local storage.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"    private ClientBookStorage clientBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"    private MeetingBookStorage meetingBookStorage;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"     * Creates a {@code StorageManager} with the given","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"     * {@code ClientBookStorage}, {@code MeetingBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    public StorageManager(ClientBookStorage clientBookStorage,","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"                          MeetingBookStorage meetingBookStorage,","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"        super();","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"        this.clientBookStorage \u003d clientBookStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        this.meetingBookStorage \u003d meetingBookStorage;","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"zoeykobe"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"zoeykobe"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"zoeykobe"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ClientBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"zoeykobe"},"content":"    public Path getClientBookFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"zoeykobe"},"content":"        return clientBookStorage.getClientBookFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"zoeykobe"},"content":"    public Optional\u003cReadOnlyClientBook\u003e readClientBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"zoeykobe"},"content":"        return readClientBook(clientBookStorage.getClientBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"    public Optional\u003cReadOnlyClientBook\u003e readClientBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"        logger.fine(\"Attempting to read client data from file: \" + filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"zoeykobe"},"content":"        return clientBookStorage.readClientBook(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"    public void saveClientBook(ReadOnlyClientBook clientBook) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"zoeykobe"},"content":"        saveClientBook(clientBook, clientBookStorage.getClientBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"zoeykobe"},"content":"    public void saveClientBook(ReadOnlyClientBook clientBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"        logger.fine(\"Attempting to write client to data file: \" + filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"zoeykobe"},"content":"        clientBookStorage.saveClientBook(clientBook, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MeetingBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"        return meetingBookStorage.getMeetingBookFilePath();","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"        return readMeetingBook(meetingBookStorage.getMeetingBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"        logger.fine(\"Attempting to read meeting data from file: \" + filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"        return meetingBookStorage.readMeetingBook(filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"        saveMeetingBook(meetingBook, meetingBookStorage.getMeetingBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"        logger.fine(\"Attempting to write meetings to data file: \" + filePath);","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"        meetingBookStorage.saveMeetingBook(meetingBook, filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":45,"zoeykobe":69}},{"path":"src/main/java/seedu/iscam/storage/client/ClientBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":" * Represents a storage for {@link ClientBook}.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"public interface ClientBookStorage {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"    Path getClientBookFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"     * Returns ClientBook data as a {@link ReadOnlyClientBook}.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"    Optional\u003cReadOnlyClientBook\u003e readClientBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"     * @see #getClientBookFilePath()","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"    Optional\u003cReadOnlyClientBook\u003e readClientBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"     * Saves the given {@link ReadOnlyClientBook} to the storage.","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"     * @param clientBookBook cannot be null.","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"    void saveClientBook(ReadOnlyClientBook clientBookBook) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"zoeykobe"},"content":"     * @see #saveClientBook(ReadOnlyClientBook)","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"    void saveClientBook(ReadOnlyClientBook clientBookBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":3,"zoeykobe":42}},{"path":"src/main/java/seedu/iscam/storage/client/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Image;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    private final String insurancePlan;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    private final String location;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    private final List\u003cJsonAdaptedClientTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    private final String imageRes;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"            @JsonProperty(\"plan\") String insurancePlan, @JsonProperty(\"tagged\") List\u003cJsonAdaptedClientTag\u003e tagged,","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"            @JsonProperty(\"image\") String imageRes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        this.insurancePlan \u003d insurancePlan;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"        this.imageRes \u003d imageRes;","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"        insurancePlan \u003d source.getPlan().planName;","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"                .map(JsonAdaptedClientTag::new)","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"        imageRes \u003d source.getImageRes().value;","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"        final List\u003cTag\u003e clientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"        for (JsonAdaptedClientTag tag : tagged) {","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"            clientTags.add(tag.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Name.MESSAGE_TYPE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"        if (!Name.isValidLength(name)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Name.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"        if (!Phone.isValidPhoneLength(phone)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Phone.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"        if (!Phone.isValidNumbersOnly(phone)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Phone.MESSAGE_INPUT_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"        if (!Phone.isValidPhoneNumber(phone)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Phone.MESSAGE_STARTING_DIGIT_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"        if (!Email.isValidLength(email)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Email.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"zoeykobe"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"zoeykobe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"zoeykobe"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"zoeykobe"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"Zaiah0505"},"content":"            throw new IllegalValueException(String.format(Location.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"Zaiah0505"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"        if (!Location.isValidLength(location)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Location.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":131,"author":{"gitId":"Zaiah0505"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"        if (insurancePlan \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, InsurancePlan.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"Juzzanoob"},"content":"        if (!InsurancePlan.isValidPlan(insurancePlan)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"Juzzanoob"},"content":"            throw new IllegalValueException(InsurancePlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"JodyLorah"},"content":"        if (!InsurancePlan.isValidLength(insurancePlan)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(InsurancePlan.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":143,"author":{"gitId":"Juzzanoob"},"content":"        final InsurancePlan modelPlan \u003d new InsurancePlan(insurancePlan);","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"JodyLorah"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(clientTags);","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"Zaiah0505"},"content":"        if (imageRes \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"Zaiah0505"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"Zaiah0505"},"content":"                    Image.class.getSimpleName()));","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"Zaiah0505"},"content":"        if (!Image.isValidImageRes(imageRes)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"Zaiah0505"},"content":"            throw new IllegalValueException(String.format(Image.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"Zaiah0505"},"content":"                    Image.class.getSimpleName()));","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"Zaiah0505"},"content":"        final Image modelImage \u003d new Image(imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"Zaiah0505"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelLocation, modelPlan, modelTags, modelImage);","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":28,"JodyLorah":39,"zoeykobe":4,"Tomashiwa":3,"Juzzanoob":16,"-":70}},{"path":"src/main/java/seedu/iscam/storage/client/JsonAdaptedClientTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"class JsonAdaptedClientTag {","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    public JsonAdaptedClientTag(String tagName) {","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public JsonAdaptedClientTag(Tag source) {","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        if (!Tag.isValidLength(tagName)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Tag.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":7,"Tomashiwa":1,"-":42}},{"path":"src/main/java/seedu/iscam/storage/client/JsonClientBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":" * A class to access ClientBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"public class JsonClientBookStorage implements ClientBookStorage {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonClientBookStorage.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"    public JsonClientBookStorage(Path filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"    public Path getClientBookFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"    public Optional\u003cReadOnlyClientBook\u003e readClientBook() throws DataConversionException {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"        return readClientBook(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"     * Similar to {@link #readClientBook()}.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"    public Optional\u003cReadOnlyClientBook\u003e readClientBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"        Optional\u003cJsonSerializableClientBook\u003e jsonClientBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"                filePath, JsonSerializableClientBook.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"zoeykobe"},"content":"        if (!jsonClientBook.isPresent()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"            return Optional.of(jsonClientBook.get().toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"zoeykobe"},"content":"    public void saveClientBook(ReadOnlyClientBook clientBook) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"zoeykobe"},"content":"        saveClientBook(clientBook, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"zoeykobe"},"content":"     * Similar to {@link #saveClientBook(ReadOnlyClientBook)}.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"    public void saveClientBook(ReadOnlyClientBook clientBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"zoeykobe"},"content":"        requireNonNull(clientBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableClientBook(clientBook), filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-02-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":5,"JodyLorah":3,"zoeykobe":19,"-":54}},{"path":"src/main/java/seedu/iscam/storage/client/JsonSerializableClientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":" * An Immutable ClientBook that is serializable to JSON format.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"@JsonRootName(value \u003d \"clientbook\")","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"class JsonSerializableClientBook {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"     * Constructs a {@code JsonSerializableClientBook} with the given clients.","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"    public JsonSerializableClientBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"     * Converts a given {@code ReadOnlyClientBook} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableClientBook}.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"    public JsonSerializableClientBook(ReadOnlyClientBook source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"     * Converts this client book into the model\u0027s {@code ClientBook} object.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"    public ClientBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"        ClientBook clientBook \u003d new ClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"zoeykobe"},"content":"            if (clientBook.hasClient(client)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"            clientBook.addClient(client);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"        return clientBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":10,"zoeykobe":13,"Juzzanoob":1,"-":34}},{"path":"src/main/java/seedu/iscam/storage/meeting/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.CompletionStatus;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Description;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    private final String clientName;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    private final String dateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    private final String location;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    private final String description;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    private final List\u003cJsonAdaptedMeetingTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"    private final String status;","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"client\") String clientName, @JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"                              @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"                              @JsonProperty(\"description\") String description,","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"                              @JsonProperty(\"tags\") List\u003cJsonAdaptedMeetingTag\u003e tags,","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"                              @JsonProperty(\"status\") String status) {","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        clientName \u003d source.getClientName().toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        dateTime \u003d source.getDateTime().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"                .map(JsonAdaptedMeetingTag::new)","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"        // Name","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"        if (clientName \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Client.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"        if (!Name.isValidName(clientName)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Name.MESSAGE_TYPE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        if (!Name.isValidLength(clientName)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Name.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"Tomashiwa"},"content":"        final Name modelClient \u003d new Name(clientName);","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"Tomashiwa"},"content":"        // Date and time","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Tomashiwa"},"content":"        if (!DateTime.isStringValidFormat(dateTime)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":93,"author":{"gitId":"Tomashiwa"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"        final DateTime modelDateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"        // Location","lastModifiedDate":"2021-04-04"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"Zaiah0505"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(String.format(Location.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-04-05"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"        if (!Location.isValidLength(location)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Location.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"Zaiah0505"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"Tomashiwa"},"content":"        // Description","lastModifiedDate":"2021-04-04"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"Tomashiwa"},"content":"        // Tags","lastModifiedDate":"2021-04-04"},{"lineNumber":122,"author":{"gitId":"Tomashiwa"},"content":"        final List\u003cTag\u003e meetingTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-04"},{"lineNumber":123,"author":{"gitId":"Tomashiwa"},"content":"        for (JsonAdaptedMeetingTag tag : tags) {","lastModifiedDate":"2021-04-04"},{"lineNumber":124,"author":{"gitId":"Tomashiwa"},"content":"            meetingTags.add(tag.toModelType());","lastModifiedDate":"2021-04-04"},{"lineNumber":125,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(meetingTags);","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"Tomashiwa"},"content":"        final CompletionStatus status \u003d new CompletionStatus(this.status);","lastModifiedDate":"2021-04-04"},{"lineNumber":129,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"Tomashiwa"},"content":"        return new Meeting(modelClient, modelDateTime, modelLocation, modelDescription, modelTags, status);","lastModifiedDate":"2021-04-04"},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":14,"JodyLorah":15,"Tomashiwa":32,"frisciliasultan":72}},{"path":"src/main/java/seedu/iscam/storage/meeting/JsonAdaptedMeetingTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"class JsonAdaptedMeetingTag {","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    public JsonAdaptedMeetingTag(String tagName) {","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public JsonAdaptedMeetingTag(Tag source) {","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        if (!Tag.isValidLength(tagName)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"            throw new IllegalValueException(Tag.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":7,"Tomashiwa":1,"-":42}},{"path":"src/main/java/seedu/iscam/storage/meeting/JsonMeetingBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.util.FileUtil;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.util.JsonUtil;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":" * A class to access MeetingBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"public class JsonMeetingBookStorage implements MeetingBookStorage {","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonMeetingBookStorage.class);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    public JsonMeetingBookStorage(Path filePath) {","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    public Path getMeetingBookFilePath() {","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        return filePath;","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException {","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        return readMeetingBook(filePath);","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"     * Similar to {@link #readMeetingBook()}.","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"    public Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"        Optional\u003cJsonSerializableMeetingBook\u003e jsonMeetingBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"                filePath, JsonSerializableMeetingBook.class);","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        if (!jsonMeetingBook.isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"            return Optional.of(jsonMeetingBook.get().toModelType());","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        saveMeetingBook(meetingBook, filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"     * Similar to {@link #saveMeetingBook(ReadOnlyMeetingBook)}.","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"    public void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(meetingBook);","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableMeetingBook(meetingBook), filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"JodyLorah":82}},{"path":"src/main/java/seedu/iscam/storage/meeting/JsonSerializableMeetingBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":" * An Immutable MeetingBook that is serializable to JSON format.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"@JsonRootName(value \u003d \"meetingbook\")","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"class JsonSerializableMeetingBook {","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meetings list contains duplicate meeting(s).\";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"     * Constructs a {@code JsonSerializableMeetingBook} with the given meetings.","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    public JsonSerializableMeetingBook(@JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"     * Converts a given {@code ReadOnlyMeetingBook} into this class for Jackson use.","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableMeetingBook}.","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    public JsonSerializableMeetingBook(ReadOnlyMeetingBook source) {","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"     * Converts this meeting book into the model\u0027s {@code MeetingBook} object.","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"    public MeetingBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        MeetingBook meetingBook \u003d new MeetingBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"            if (meetingBook.hasMeeting(meeting)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"            meetingBook.addMeeting(meeting);","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        return meetingBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"JodyLorah":60}},{"path":"src/main/java/seedu/iscam/storage/meeting/MeetingBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":" * Represents a storage for {@link MeetingBook}.","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"public interface MeetingBookStorage {","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"    Path getMeetingBookFilePath();","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"     * Returns MeetingBook data as a {@link ReadOnlyMeetingBook}.","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"     * @see #getMeetingBookFilePath()","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"     * Saves the given {@link ReadOnlyMeetingBook} to the storage.","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"     * @param meetingBook cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    void saveMeetingBook(ReadOnlyMeetingBook meetingBook) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"     * @see #saveMeetingBook(ReadOnlyMeetingBook)","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"JodyLorah":48}},{"path":"src/main/java/seedu/iscam/storage/user/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.user;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":3,"-":42}},{"path":"src/main/java/seedu/iscam/storage/user/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.user;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":5,"-":30}},{"path":"src/main/java/seedu/iscam/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"    private static final String FXML \u003d \"ClientCard.fxml\";","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on ClientBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public final Client client;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    private Label clientLocation;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        clientLocation.setText(client.getLocation().value);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        client.getTags().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":13,"zoeykobe":2,"-":58}},{"path":"src/main/java/seedu/iscam/ui/ClientDetailFragment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ObservableClient;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"public class ClientDetailFragment extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    private static final String FXML \u003d \"ClientDetailFragment.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    private Client client;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"    private ObservableList\u003cMeeting\u003e meetingList;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"    private final Image placeholderImage \u003d new Image(this.getClass()","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"            .getResourceAsStream(\"/images/person_icon.png\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"    private ImageView profileImage;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    private Label profileImageRef;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    private Label name;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    private Label phone;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"    private Label clientLocation;","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"    private Label email;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"    private ListView\u003cMeeting\u003e clientMeetingListView;","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    private VBox insurancePlanBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"    private Label insurancePlanName;","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"     * Creates a ClientDetailFragment that observes the given ObservableClient","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"     * @param observableClient ObservableClient to monitor","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"    public ClientDetailFragment(ObservableClient observableClient, ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"        observableClient.addListener(new ClientListener());","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"        this.meetingList \u003d meetingList;","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"        profileImage.setPreserveRatio(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"        insurancePlanBox.setVisible(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"    public void setClientDetails(Client client) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Zaiah0505"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"        Circle imageMask \u003d new Circle(60, 60, 60);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"        profileImage.setClip(imageMask);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"        profileImage.setImage(getImageFromData(client.getImageRes().value));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"Zaiah0505"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Zaiah0505"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"        clientLocation.setText(client.getLocation().value);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"        client.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"        clientMeetingListView.setItems(","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"                meetingList.filtered(meeting -\u003e meeting.getClientName().equals(client.getName())));","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":"        clientMeetingListView.setCellFactory(listview -\u003e new MeetingListPanel.MeetingListViewCell());","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Zaiah0505"},"content":"        insurancePlanBox.setVisible(true);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Zaiah0505"},"content":"        insurancePlanName.setText(client.getPlan().planName);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"    // TODO: Migrate image access to the model and storage and not hardcode the \"data\" path","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"Zaiah0505"},"content":"    private Image getImageFromData(String imageRes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"Zaiah0505"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"            InputStream is \u003d new FileInputStream(String.valueOf(Path.of(\"data\", imageRes)));","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"Zaiah0505"},"content":"            profileImageRef.setText(imageRes);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"Zaiah0505"},"content":"            return new Image(is, 120, 120, false, true);","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"Zaiah0505"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":"            profileImageRef.setText(imageRes + \"\\n(image not found)\");","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"Zaiah0505"},"content":"            return placeholderImage;","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"Zaiah0505"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"Zaiah0505"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Zaiah0505"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Zaiah0505"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Zaiah0505"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Zaiah0505"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Zaiah0505"},"content":"        if (!(other instanceof ClientDetailFragment)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"Zaiah0505"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Zaiah0505"},"content":"        // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Zaiah0505"},"content":"        ClientDetailFragment fragment \u003d (ClientDetailFragment) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"Zaiah0505"},"content":"        return client.equals(fragment.client);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"Zaiah0505"},"content":"    class ClientListener implements ChangeListener\u003cClient\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"Zaiah0505"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"        public void changed(ObservableValue\u003c? extends Client\u003e observable, Client oldValue, Client newValue) {","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"Zaiah0505"},"content":"            if (observable.getValue() !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"Zaiah0505"},"content":"                setClientDetails(observable.getValue());","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"Zaiah0505"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Zaiah0505":125,"JodyLorah":1}},{"path":"src/main/java/seedu/iscam/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        super(FXML);","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"                setText(null);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"            } else {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":46}},{"path":"src/main/java/seedu/iscam/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.CommandResult;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"Juzzanoob"},"content":"        } catch (CommandException | ParseException | EventException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"         * @see seedu.iscam.logic.Logic#execute(String)","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException, EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Zaiah0505":5,"Juzzanoob":3,"-":78}},{"path":"src/main/java/seedu/iscam/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-w17-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zaiah0505":4,"Tomashiwa":1,"-":97}},{"path":"src/main/java/seedu/iscam/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.Logic;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.CommandResult;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"    private final Logic logic;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"    private ObservableValue\u003cBoolean\u003e isClientMode;","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"    private StackPane clientDetailFragmentPlaceholder;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"zoeykobe"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"zoeykobe"},"content":"        this.isClientMode \u003d logic.getIsClientMode();","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"zoeykobe"},"content":"        isClientMode.addListener(new BooleanListener());","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredClientList());","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getClientBookFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"Zaiah0505"},"content":"        ClientDetailFragment clientDetailFragment \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"Zaiah0505"},"content":"                new ClientDetailFragment(logic.getDetailedClient(), logic.getFilteredMeetingList());","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"Zaiah0505"},"content":"        clientDetailFragmentPlaceholder.getChildren().add(clientDetailFragment.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"JodyLorah"},"content":"    public ClientListPanel getClientListPanel() {","lastModifiedDate":"2021-03-08"},{"lineNumber":184,"author":{"gitId":"JodyLorah"},"content":"        return clientListPanel;","lastModifiedDate":"2021-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"Zaiah0505"},"content":"     * @see seedu.iscam.logic.Logic#execute(String)","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"Juzzanoob"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException, EventException {","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":213,"author":{"gitId":"zoeykobe"},"content":"    class BooleanListener implements ChangeListener\u003cBoolean\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"zoeykobe"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"zoeykobe"},"content":"        public void changed(ObservableValue\u003c? extends Boolean\u003e observable, Boolean oldValue, Boolean newValue) {","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"zoeykobe"},"content":"            clientDetailFragmentPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"zoeykobe"},"content":"            if (newValue) {","lastModifiedDate":"2021-03-26"},{"lineNumber":218,"author":{"gitId":"Zaiah0505"},"content":"                ClientDetailFragment clientDetailFragment \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"Zaiah0505"},"content":"                        new ClientDetailFragment(logic.getDetailedClient(), logic.getFilteredMeetingList());","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"zoeykobe"},"content":"                clientDetailFragmentPlaceholder.getChildren().add(clientDetailFragment.getRoot());","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"zoeykobe"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"zoeykobe"},"content":"                meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2021-03-26"},{"lineNumber":223,"author":{"gitId":"zoeykobe"},"content":"                clientDetailFragmentPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2021-03-26"},{"lineNumber":224,"author":{"gitId":"zoeykobe"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"zoeykobe"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zaiah0505":21,"JodyLorah":7,"zoeykobe":22,"Juzzanoob":2,"-":175}},{"path":"src/main/java/seedu/iscam/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":" * An UI component that displays information of a {@code meeting}.","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"    private static final String FXML \u003d \"MeetingCard.fxml\";","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on ClientBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"    public final Meeting meeting;","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"    private Label meetingName;","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"    private Label id;","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"    private Label dateTime;","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"    private Label meetingLocation;","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"    private Label description;","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"    private Label status;","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"     * Creates a {@code meetingCode} with the given {@code meeting} and index to display.","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"zoeykobe"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":"        super(FXML);","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"zoeykobe"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"zoeykobe"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"zoeykobe"},"content":"        meetingName.setText(meeting.getClientName().fullName);","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"E, MMM dd yyyy HH:mm:ss\");","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"zoeykobe"},"content":"        String dateTimeString \u003d dateTimeFormatter.format(meeting.getDateTime().get());","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"        dateTime.setText(dateTimeString.substring(0, dateTimeString.length() - 3));","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"zoeykobe"},"content":"        meetingLocation.setText(meeting.getLocation().value);","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"        description.setText(meeting.getDescription().value);","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"        if (meeting.getStatus().isComplete()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"            status.setText(\"Completed\");","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"zoeykobe"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"            status.setText(\"Not Completed\");","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"zoeykobe"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"zoeykobe"},"content":"        meeting.getTags().stream()","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"zoeykobe"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"zoeykobe"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"zoeykobe"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"zoeykobe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"zoeykobe"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"zoeykobe"},"content":"            return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"zoeykobe"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"zoeykobe"},"content":"            return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"zoeykobe"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"zoeykobe"},"content":"        // state check","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"zoeykobe"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"zoeykobe"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"zoeykobe"},"content":"                \u0026\u0026 meeting.equals(card.meeting);","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"zoeykobe":83,"Tomashiwa":4}},{"path":"src/main/java/seedu/iscam/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"     * Creates a {@code meetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"        super(FXML);","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code meeting} using a {@code meetingCard}.","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"    static class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"                setText(null);","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"zoeykobe"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Zaiah0505":1,"zoeykobe":48}},{"path":"src/main/java/seedu/iscam/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zaiah0505":1,"-":27}},{"path":"src/main/java/seedu/iscam/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":1,"-":27}},{"path":"src/main/java/seedu/iscam/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zaiah0505":4,"-":11}},{"path":"src/main/java/seedu/iscam/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.MainApp;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.Logic;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"                                               String contentText) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        alert.setTitle(title);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"        alert.showAndWait();","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zaiah0505":25,"-":64}},{"path":"src/main/java/seedu/iscam/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.MainApp;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zaiah0505":18,"-":75}},{"path":"src/main/resources/view/ClientCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_large_label\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_large_label\"/\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"clientLocation\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$location\"/\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":1,"zoeykobe":5,"-":29}},{"path":"src/main/resources/view/ClientDetailFragment.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"        \u003cHBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"160\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"            \u003cVBox alignment\u003d\"CENTER\" maxWidth\u003d\"120\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"                \u003cImageView fx:id\u003d\"profileImage\" fitHeight\u003d\"120\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel fx:id\u003d\"profileImageRef\" styleClass\u003d\"details_small_label\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" \u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"Use \u0027show\u0027 command to display a client here\" styleClass\u003d\"details_large_label\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"                \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"details_small_label\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel fx:id\u003d\"clientLocation\" styleClass\u003d\"details_small_label\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"details_small_label\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"details_small_label\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"        \u003cHBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"100\" VBox.vgrow\u003d\"ALWAYS\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"            \u003cVBox alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"                \u003cListView fx:id\u003d\"clientMeetingListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"            \u003cVBox alignment\u003d\"TOP_LEFT\" fx:id\u003d\"insurancePlanBox\" styleClass\u003d\"insurance-pane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel text\u003d\"Insurance Plan\" styleClass\u003d\"details_large_label\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"                \u003cLabel fx:id\u003d\"insurancePlanName\" text\u003d\"/$insuranceName\" styleClass\u003d\"details_small_label\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"Zaiah0505":41}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"    \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":1,"JodyLorah":1,"-":5}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Zaiah0505":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"zoeykobe"},"content":".list-cell:filled {","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"zoeykobe"},"content":"    -fx-padding: 2 0 2 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"zoeykobe"},"content":".cell_small_label {","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"zoeykobe"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"zoeykobe"},"content":".cell_medium_label {","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"zoeykobe"},"content":".cell_large_label {","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"zoeykobe"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"Zaiah0505"},"content":".details_large_label {","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"Zaiah0505"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"Zaiah0505"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"Zaiah0505"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"Zaiah0505"},"content":".details_small_label {","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"Zaiah0505"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"Zaiah0505"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"Zaiah0505"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"Zaiah0505"},"content":".insurance-pane {","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"Zaiah0505"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"zoeykobe"},"content":"#meetingCardPane {","lastModifiedDate":"2021-03-27"},{"lineNumber":333,"author":{"gitId":"zoeykobe"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-width: 0 0 3 0;","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"zoeykobe"},"content":"    -fx-border-color: aqua;","lastModifiedDate":"2021-03-27"},{"lineNumber":336,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"JodyLorah"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2021-03-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Zaiah0505":16,"JodyLorah":1,"zoeykobe":18,"-":340}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Zaiah0505":3,"-":36}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"         title\u003d\"iScam\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"                \u003cHBox fx:id\u003d\"clientFragment\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"                      minWidth\u003d\"500\" prefWidth\u003d\"500\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"                    \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"                          HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"                        \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"                    \u003cVBox fx:id\u003d\"clientDetail\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"                          HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"                        \u003cStackPane fx:id\u003d\"clientDetailFragmentPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Zaiah0505":16,"JodyLorah":1,"Tomashiwa":1,"-":54}},{"path":"src/main/resources/view/MeetingCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"\u003cHBox id\u003d\"meetingCardPane\" fx:id\u003d\"meetingCardPane\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"                \u003cInsets bottom\u003d\"0\" left\u003d\"5\" right\u003d\"5\" top\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_large_label\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"                \u003cLabel fx:id\u003d\"meetingName\" styleClass\u003d\"cell_large_label\" text\u003d\"\\$meetingName\"\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$dateTime\"\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"meetingLocation\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$meetingLocation\"\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"zoeykobe"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"zoeykobe":40,"Tomashiwa":1}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zoeykobe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"    \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"zoeykobe":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Zaiah0505":2,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"Zaiah0505":1,"-":10}},{"path":"src/test/data/JsonClientBookStorageTest/invalidAndValidClientClientBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"  \"client\": [ {","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"    \"name\": \"Valid Client\",","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"    \"phone\": \"94824242\",","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"    \"location\": \"4th street\"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"    \"name\": \"Client With Invalid Phone Field\",","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"    \"location\": \"4th street\"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JodyLorah":4,"zoeykobe":2,"-":7}},{"path":"src/test/data/JsonClientBookStorageTest/invalidClientClientBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"    \"name\": \"Client with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"    \"location\": \"4th street\"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JodyLorah":2,"zoeykobe":1,"-":5}},{"path":"src/test/data/JsonSerializableClientBookTest/duplicateClientClientBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"    \"location\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"    \"plan\" : \"Plan A\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"    \"plan\" : \"Plan A\",","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"    \"location\": \"4th street\",","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":1,"zoeykobe":1,"Juzzanoob":2,"-":10}},{"path":"src/test/data/JsonSerializableClientBookTest/invalidClientClientBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"    \"phone\": \"99482424\",","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"    \"location\": \"4th street\"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JodyLorah":2,"zoeykobe":1,"-":5}},{"path":"src/test/data/JsonSerializableClientBookTest/typicalClientsClientBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"  \"_comment\": \"ClientBook save file which contains the same Client values as in TypicalClients#getTypicalClientBook()\",","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"  \"clients\" : [ {","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"    \"location\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"    \"plan\" : \"Plan A\",","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"    \"location\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"    \"plan\" : \"Plan B\",","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"    \"location\" : \"wall street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    \"plan\" : \"Life\",","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"    \"location\" : \"10th street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    \"plan\" : \"Plan A\",","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    \"phone\" : \"89482224\",","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"    \"location\" : \"michegan ave\",","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    \"plan\" : \"Protect\",","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"    \"phone\" : \"64824273\",","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"zoeykobe"},"content":"    \"location\" : \"little tokyo\",","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    \"plan\" : \"MediShield\",","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"    \"phone\" : \"94824412\",","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"    \"location\" : \"4th street\",","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"    \"plan\" : \"Plan A\",","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"    \"image\" : \"default.png\"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":14,"JodyLorah":4,"zoeykobe":8,"Juzzanoob":4,"frisciliasultan":3,"-":27}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"  \"clientBookFilePath\" : \"clientbook.json\",","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"  \"meetingBookFilePath\" : \"meetingbook.json\"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JodyLorah":2,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"  \"clientBookFilePath\" : \"clientbook.json\",","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"  \"meetingBookFilePath\" : \"meetingbook.json\"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JodyLorah":2,"-":10}},{"path":"src/test/java/seedu/iscam/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Zaiah0505":1,"-":57}},{"path":"src/test/java/seedu/iscam/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Zaiah0505":1,"-":26}},{"path":"src/test/java/seedu/iscam/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":2,"-":133}},{"path":"src/test/java/seedu/iscam/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.core.index;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        final Index fifthClientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(fifthClientIndex.equals(fifthClientIndex));","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(fifthClientIndex.equals(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(fifthClientIndex.equals(5.0f));","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(fifthClientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":7,"-":51}},{"path":"src/test/java/seedu/iscam/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Zaiah0505":2,"-":34}},{"path":"src/test/java/seedu/iscam/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Zaiah0505":3,"-":105}},{"path":"src/test/java/seedu/iscam/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Config;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Zaiah0505":4,"-":112}},{"path":"src/test/java/seedu/iscam/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":2,"-":21}},{"path":"src/test/java/seedu/iscam/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.TestUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":3,"-":42}},{"path":"src/test/java/seedu/iscam/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Zaiah0505":2,"-":141}},{"path":"src/test/java/seedu/iscam/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PLAN_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.commands.ClearCommand;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.logic.commands.CommandResult;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.logic.events.exceptions.EventException;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.storage.StorageManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.client.JsonClientBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.meeting.JsonMeetingBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.user.JsonUserPrefsStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        JsonClientBookStorage clientBookStorage \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"                new JsonClientBookStorage(temporaryFolder.resolve(\"clientBook.json\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        JsonMeetingBookStorage meetingBookStorage \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"                new JsonMeetingBookStorage(temporaryFolder.resolve(\"meetingBook.json\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        StorageManager storage \u003d new StorageManager(clientBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"        String clearCommand \u003d ClearCommand.COMMAND_WORD;","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"        assertCommandSuccess(clearCommand, ClearCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"        // Setup LogicManager with JsonClientBookIoExceptionThrowingStub","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"        JsonClientBookStorage clientBookStorage \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"                new JsonClientBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionClientBook.json\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        JsonMeetingBookStorage meetingBookStorage \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"                new JsonMeetingBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionMeetingBook.json\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"        StorageManager storage \u003d new StorageManager(clientBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"                + LOCATION_DESC_AMY + PLAN_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"                                      Model expectedModel) throws CommandException, ParseException, EventException {","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(model.getClientBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"JodyLorah"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"JodyLorah"},"content":"     * A stub class to throw an {@code IOException} when the save method is called for client.","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"zoeykobe"},"content":"    private static class JsonClientBookIoExceptionThrowingStub extends JsonClientBookStorage {","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"zoeykobe"},"content":"        private JsonClientBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"JodyLorah"},"content":"        public void saveClientBook(ReadOnlyClientBook clientBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"JodyLorah"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"JodyLorah"},"content":"     * A stub class to throw an {@code IOException} when the save method is called for meeting.","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"JodyLorah"},"content":"    private static class JsonMeetingBookIoExceptionThrowingStub extends JsonMeetingBookStorage {","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"JodyLorah"},"content":"        private JsonMeetingBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"JodyLorah"},"content":"            super(filePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"JodyLorah"},"content":"        public void saveMeetingBook(ReadOnlyMeetingBook meetingBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zaiah0505":13,"JodyLorah":43,"zoeykobe":2,"Tomashiwa":1,"Juzzanoob":8,"frisciliasultan":4,"-":118}},{"path":"src/test/java/seedu/iscam/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(model.getClientBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        assertCommandSuccess(new AddCommand(validClient), model,","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"        Client clientInList \u003d model.getClientBook().getClientList().get(0);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        assertCommandFailure(new AddCommand(clientInList), model, AddCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Zaiah0505":7,"JodyLorah":8,"zoeykobe":1,"Tomashiwa":2,"frisciliasultan":2,"-":26}},{"path":"src/test/java/seedu/iscam/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ObservableClient;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ObservableMeeting;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        CommandResult commandResult \u003d new AddCommand(validClient).execute(modelStub);","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        AddCommand addCommand \u003d new AddCommand(validClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"Juzzanoob"},"content":"        @Override","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"Juzzanoob"},"content":"        public Index getIndexOfClient(Client client) {","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"Juzzanoob"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"zoeykobe"},"content":"        public Path getClientBookFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"zoeykobe"},"content":"        public void setClientBookFilePath(Path clientBookFilePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"JodyLorah"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"Juzzanoob"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"Juzzanoob"},"content":"        public void addClientAtIndex(Index index, Client client) {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"zoeykobe"},"content":"        public void setClientBook(ReadOnlyClientBook newData) {","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"zoeykobe"},"content":"        public ReadOnlyClientBook getClientBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"JodyLorah"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"JodyLorah"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"JodyLorah"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"JodyLorah"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"Tomashiwa"},"content":"        public MeetingBook getMeetingBook() {","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":174,"author":{"gitId":"Tomashiwa"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":175,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":176,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":177,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":178,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":179,"author":{"gitId":"Tomashiwa"},"content":"        public boolean hasConflictingMeetingWith(Meeting meeting, Meeting... exclusions) {","lastModifiedDate":"2021-04-05"},{"lineNumber":180,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-04"},{"lineNumber":181,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":182,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":183,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"JodyLorah"},"content":"        public ObservableMeeting getDetailedMeeting() {","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"JodyLorah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"Zaiah0505"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"Zaiah0505"},"content":"        public ObservableClient getDetailedClient() {","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"Zaiah0505"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"Tomashiwa"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":196,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":197,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":198,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":199,"author":{"gitId":"Tomashiwa"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2021-03-21"},{"lineNumber":200,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":201,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":202,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":203,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":204,"author":{"gitId":"Tomashiwa"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2021-03-21"},{"lineNumber":205,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":206,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":207,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":208,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"JodyLorah"},"content":"        public void setMeetingBook(ReadOnlyMeetingBook newData) {","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"JodyLorah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"JodyLorah"},"content":"        public Path getMeetingBookFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"JodyLorah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"JodyLorah"},"content":"        public void setMeetingBookFilePath(Path meetingBookFilePath) {","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"JodyLorah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":224,"author":{"gitId":"Tomashiwa"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2021-03-21"},{"lineNumber":225,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":226,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":227,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":228,"author":{"gitId":"Tomashiwa"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":229,"author":{"gitId":"Tomashiwa"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2021-03-21"},{"lineNumber":230,"author":{"gitId":"Tomashiwa"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":231,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":232,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"Zaiah0505"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"Zaiah0505"},"content":"        public void setDetailedClient(Client client) {","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"Zaiah0505"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"Zaiah0505"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":239,"author":{"gitId":"JodyLorah"},"content":"        public void setDetailedMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"JodyLorah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":241,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":243,"author":{"gitId":"JodyLorah"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":244,"author":{"gitId":"zoeykobe"},"content":"        public void setClientMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":245,"author":{"gitId":"zoeykobe"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":246,"author":{"gitId":"zoeykobe"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":247,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":248,"author":{"gitId":"zoeykobe"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":249,"author":{"gitId":"zoeykobe"},"content":"        public void setMeetingMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":250,"author":{"gitId":"zoeykobe"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":251,"author":{"gitId":"zoeykobe"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":252,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":253,"author":{"gitId":"zoeykobe"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":254,"author":{"gitId":"zoeykobe"},"content":"        public ObservableValue\u003cBoolean\u003e getIsClientMode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":255,"author":{"gitId":"JodyLorah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"JodyLorah"},"content":"     * A Model stub that contains a single client.","lastModifiedDate":"2021-03-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"JodyLorah"},"content":"    private class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2021-03-08"},{"lineNumber":263,"author":{"gitId":"JodyLorah"},"content":"        private final Client client;","lastModifiedDate":"2021-03-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"JodyLorah"},"content":"        ModelStubWithClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":266,"author":{"gitId":"JodyLorah"},"content":"            requireNonNull(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":267,"author":{"gitId":"JodyLorah"},"content":"            this.client \u003d client;","lastModifiedDate":"2021-03-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"JodyLorah"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":272,"author":{"gitId":"JodyLorah"},"content":"            requireNonNull(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":273,"author":{"gitId":"JodyLorah"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"JodyLorah"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2021-03-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"JodyLorah"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2021-03-08"},{"lineNumber":281,"author":{"gitId":"JodyLorah"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"JodyLorah"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":285,"author":{"gitId":"JodyLorah"},"content":"            requireNonNull(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":286,"author":{"gitId":"JodyLorah"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"JodyLorah"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":291,"author":{"gitId":"JodyLorah"},"content":"            requireNonNull(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":292,"author":{"gitId":"JodyLorah"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"zoeykobe"},"content":"        public ReadOnlyClientBook getClientBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":297,"author":{"gitId":"zoeykobe"},"content":"            return new ClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Zaiah0505":16,"JodyLorah":75,"zoeykobe":18,"Tomashiwa":42,"Juzzanoob":11,"-":139}},{"path":"src/test/java/seedu/iscam/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        Model model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"        expectedModel.setClientBook(new ClientBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"        expectedModel.setMeetingBook(new MeetingBook());","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":2,"zoeykobe":1,"Tomashiwa":3,"frisciliasultan":3,"-":22}},{"path":"src/test/java/seedu/iscam/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Zaiah0505":1,"-":53}},{"path":"src/test/java/seedu/iscam/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_IMAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91234567\";","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    public static final String VALID_PHONE_BOB \u003d \"62222222\";","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"    public static final String VALID_LOCATION_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"    public static final String VALID_LOCATION_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"    public static final String VALID_PLAN_AMY \u003d \"Plan A\";","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"    public static final String VALID_PLAN_BOB \u003d \"Plan B\";","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"    public static final String VALID_IMAGE \u003d \"default.png\";","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":"    public static final String LOCATION_DESC_AMY \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_AMY;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"zoeykobe"},"content":"    public static final String LOCATION_DESC_BOB \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Juzzanoob"},"content":"    public static final String PLAN_DESC_AMY \u003d \" \" + PREFIX_PLAN + VALID_PLAN_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Juzzanoob"},"content":"    public static final String PLAN_DESC_BOB \u003d \" \" + PREFIX_PLAN + VALID_PLAN_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"    public static final String IMAGE_DESC \u003d \" \" + PREFIX_IMAGE + VALID_IMAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"zoeykobe"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for locations","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    public static final String INVALID_PLAN_DESC \u003d \" \" + PREFIX_PLAN + \"Plan $\"; // \u0027$\" no allowed in insurance plans","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"    public static final String INVALID_IMAGE_DESC \u003d \" \" + PREFIX_IMAGE + \"morgan.jp\"; // File extension not allowed","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"    public static final EditCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"    public static final EditCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"zoeykobe"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Juzzanoob"},"content":"                .withPlan(VALID_PLAN_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"                .withPlan(VALID_PLAN_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"Zaiah0505"},"content":"     * - the iscam book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"zoeykobe"},"content":"        ClientBook expectedClientBook \u003d new ClientBook(actualModel.getClientBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":121,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(expectedClientBook, actualModel.getClientBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"Zaiah0505"},"content":"     * {@code model}\u0027s iscam book.","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Zaiah0505":18,"JodyLorah":16,"zoeykobe":9,"Tomashiwa":1,"Juzzanoob":8,"-":86}},{"path":"src/test/java/seedu/iscam/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    private Model model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getClientBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(model.getClientBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"        // ensures that outOfBoundIndex is still in bounds of iscam book list","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"zoeykobe"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getClientBook().getClientList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Zaiah0505":12,"JodyLorah":23,"zoeykobe":1,"Tomashiwa":3,"frisciliasultan":2,"-":69}},{"path":"src/test/java/seedu/iscam/logic/commands/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"        // different iscam -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"zoeykobe"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withLocation(VALID_LOCATION_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Zaiah0505":11,"JodyLorah":6,"zoeykobe":1,"-":40}},{"path":"src/test/java/seedu/iscam/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    private Model model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(new ClientBook(model.getClientBook()),","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"                new MeetingBook(model.getMeetingBook()), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastClient, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(new ClientBook(model.getClientBook()),","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"                new MeetingBook(model.getMeetingBook()), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, new EditClientDescriptor());","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(new ClientBook(model.getClientBook()),","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"                new MeetingBook(model.getMeetingBook()), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT,","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(new ClientBook(model.getClientBook()),","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"                new MeetingBook(model.getMeetingBook()), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_CLIENT, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"Zaiah0505"},"content":"        // edit client in filtered list into a duplicate in iscam book","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"zoeykobe"},"content":"        Client clientInList \u003d model.getClientBook().getClientList().get(INDEX_SECOND_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT,","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"JodyLorah"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"Zaiah0505"},"content":"     * but smaller than size of iscam book","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"Zaiah0505"},"content":"        // ensures that outOfBoundIndex is still in bounds of iscam book list","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"zoeykobe"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getClientBook().getClientList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"JodyLorah"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"JodyLorah"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"JodyLorah"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, DESC_AMY);","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"JodyLorah"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_CLIENT, copyDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_CLIENT, DESC_AMY)));","lastModifiedDate":"2021-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_CLIENT, DESC_BOB)));","lastModifiedDate":"2021-03-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Zaiah0505":22,"JodyLorah":50,"zoeykobe":2,"Tomashiwa":9,"frisciliasultan":2,"-":94}},{"path":"src/test/java/seedu/iscam/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Zaiah0505":5,"-":15}},{"path":"src/test/java/seedu/iscam/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.CARL;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.ELLE;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.FIONA;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    private Model model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Zaiah0505":8,"JodyLorah":10,"Tomashiwa":2,"frisciliasultan":3,"-":61}},{"path":"src/test/java/seedu/iscam/logic/commands/FindPlansCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.CARL;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.ELLE;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.FIONA;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.client.PlanContainsKeywordsPredicate;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"/**","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":" */","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"public class FindPlansCommandTest {","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    private Model model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public void equals() {","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        PlanContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"                new PlanContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        PlanContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"                new PlanContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        FindPlansCommand findFirstPlanCommand \u003d new FindPlansCommand(firstPredicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        FindPlansCommand findSecondPlanCommand \u003d new FindPlansCommand(secondPredicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        assertTrue(findFirstPlanCommand.equals(findFirstPlanCommand));","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        FindPlansCommand findFirstPlanCommandCopy \u003d new FindPlansCommand(firstPredicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        assertTrue(findFirstPlanCommand.equals(findFirstPlanCommandCopy));","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        assertFalse(findFirstPlanCommand.equals(1));","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"        assertFalse(findFirstPlanCommand.equals(null));","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        assertFalse(findFirstPlanCommand.equals(findSecondPlanCommand));","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        PlanContainsKeywordsPredicate predicate \u003d preparePlanPredicate(\" \");","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        FindPlansCommand command \u003d new FindPlansCommand(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        PlanContainsKeywordsPredicate predicate \u003d preparePlanPredicate(\"Life Protect MediShield\");","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"        FindPlansCommand command \u003d new FindPlansCommand(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"        // Returns true if CARL, ELLE, FIONA are displayed","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"        // because they contain the plans with the search keyword.","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"     * Parses {@code userInput} into a {@code PlanContainsKeywordsPredicate}.","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"    private PlanContainsKeywordsPredicate preparePlanPredicate(String userInput) {","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"        return new PlanContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"frisciliasultan":87}},{"path":"src/test/java/seedu/iscam/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Zaiah0505":5,"-":15}},{"path":"src/test/java/seedu/iscam/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"        expectedModel \u003d new ModelManager(model.getClientBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Zaiah0505":6,"JodyLorah":2,"Tomashiwa":2,"frisciliasultan":2,"-":28}},{"path":"src/test/java/seedu/iscam/logic/commands/ShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.Messages;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":" * Contains integration tests (Interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":" * {@code ShowCommand}.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"public class ShowCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    private Model model \u003d new ModelManager(getTypicalClientBook(), getTypicalMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"        Client clientToShow \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"        ShowCommand showCommand \u003d new ShowCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"        String expectedMessage \u003d String.format(ShowCommand.MESSAGE_SHOW_CLIENT_SUCCESS, clientToShow);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getClientBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"        expectedModel.setDetailedClient(clientToShow);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"        assertCommandSuccess(showCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Zaiah0505"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Zaiah0505"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Zaiah0505"},"content":"        ShowCommand showCommand \u003d new ShowCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Zaiah0505"},"content":"        assertCommandFailure(showCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Zaiah0505"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Zaiah0505"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"        Client clientToShow \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Zaiah0505"},"content":"        ShowCommand showCommand \u003d new ShowCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"        String expectedMessage \u003d String.format(ShowCommand.MESSAGE_SHOW_CLIENT_SUCCESS, clientToShow);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"        Model expectedModel \u003d new ModelManager(model.getClientBook(), model.getMeetingBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Zaiah0505"},"content":"        expectedModel.setDetailedClient(clientToShow);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Zaiah0505"},"content":"        showClientAtIndex(expectedModel, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Zaiah0505"},"content":"        assertCommandSuccess(showCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"Zaiah0505"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"Zaiah0505"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"        // ensures that outOfBoundIndex is still in bounds of iscam book list","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"Zaiah0505"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getClientBook().getClientList().size());","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"Zaiah0505"},"content":"        ShowCommand showCommand \u003d new ShowCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"        assertCommandFailure(showCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"Zaiah0505"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"Zaiah0505"},"content":"    public void equals() {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"        ShowCommand showFirstCommand \u003d new ShowCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Zaiah0505"},"content":"        ShowCommand showSecondCommand \u003d new ShowCommand(INDEX_SECOND_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Zaiah0505"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommand));","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"Zaiah0505"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"Zaiah0505"},"content":"        ShowCommand showFirstCommandCopy \u003d new ShowCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommandCopy));","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"Zaiah0505"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"        assertFalse(showFirstCommand.equals(1));","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"Zaiah0505"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"Zaiah0505"},"content":"        assertFalse(showFirstCommand.equals(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Zaiah0505"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"        assertFalse(showFirstCommand.equals(showSecondCommand));","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Zaiah0505":94,"JodyLorah":1,"Tomashiwa":3,"frisciliasultan":2}},{"path":"src/test/java/seedu/iscam/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_PLAN_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PLAN_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PLAN_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.clientcommands.AddCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"                + LOCATION_DESC_BOB + PLAN_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedClient));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"                + LOCATION_DESC_BOB + PLAN_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedClient));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"                + LOCATION_DESC_BOB + PLAN_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedClient));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"Juzzanoob"},"content":"                + LOCATION_DESC_BOB + PLAN_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedClient));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"Juzzanoob"},"content":"        // multiple addresses - last location accepted","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_AMY","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Juzzanoob"},"content":"                + LOCATION_DESC_BOB + PLAN_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedClient));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"                + PLAN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedClientMultipleTags));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"Juzzanoob"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Juzzanoob"},"content":"                        + LOCATION_DESC_AMY + PLAN_DESC_AMY,","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"                new AddCommand(expectedClient));","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB,","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB,","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + LOCATION_DESC_BOB,","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"Zaiah0505"},"content":"        // missing iscam prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_LOCATION_BOB,","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_LOCATION_BOB,","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"JodyLorah"},"content":"                + PLAN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_TYPE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"JodyLorah"},"content":"                + PLAN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + LOCATION_DESC_BOB","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"Juzzanoob"},"content":"                + PLAN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"Juzzanoob"},"content":"        // invalid location","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_LOCATION_DESC","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"Juzzanoob"},"content":"                + PLAN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Juzzanoob"},"content":"        // invalid plan","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"Juzzanoob"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"Juzzanoob"},"content":"                + INVALID_PLAN_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, InsurancePlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"Juzzanoob"},"content":"                + PLAN_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"Juzzanoob"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_LOCATION_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"                + PLAN_DESC_BOB, Name.MESSAGE_TYPE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"Juzzanoob"},"content":"                + LOCATION_DESC_BOB + PLAN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Zaiah0505":12,"JodyLorah":8,"zoeykobe":12,"Tomashiwa":4,"Juzzanoob":46,"-":69}},{"path":"src/test/java/seedu/iscam/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Zaiah0505":1,"-":149}},{"path":"src/test/java/seedu/iscam/logic/parser/ClientBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.FindCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.ListCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.clientcommands.ClientBookParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.logic.parser.exceptions.ParseFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"public class ClientBookParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"    private final ClientBookParser parser \u003d new ClientBookParser();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(new AddCommand(client), command);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CLIENT.getOneBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_CLIENT), command);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"                + INDEX_FIRST_CLIENT.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_CLIENT, descriptor), command);","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"        assertThrows(ParseFormatException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"Tomashiwa"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Zaiah0505":19,"JodyLorah":10,"zoeykobe":3,"Tomashiwa":4,"-":67}},{"path":"src/test/java/seedu/iscam/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Zaiah0505":3,"-":35}},{"path":"src/test/java/seedu/iscam/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.clientcommands.DeleteCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_CLIENT));","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    public void parse_indexNotANumber_throwsParseException() {","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"                String.format(MESSAGE_INVALID_INDEX, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Zaiah0505":5,"JodyLorah":2,"frisciliasultan":4,"-":23}},{"path":"src/test/java/seedu/iscam/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_THIRD_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.clientcommands.EditCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"Zaiah0505"},"content":"        assertParseFailure(parser, \"1 g/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_TYPE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_LENGTH_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"Zaiah0505"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LOCATION_DESC, Location.MESSAGE_CONSTRAINTS); // invalid iscam","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_LENGTH_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Client} being edited,","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"zoeykobe"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_LOCATION_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"                Name.MESSAGE_TYPE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"        Index targetIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"zoeykobe"},"content":"                + EMAIL_DESC_AMY + LOCATION_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"zoeykobe"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"        Index targetIndex \u003d INDEX_THIRD_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"JodyLorah"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"JodyLorah"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"Zaiah0505"},"content":"        // iscam","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"zoeykobe"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_AMY;","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"zoeykobe"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withLocation(VALID_LOCATION_AMY).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"JodyLorah"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"JodyLorah"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":173,"author":{"gitId":"zoeykobe"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + LOCATION_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"zoeykobe"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + LOCATION_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"zoeykobe"},"content":"                + PHONE_DESC_BOB + LOCATION_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"zoeykobe"},"content":"                .withEmail(VALID_EMAIL_BOB).withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"zoeykobe"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"JodyLorah"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"zoeykobe"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + LOCATION_DESC_BOB","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"JodyLorah"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":198,"author":{"gitId":"zoeykobe"},"content":"                .withLocation(VALID_LOCATION_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"JodyLorah"},"content":"        Index targetIndex \u003d INDEX_THIRD_CLIENT;","lastModifiedDate":"2021-03-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"JodyLorah"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Zaiah0505":40,"JodyLorah":23,"zoeykobe":12,"Tomashiwa":4,"frisciliasultan":3,"-":131}},{"path":"src/test/java/seedu/iscam/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.FindCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.logic.parser.clientcommands.FindCommandParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Zaiah0505":5,"JodyLorah":1,"Tomashiwa":1,"-":28}},{"path":"src/test/java/seedu/iscam/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    private static final String VALID_PHONE \u003d \"99123456\";","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"    private static final String VALID_LOCATION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"zoeykobe"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"zoeykobe"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"zoeykobe"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"zoeykobe"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"zoeykobe"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"zoeykobe"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"zoeykobe"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Zaiah0505":6,"JodyLorah":3,"zoeykobe":13,"Tomashiwa":4,"-":170}},{"path":"src/test/java/seedu/iscam/model/ClientBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"public class ClientBookTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"    private final ClientBook clientBook \u003d new ClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(Collections.emptyList(), clientBook.getClientList());","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e clientBook.resetData(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        ClientBook newData \u003d getTypicalClientBook();","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"        clientBook.resetData(newData);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(newData, clientBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    public void resetData_withDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"zoeykobe"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withLocation(VALID_LOCATION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"        ClientBookStub newData \u003d new ClientBookStub(newClients);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e clientBook.resetData(newData));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e clientBook.hasClient(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"zoeykobe"},"content":"        assertFalse(clientBook.hasClient(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"        clientBook.addClient(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"zoeykobe"},"content":"        assertTrue(clientBook.hasClient(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"    public void hasClient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"        clientBook.addClient(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"zoeykobe"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withLocation(VALID_LOCATION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"zoeykobe"},"content":"        assertTrue(clientBook.hasClient(editedAlice));","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e clientBook.getClientList().remove(0));","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"zoeykobe"},"content":"     * A stub ReadOnlyClientBook whose clients list can violate interface constraints.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"zoeykobe"},"content":"    private static class ClientBookStub implements ReadOnlyClientBook {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"Tomashiwa"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"zoeykobe"},"content":"        ClientBookStub(Collection\u003cClient\u003e clients) {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"            return clients;","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Zaiah0505":8,"JodyLorah":14,"zoeykobe":20,"Tomashiwa":2,"frisciliasultan":2,"-":60}},{"path":"src/test/java/seedu/iscam/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.BENSON;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.ALICE_1;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import static seedu.iscam.testutil.TypicalMeetings.BENSON_1;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBookBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.testutil.MeetingBookBuilder;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(new ClientBook(), new ClientBook(modelManager.getClientBook()));","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"        userPrefs.setClientBookFilePath(Paths.get(\"iscam/book/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"        userPrefs.setClientBookFilePath(Paths.get(\"new/iscam/book/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setClientBookFilePath(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"Zaiah0505"},"content":"        Path path \u003d Paths.get(\"iscam/book/file/path\");","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"        modelManager.setClientBookFilePath(path);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(path, modelManager.getClientBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"zoeykobe"},"content":"        ClientBook clientBook \u003d new ClientBookBuilder().withClient(ALICE).withClient(BENSON).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"zoeykobe"},"content":"        ClientBook differentClientBook \u003d new ClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"Tomashiwa"},"content":"        MeetingBook meetingBook \u003d new MeetingBookBuilder().withMeeting(ALICE_1).withMeeting(BENSON_1).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"Tomashiwa"},"content":"        MeetingBook differentMeetingBook \u003d new MeetingBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"Tomashiwa"},"content":"        modelManager \u003d new ModelManager(clientBook, meetingBook, userPrefs);","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"Tomashiwa"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(clientBook, meetingBook, userPrefs);","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"zoeykobe"},"content":"        // different clientBook -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"Tomashiwa"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentClientBook, differentMeetingBook, userPrefs)));","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"Tomashiwa"},"content":"        assertFalse(modelManager.equals(new ModelManager(clientBook, meetingBook, userPrefs)));","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"zoeykobe"},"content":"        differentUserPrefs.setClientBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"Tomashiwa"},"content":"        assertFalse(modelManager.equals(new ModelManager(clientBook, meetingBook, differentUserPrefs)));","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Zaiah0505":10,"JodyLorah":14,"zoeykobe":8,"Tomashiwa":13,"-":97}},{"path":"src/test/java/seedu/iscam/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setClientBookFilePath(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":2,"zoeykobe":1,"-":18}},{"path":"src/test/java/seedu/iscam/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"public class ClientTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public void isSameClient() {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"zoeykobe"},"content":"                .withLocation(VALID_LOCATION_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":"        // different iscam -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"zoeykobe"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withLocation(VALID_LOCATION_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Zaiah0505":11,"JodyLorah":20,"zoeykobe":2,"-":58}},{"path":"src/test/java/seedu/iscam/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Zaiah0505":2,"-":59}},{"path":"src/test/java/seedu/iscam/model/client/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"zoeykobe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"zoeykobe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"zoeykobe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"public class LocationTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidAddress));","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"        // null iscam","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"        // invalid addresses","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"        // valid addresses","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"        assertTrue(Location.isValidLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Zaiah0505"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long iscam","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":4,"zoeykobe":32,"Tomashiwa":2}},{"path":"src/test/java/seedu/iscam/model/client/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"Zaiah0505"},"content":"        // Keywords match phone, email and iscam, but does not match name","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"99912345\")","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"zoeykobe"},"content":"                .withEmail(\"alice@email.com\").withLocation(\"Main Street\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Zaiah0505":3,"JodyLorah":8,"zoeykobe":1,"Tomashiwa":1,"-":63}},{"path":"src/test/java/seedu/iscam/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Zaiah0505":2,"Tomashiwa":1,"-":39}},{"path":"src/test/java/seedu/iscam/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhoneLength(null));","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneLength(\"\")); // empty string","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneLength(\" \")); // spaces only","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneLength(\"91\")); // less than 3 numbers","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneLength(\"phone\")); // non-numeric","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneLength(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneLength(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneLength(\"911\")); // exactly 3 numbers","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidNumbersOnly(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidPhoneNumber(\"12345678\")); // does not start with 6, 8 or 9","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(Phone.isValidNumbersOnly(\"9011p1041\")); // alphabets within digits over length 8","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"        // valid phone numbers (8 digits only)","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(Phone.isValidPhoneLength(\"63121534\")); // start with 6","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(Phone.isValidPhoneLength(\"83121534\")); // start with 8","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(Phone.isValidPhoneLength(\"93121534\")); // start with 9","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":17,"-":26}},{"path":"src/test/java/seedu/iscam/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.client;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.ClientBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withLocation(VALID_LOCATION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"                .build();","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"    public void add_duplicateClient_throwsDuplicateClientException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"    public void setClient_targetClientNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"    public void setClient_editedClientIsSameClient_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"    public void setClient_editedClientHasSameIdentity_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"zoeykobe"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withLocation(VALID_LOCATION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"                .build();","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"JodyLorah"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"    public void setClient_editedClientHasNonUniqueIdentity_throwsDuplicateClientException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(BOB);","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ALICE, BOB));","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"    public void remove_clientDoesNotExist_throwsClientNotFoundException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"JodyLorah"},"content":"    public void remove_existingClient_removesClient() {","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"JodyLorah"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"JodyLorah"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"JodyLorah"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"JodyLorah"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"JodyLorah"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"JodyLorah"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"JodyLorah"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"JodyLorah"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"JodyLorah"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"JodyLorah"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"JodyLorah"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"JodyLorah"},"content":"    public void setClients_listWithDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"JodyLorah"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"JodyLorah"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"JodyLorah"},"content":"            -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Zaiah0505":9,"JodyLorah":159,"zoeykobe":2}},{"path":"src/test/java/seedu/iscam/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.model.tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Zaiah0505":2,"Tomashiwa":1,"-":25}},{"path":"src/test/java/seedu/iscam/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.user.JsonUserPrefsStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"        userPrefs.setClientBookFilePath(Paths.get(\"clientbook.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"        userPrefs.setMeetingBookFilePath(Paths.get(\"meetingbook.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":3,"zoeykobe":1,"-":117}},{"path":"src/test/java/seedu/iscam/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.GuiSettings;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.user.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.client.JsonClientBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.meeting.JsonMeetingBookStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.storage.user.JsonUserPrefsStorage;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"        JsonClientBookStorage clientBookStorage \u003d new JsonClientBookStorage(getTempFilePath(\"cb\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"        JsonMeetingBookStorage meetingBookStorage \u003d new JsonMeetingBookStorage(getTempFilePath(\"mb\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        storageManager \u003d new StorageManager(clientBookStorage, meetingBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    public void clientBookReadSave() throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"         * {@link JsonClientBookStorage} class.","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonClientBookStorageTest} class.","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        ClientBook original \u003d getTypicalClientBook();","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"zoeykobe"},"content":"        storageManager.saveClientBook(original);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"zoeykobe"},"content":"        ReadOnlyClientBook retrieved \u003d storageManager.readClientBook().get();","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(original, new ClientBook(retrieved));","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"    public void getClientBookFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        assertNotNull(storageManager.getClientBookFilePath());","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"    //TODO: maybe fix this test","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"    /*","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"    public void meetingBookReadSave() throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"        /*","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"         * {@link JsonMeetingBookStorage} class.","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonMeetingBookStorageTest} class.","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"    /*    MeetingBook original \u003d getTypicalMeetingBook();","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        storageManager.saveMeetingBook(original);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"        ReadOnlyMeetingBook retrieved \u003d storageManager.readMeetingBook().get();","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(original, new MeetingBook(retrieved));","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"    */","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"    public void getMeetingBookFilePath() {","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"zoeykobe"},"content":"        assertNotNull(storageManager.getClientBookFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":34,"zoeykobe":4,"frisciliasultan":2,"-":51}},{"path":"src/test/java/seedu/iscam/storage/client/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static seedu.iscam.storage.client.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.BENSON;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Juzzanoob"},"content":"    private static final String INVALID_PLAN \u003d \" Plan $\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Zaiah0505"},"content":"    private static final String INVALID_IMAGE \u003d \"w ef.jaypeg\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"    private static final String VALID_LOCATION \u003d BENSON.getLocation().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"    private static final String VALID_PLAN \u003d BENSON.getPlan().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    private static final List\u003cJsonAdaptedClientTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"            .map(JsonAdaptedClientTag::new)","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Zaiah0505"},"content":"    private static final String VALID_IMAGE \u003d \"default.png\";","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(BENSON, client.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, VALID_PLAN, VALID_TAGS,","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Zaiah0505"},"content":"                        VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d Name.MESSAGE_TYPE_CONSTRAINTS;","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, VALID_PLAN, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"Zaiah0505"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_LOCATION, VALID_PLAN, VALID_TAGS,","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Zaiah0505"},"content":"                        VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d Phone.MESSAGE_LENGTH_CONSTRAINTS;","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Juzzanoob"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Zaiah0505"},"content":"                VALID_NAME, null, VALID_EMAIL, VALID_LOCATION, VALID_PLAN, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"Zaiah0505"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_LOCATION, VALID_PLAN, VALID_TAGS,","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"Zaiah0505"},"content":"                        VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Juzzanoob"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"Zaiah0505"},"content":"                VALID_NAME, VALID_PHONE, null, VALID_LOCATION, VALID_PLAN, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"zoeykobe"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_LOCATION, VALID_PLAN, VALID_TAGS,","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"Zaiah0505"},"content":"                        VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"zoeykobe"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"Zaiah0505"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_PLAN, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"Juzzanoob"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Juzzanoob"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"Juzzanoob"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"Juzzanoob"},"content":"    public void toModelType_invalidPlan_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"Juzzanoob"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, INVALID_PLAN, VALID_TAGS,","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"Zaiah0505"},"content":"                        VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"Juzzanoob"},"content":"        String expectedMessage \u003d InsurancePlan.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"Juzzanoob"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"Juzzanoob"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"Juzzanoob"},"content":"    public void toModelType_nullPlan_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"Juzzanoob"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"Zaiah0505"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, null, VALID_TAGS, VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"Juzzanoob"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, InsurancePlan.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"JodyLorah"},"content":"        List\u003cJsonAdaptedClientTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-04-04"},{"lineNumber":134,"author":{"gitId":"JodyLorah"},"content":"        invalidTags.add(new JsonAdaptedClientTag(INVALID_TAG));","lastModifiedDate":"2021-04-04"},{"lineNumber":135,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"Zaiah0505"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, VALID_PLAN, invalidTags,","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"Zaiah0505"},"content":"                        VALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, client::toModelType);","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"Zaiah0505"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"Zaiah0505"},"content":"    public void toModelType_invalidImage_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"Zaiah0505"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"Zaiah0505"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, INVALID_PLAN, VALID_TAGS,","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"Zaiah0505"},"content":"                        INVALID_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"Zaiah0505"},"content":"        String expectedMessage \u003d InsurancePlan.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"Zaiah0505"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"Zaiah0505"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"Zaiah0505"},"content":"    public void toModelType_nullImage_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"Zaiah0505"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"Zaiah0505"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_LOCATION, null, VALID_TAGS, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"Zaiah0505"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, InsurancePlan.class.getSimpleName());","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"Zaiah0505"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":40,"JodyLorah":26,"zoeykobe":4,"Tomashiwa":3,"Juzzanoob":22,"-":63}},{"path":"src/test/java/seedu/iscam/storage/client/JsonClientBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.HOON;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.TypicalClients.IDA;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import static seedu.iscam.testutil.TypicalClients.getTypicalClientBook;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ReadOnlyClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"public class JsonClientBookStorageTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonClientBookStorageTest\");","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"    public void readClientBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e readClientBook(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"    private java.util.Optional\u003cReadOnlyClientBook\u003e readClientBook(String filePath) throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"        return new JsonClientBookStorage(Paths.get(filePath)).readClientBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"zoeykobe"},"content":"        assertFalse(readClientBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(DataConversionException.class, () -\u003e readClientBook(\"notJsonFormatClientBook.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"zoeykobe"},"content":"    public void readClientBook_invalidClientClientBook_throwDataConversionException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(DataConversionException.class, () -\u003e readClientBook(\"invalidClientClientBook.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"zoeykobe"},"content":"    public void readClientBook_invalidAndValidClientClientBook_throwDataConversionException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(DataConversionException.class, () -\u003e readClientBook(\"invalidAndValidClientClientBook.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"zoeykobe"},"content":"    public void readAndSaveClientBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"zoeykobe"},"content":"        Path filePath \u003d testFolder.resolve(\"TempClientBook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"        ClientBook original \u003d getTypicalClientBook();","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"zoeykobe"},"content":"        JsonClientBookStorage jsonClientBookStorage \u003d new JsonClientBookStorage(filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"zoeykobe"},"content":"        jsonClientBookStorage.saveClientBook(original, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"zoeykobe"},"content":"        ReadOnlyClientBook readBack \u003d jsonClientBookStorage.readClientBook(filePath).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(original, new ClientBook(readBack));","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"        original.addClient(HOON);","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"zoeykobe"},"content":"        jsonClientBookStorage.saveClientBook(original, filePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"zoeykobe"},"content":"        readBack \u003d jsonClientBookStorage.readClientBook(filePath).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(original, new ClientBook(readBack));","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        original.addClient(IDA);","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"zoeykobe"},"content":"        jsonClientBookStorage.saveClientBook(original); // file path not specified","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"zoeykobe"},"content":"        readBack \u003d jsonClientBookStorage.readClientBook().get(); // file path not specified","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(original, new ClientBook(readBack));","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"zoeykobe"},"content":"    public void saveClientBook_nullClientBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveClientBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"zoeykobe"},"content":"     * Saves {@code clientBook} at the specified {@code filePath}.","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"zoeykobe"},"content":"    private void saveClientBook(ReadOnlyClientBook clientBook, String filePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"zoeykobe"},"content":"            new JsonClientBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"zoeykobe"},"content":"                    .saveClientBook(clientBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"zoeykobe"},"content":"    public void saveClientBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveClientBook(new ClientBook(), null));","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":5,"JodyLorah":6,"zoeykobe":32,"frisciliasultan":2,"-":65}},{"path":"src/test/java/seedu/iscam/storage/client/JsonSerializableClientBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.client;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.testutil.TypicalClients;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"public class JsonSerializableClientBookTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableClientBookTest\");","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsClientBook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientClientBook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientClientBook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"        JsonSerializableClientBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"                JsonSerializableClientBook.class).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"        ClientBook clientBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        ClientBook typicalClientsClientBook \u003d TypicalClients.getTypicalClientBook();","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"        assertEquals(clientBookFromFile, typicalClientsClientBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"        JsonSerializableClientBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"zoeykobe"},"content":"                JsonSerializableClientBook.class).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"        JsonSerializableClientBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"zoeykobe"},"content":"                JsonSerializableClientBook.class).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableClientBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":5,"zoeykobe":14,"frisciliasultan":1,"-":23}},{"path":"src/test/java/seedu/iscam/storage/meeting/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import static java.lang.String.valueOf;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import static seedu.iscam.storage.meeting.JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"import static seedu.iscam.testutil.TypicalMeetings.BENSON_1;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.meeting.Description;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    private static final String INVALID_DATETIME \u003d \"example.com\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    private static final String INVALID_TAG \u003d \"#friends\";","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    private static final String VALID_NAME \u003d BENSON_1.getClientName().toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    private static final String VALID_DATETIME \u003d BENSON_1.getDateTime().toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"    private static final String VALID_DESCRIPTION \u003d BENSON_1.getDescription().toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    private static final String VALID_LOCATION \u003d BENSON_1.getLocation().toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    private static final List\u003cJsonAdaptedMeetingTag\u003e VALID_TAGS \u003d BENSON_1.getTags().stream()","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"            .map(JsonAdaptedMeetingTag::new)","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    private static final String VALID_STATUS \u003d valueOf(BENSON_1.getStatus().toString());","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_validMeetingDetails_returnsMeeting() throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(BENSON_1);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(BENSON_1, meeting.toModelType());","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"                new JsonAdaptedMeeting(INVALID_NAME, VALID_DATETIME, VALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"                        VALID_DESCRIPTION, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d Name.MESSAGE_TYPE_CONSTRAINTS;","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(null, VALID_DATETIME, VALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"                VALID_DESCRIPTION, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Client.class.getSimpleName());","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_invalidDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"                new JsonAdaptedMeeting(VALID_NAME, INVALID_DATETIME, VALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"                        VALID_DESCRIPTION, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_INVALID_FORMAT;","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_nullDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_NAME, null, VALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"                VALID_DESCRIPTION, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateTime.class.getSimpleName());","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"JodyLorah"},"content":"                new JsonAdaptedMeeting(VALID_NAME, VALID_DATETIME, INVALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"                        VALID_DESCRIPTION, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_NAME, VALID_DATETIME, null,","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Tomashiwa"},"content":"                VALID_DESCRIPTION, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"JodyLorah"},"content":"                new JsonAdaptedMeeting(VALID_NAME, VALID_DATETIME, VALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"                        INVALID_DESCRIPTION, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":102,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_NAME, VALID_DATETIME, VALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"Tomashiwa"},"content":"                null, VALID_TAGS, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":110,"author":{"gitId":"JodyLorah"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"JodyLorah"},"content":"        List\u003cJsonAdaptedMeetingTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-04-04"},{"lineNumber":117,"author":{"gitId":"JodyLorah"},"content":"        invalidTags.add(new JsonAdaptedMeetingTag(INVALID_TAG));","lastModifiedDate":"2021-04-04"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"JodyLorah"},"content":"                new JsonAdaptedMeeting(VALID_NAME, VALID_DATETIME, VALID_LOCATION,","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"Tomashiwa"},"content":"                        VALID_DESCRIPTION, invalidTags, VALID_STATUS);","lastModifiedDate":"2021-04-04"},{"lineNumber":121,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"JodyLorah":112,"Tomashiwa":11}},{"path":"src/test/java/seedu/iscam/storage/meeting/JsonMeetingBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"//import static seedu.iscam.testutil.TypicalMeetings.ALICE_1;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"//import static seedu.iscam.testutil.TypicalMeetings.CARL_1;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"//import static seedu.iscam.testutil.TypicalMeetings.DANIEL_1;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"//import static seedu.iscam.testutil.TypicalMeetings.getTypicalMeetingBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.ReadOnlyMeetingBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"public class JsonMeetingBookStorageTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonMeetingBookStorageTest\");","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    @TempDir","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    public void readMeetingBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e readMeetingBook(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    private java.util.Optional\u003cReadOnlyMeetingBook\u003e readMeetingBook(String filePath) throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"        return new JsonMeetingBookStorage(Paths.get(filePath)).readMeetingBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"                : null;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"        assertFalse(readMeetingBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"    public void saveMeetingBook_nullMeetingBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveMeetingBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"     * Saves {@code meetingBook} at the specified {@code filePath}.","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    private void saveMeetingBook(ReadOnlyMeetingBook meetingBook, String filePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"            new JsonMeetingBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"                    .saveMeetingBook(meetingBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"    public void saveMeetingBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveMeetingBook(new MeetingBook(), null));","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"JodyLorah":68}},{"path":"src/test/java/seedu/iscam/storage/meeting/JsonSerializableMeetingBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JodyLorah"},"content":"package seedu.iscam.storage.meeting;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"JodyLorah"},"content":"//","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"//import seedu.iscam.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"//import seedu.iscam.commons.util.JsonUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"//import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"//import seedu.iscam.testutil.TypicalMeetings;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"JodyLorah"},"content":"public class JsonSerializableMeetingBookTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"JodyLorah"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableMeetingBookTest\");","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"    private static final Path TYPICAL_MEETINGS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMeetingsMeetingBook.json\");","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"    private static final Path INVALID_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMeetingMeetingBook.json\");","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":"    private static final Path DUPLICATE_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMeetingMeetingBook.json\");","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"    //TODO: maybe fix this test","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"    /*","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_typicalMeetingsFile_success() throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"        JsonSerializableMeetingBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEETINGS_FILE,","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"                JsonSerializableMeetingBook.class).get();","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"        MeetingBook clientBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        MeetingBook typicalMeetingsMeetingBook \u003d TypicalMeetings.getTypicalMeetingBook();","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"        assertEquals(clientBookFromFile, typicalMeetingsMeetingBook);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    */","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    //TODO: maybe fix this test","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    /*","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_invalidMeetingFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        JsonSerializableMeetingBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEETING_FILE,","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"                JsonSerializableMeetingBook.class).get();","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    }*/","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    //TODO: maybe fix this test","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"    /*@Test","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"    public void toModelType_duplicateMeetings_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"        JsonSerializableMeetingBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEETING_FILE,","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"                JsonSerializableMeetingBook.class).get();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableMeetingBook.MESSAGE_DUPLICATE_MEETING,","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"    }*/","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"JodyLorah":50}},{"path":"src/test/java/seedu/iscam/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Zaiah0505":1,"-":33}},{"path":"src/test/java/seedu/iscam/testutil/ClientBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"zoeykobe"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":" * A utility class to help with building ClientBook objects.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"zoeykobe"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"zoeykobe"},"content":" *     {@code ClientBook ab \u003d new ClientBookBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"zoeykobe"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"zoeykobe"},"content":"public class ClientBookBuilder {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"zoeykobe"},"content":"    private ClientBook clientBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"zoeykobe"},"content":"    public ClientBookBuilder() {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"zoeykobe"},"content":"        clientBook \u003d new ClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"zoeykobe"},"content":"    public ClientBookBuilder(ClientBook clientBook) {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"zoeykobe"},"content":"        this.clientBook \u003d clientBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"zoeykobe"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"     * Adds a new {@code Client} to the {@code ClientBook} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"zoeykobe"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"zoeykobe"},"content":"    public ClientBookBuilder withClient(Client client) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"zoeykobe"},"content":"        clientBook.addClient(client);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"zoeykobe"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"zoeykobe"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"    public ClientBook build() {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"zoeykobe"},"content":"        return clientBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"zoeykobe"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"zoeykobe"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":1,"zoeykobe":30,"Tomashiwa":1}},{"path":"src/test/java/seedu/iscam/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Image;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":"public class ClientBuilder {","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"zoeykobe"},"content":"    public static final String DEFAULT_LOCATION \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Juzzanoob"},"content":"    public static final String DEFAULT_PLAN \u003d \"Plan A\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Zaiah0505"},"content":"    public static final String DEFAULT_IMAGE \u003d \"default.png\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"zoeykobe"},"content":"    private Location location;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    private InsurancePlan insurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"Zaiah0505"},"content":"    private Image imageRef;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"    public ClientBuilder() {","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"zoeykobe"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Juzzanoob"},"content":"        insurancePlan \u003d new InsurancePlan(DEFAULT_PLAN);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"        imageRef \u003d new Image(DEFAULT_IMAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"zoeykobe"},"content":"        location \u003d clientToCopy.getLocation();","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"        insurancePlan \u003d clientToCopy.getPlan();","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"        imageRef \u003d clientToCopy.getImageRes();","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"JodyLorah"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"JodyLorah"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"zoeykobe"},"content":"     * Sets the {@code Location} of the {@code Client} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"zoeykobe"},"content":"    public ClientBuilder withLocation(String location) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"zoeykobe"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"JodyLorah"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"Juzzanoob"},"content":"     * Sets the {@code InsurancePlan} of the {@code Client} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"Juzzanoob"},"content":"    public ClientBuilder withPlan(String plan) {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"Juzzanoob"},"content":"        this.insurancePlan \u003d new InsurancePlan(plan);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"Juzzanoob"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"Zaiah0505"},"content":"     * Sets the {@code Image} of the {@code Client} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"Zaiah0505"},"content":"    public ClientBuilder withImage(String imageRef) {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"Zaiah0505"},"content":"        this.imageRef \u003d new Image(imageRef);","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"Zaiah0505"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"JodyLorah"},"content":"    public Client build() {","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"Zaiah0505"},"content":"        return new Client(name, phone, email, location, insurancePlan, tags, imageRef);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Zaiah0505":18,"JodyLorah":19,"zoeykobe":7,"Tomashiwa":4,"Juzzanoob":13,"-":61}},{"path":"src/test/java/seedu/iscam/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_IMAGE;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_PLAN;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.AddCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":" * A utility class for Client.","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"public class ClientUtil {","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"zoeykobe"},"content":"        sb.append(PREFIX_LOCATION + client.getLocation().value + \" \");","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"        sb.append(PREFIX_PLAN + client.getPlan().planName + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"JodyLorah"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"        sb.append(PREFIX_IMAGE).append(client.getImageRes().value).append(\" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"    public static String getEditClientDescriptorDetails(EditClientDescriptor descriptor) {","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"zoeykobe"},"content":"        descriptor.getLocation().ifPresent(location -\u003e sb.append(PREFIX_LOCATION).append(location.value).append(\" \"));","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Juzzanoob"},"content":"        descriptor.getPlan().ifPresent(insurancePlan -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Juzzanoob"},"content":"                sb.append(PREFIX_PLAN).append(insurancePlan.planName).append(\" \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Zaiah0505"},"content":"        descriptor.getImageRes().ifPresent(image -\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Zaiah0505"},"content":"                sb.append(PREFIX_IMAGE).append(image.value).append(\" \"));","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Zaiah0505":8,"JodyLorah":13,"zoeykobe":2,"Tomashiwa":1,"Juzzanoob":9,"-":37}},{"path":"src/test/java/seedu/iscam/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"JodyLorah"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"JodyLorah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Image;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"import seedu.iscam.model.client.InsurancePlan;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.client.Phone;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"JodyLorah"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"JodyLorah"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"JodyLorah"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"JodyLorah"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"JodyLorah"},"content":"    private EditClientDescriptor descriptor;","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"JodyLorah"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"JodyLorah"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"JodyLorah"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"Juzzanoob"},"content":"        descriptor.setPlan(client.getPlan());","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"zoeykobe"},"content":"        descriptor.setLocation(client.getLocation());","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setTags(client.getTags());","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"        descriptor.setImageRes(client.getImageRes());","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"JodyLorah"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"JodyLorah"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"JodyLorah"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"JodyLorah"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"zoeykobe"},"content":"     * Sets the {@code Location} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"zoeykobe"},"content":"    public EditClientDescriptorBuilder withLocation(String address) {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"zoeykobe"},"content":"        descriptor.setLocation(new Location(address));","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"JodyLorah"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"Juzzanoob"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Juzzanoob"},"content":"     * Sets the {@code InsurancePlan} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"Juzzanoob"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"Juzzanoob"},"content":"    public EditClientDescriptorBuilder withPlan(String plan) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"Juzzanoob"},"content":"        descriptor.setPlan(new InsurancePlan(plan));","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"Juzzanoob"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"Juzzanoob"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"JodyLorah"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"JodyLorah"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditClientDescriptor}","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"JodyLorah"},"content":"     * that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"JodyLorah"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"JodyLorah"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"JodyLorah"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"JodyLorah"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"JodyLorah"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"Zaiah0505"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"Zaiah0505"},"content":"     * Sets the {@code Image} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"Zaiah0505"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"Zaiah0505"},"content":"    public EditClientDescriptorBuilder withImage(String imageRes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Zaiah0505"},"content":"        descriptor.setImageRes(new Image(imageRes));","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"Zaiah0505"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"Zaiah0505"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"Zaiah0505"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"JodyLorah"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"JodyLorah"},"content":"        return descriptor;","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"JodyLorah"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"JodyLorah"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Zaiah0505":14,"JodyLorah":75,"zoeykobe":4,"Tomashiwa":4,"Juzzanoob":10}},{"path":"src/test/java/seedu/iscam/testutil/MeetingBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":" * A utility class to help with building MeetingBook objects.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":" *     {@code MeetingBook ab \u003d new MeetingBookBuilder().withMeeting(new Meeting(...)).build();}","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"public class MeetingBookBuilder {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"    private MeetingBook meetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBookBuilder() {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"        meetingBook \u003d new MeetingBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBookBuilder(MeetingBook meetingBook) {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"        this.meetingBook \u003d meetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"     * Adds a new {@code Meeting} to the {@code MeetingBook} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBookBuilder withMeeting(Meeting meeting) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"        meetingBook.addMeeting(meeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBook build() {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"        return meetingBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"JodyLorah":1,"Tomashiwa":33}},{"path":"src/test/java/seedu/iscam/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Location;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Name;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.commons.Tag;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.CompletionStatus;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.CompletionStatus.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.DateTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Description;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"public class MeetingBuilder {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"    public static final String DEFAULT_CLIENT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"    public static final String DEFAULT_DATETIME \u003d \"10-12-2021 13:00\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Starbucks, Jurong West\";","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Discussion on lifetime policy.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"    private Name name;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    private DateTime dateTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"    private Location location;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"    private Description description;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    private CompletionStatus status \u003d new CompletionStatus(Status.INCOMPLETE);","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"        name \u003d new Name(DEFAULT_CLIENT_NAME);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"        dateTime \u003d new DateTime(DEFAULT_DATETIME);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"        status \u003d new CompletionStatus(Status.INCOMPLETE);","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"     * Initializes the MeetingBuilder with the data of {@code toCopy}.","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder(Meeting toCopy) {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"        name \u003d toCopy.getClientName();","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"        dateTime \u003d toCopy.getDateTime();","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"        location \u003d toCopy.getLocation();","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        description \u003d toCopy.getDescription();","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"        tags \u003d toCopy.getTags();","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"        status \u003d toCopy.getStatus();","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"     * Sets the {@code Name} of the {@code Meeting} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder withName(String name) {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Tomashiwa"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Tomashiwa"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Tomashiwa"},"content":"     * Sets the {@code DateTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder withDateTime(String dateTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"Tomashiwa"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"Tomashiwa"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"Tomashiwa"},"content":"     * Sets the {@code Location} of the {@code Meeting} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder withLocation(String location) {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"Tomashiwa"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"Tomashiwa"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Tomashiwa"},"content":"     * Sets the {@code Description} of the {@code Meeting} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder withDescription(String description) {","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Tomashiwa"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"Tomashiwa"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"Tomashiwa"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"Tomashiwa"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"Tomashiwa"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Tomashiwa"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"Tomashiwa"},"content":"     * Sets the {@code status} of the {@code Meeting} that we are building.","lastModifiedDate":"2021-04-04"},{"lineNumber":99,"author":{"gitId":"Tomashiwa"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"Tomashiwa"},"content":"    public MeetingBuilder withStatus(String status) {","lastModifiedDate":"2021-04-04"},{"lineNumber":101,"author":{"gitId":"Tomashiwa"},"content":"        this.status \u003d new CompletionStatus(status);","lastModifiedDate":"2021-04-04"},{"lineNumber":102,"author":{"gitId":"Tomashiwa"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"Tomashiwa"},"content":"    public Meeting build() {","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"Tomashiwa"},"content":"        return new Meeting(name, dateTime, location, description, tags, status);","lastModifiedDate":"2021-04-04"},{"lineNumber":107,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Tomashiwa":108}},{"path":"src/test/java/seedu/iscam/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":1,"-":71}},{"path":"src/test/java/seedu/iscam/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"JodyLorah"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"JodyLorah"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"JodyLorah"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"JodyLorah"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"JodyLorah"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    public static Client getClient(Model model, Index index) {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"JodyLorah"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zaiah0505":4,"JodyLorah":7,"-":44}},{"path":"src/test/java/seedu/iscam/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PLAN_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Juzzanoob"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_PLAN_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.model.client.Client;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.clientbook.ClientBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"JodyLorah"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"JodyLorah"},"content":"public class TypicalClients {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"JodyLorah"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"Juzzanoob"},"content":"            .withLocation(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Juzzanoob"},"content":"            .withPhone(\"94351253\").withPlan(\"Plan A\")","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Zaiah0505"},"content":"            .withTags(\"friends\").withImage(\"default.png\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Juzzanoob"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Juzzanoob"},"content":"            .withLocation(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Juzzanoob"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withPlan(\"Plan B\")","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Zaiah0505"},"content":"            .withTags(\"owesMoney\", \"friends\").withImage(\"default.png\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Juzzanoob"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"            .withEmail(\"heinz@example.com\").withLocation(\"wall street\").withPlan(\"Life\").build();","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"Juzzanoob"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Juzzanoob"},"content":"            .withEmail(\"cornelia@example.com\").withLocation(\"10th street\")","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Zaiah0505"},"content":"            .withPlan(\"Plan A\").withTags(\"friends\").withImage(\"default.png\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"JodyLorah"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"89482224\")","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"            .withEmail(\"werner@example.com\").withLocation(\"michegan ave\").withPlan(\"Protect\").withImage(\"default.png\")","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"Zaiah0505"},"content":"            .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"JodyLorah"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"64824273\")","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"            .withEmail(\"lydia@example.com\").withLocation(\"little tokyo\").withPlan(\"MediShield\").withImage(\"default.png\")","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"Zaiah0505"},"content":"            .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"JodyLorah"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"94824412\")","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"Zaiah0505"},"content":"            .withEmail(\"anna@example.com\").withLocation(\"4th street\").withPlan(\"Plan A\").withImage(\"default.png\")","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Zaiah0505"},"content":"            .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Juzzanoob"},"content":"    // Manually added","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"JodyLorah"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"88482424\")","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"Zaiah0505"},"content":"            .withEmail(\"stefan@example.com\").withLocation(\"little india\").withPlan(\"Plan B\").withImage(\"default.png\")","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Zaiah0505"},"content":"            .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"JodyLorah"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"84821310\")","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"Zaiah0505"},"content":"            .withEmail(\"hans@example.com\").withLocation(\"chicago ave\").withPlan(\"Plan C\").withImage(\"default.png\")","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Zaiah0505"},"content":"            .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Juzzanoob"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Juzzanoob"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Juzzanoob"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Juzzanoob"},"content":"            .withEmail(VALID_EMAIL_AMY).withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Juzzanoob"},"content":"            .withPlan(VALID_PLAN_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Juzzanoob"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Juzzanoob"},"content":"            .withEmail(VALID_EMAIL_BOB).withLocation(VALID_LOCATION_BOB).withPlan(VALID_PLAN_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Juzzanoob"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"JodyLorah"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"zoeykobe"},"content":"     * Returns an {@code ClientBook} with all the typical clients.","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"    public static ClientBook getTypicalClientBook() {","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"zoeykobe"},"content":"        ClientBook ab \u003d new ClientBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"JodyLorah"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"JodyLorah"},"content":"            ab.addClient(client);","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"JodyLorah"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Zaiah0505":23,"JodyLorah":13,"zoeykobe":2,"Juzzanoob":20,"frisciliasultan":4,"-":23}},{"path":"src/test/java/seedu/iscam/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"JodyLorah"},"content":"    public static final Index INDEX_FIRST_CLIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"JodyLorah"},"content":"    public static final Index INDEX_SECOND_CLIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"JodyLorah"},"content":"    public static final Index INDEX_THIRD_CLIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Zaiah0505":2,"JodyLorah":3,"-":7}},{"path":"src/test/java/seedu/iscam/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Tomashiwa"},"content":"package seedu.iscam.testutil;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Tomashiwa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Tomashiwa"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Tomashiwa"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Tomashiwa"},"content":"import seedu.iscam.model.meeting.Meeting;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"JodyLorah"},"content":"import seedu.iscam.model.util.meetingbook.MeetingBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Tomashiwa"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Tomashiwa"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Tomashiwa"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Tomashiwa"},"content":"public class TypicalMeetings {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting ALICE_1 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Alice Pauline\").withDateTime(\"24-03-2025 15:30\").withLocation(\"Starbucks, Jurong West\")","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Discuss lifetime policy.\").withTags(\"friends\").withStatus(\"incomplete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting ALICE_2 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Alice Pauline\").withDateTime(\"29-03-2025 20:00\").withLocation(\"Starbucks, Jurong West\")","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Finalize lifetime policy.\").withTags(\"friends\").withStatus(\"incomplete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting BENSON_1 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Benson Meier\").withDateTime(\"30-03-2025 15:30\").withLocation(\"Kopitiam, Clementi Central\")","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Brief introduction of company\u0027s policy.\").withTags(\"friends\").withStatus(\"incomplete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting CARL_1 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Carl Kurz\").withDateTime(\"21-01-2021 10:00\").withLocation(\"Dio Cafe, Central\")","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Explain workflow of policyholder and underwrite.\").withStatus(\"complete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting DANIEL_1 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Daniel Meier\").withDateTime(\"09-05-2025 14:15\").withLocation(\"Macdonald, Bedok North\")","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Recommend policies for his family.\").withStatus(\"incomplete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting ELLE_1 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Elle Meyer\").withDateTime(\"10-05-2025 17:30\").withLocation(\"Macdonald, Serengoon\")","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Extension of policy.\").withStatus(\"incomplete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting FIONA_1 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Fiona Kunz\").withDateTime(\"03-10-2025 16:30\").withLocation(\"Doot Cafe, One North\")","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Discuss additional policies.\").withStatus(\"incomplete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Tomashiwa"},"content":"    public static final Meeting FIONA_2 \u003d new MeetingBuilder()","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Tomashiwa"},"content":"            .withName(\"Fiona Kunz\").withDateTime(\"05-01-2021 16:30\").withLocation(\"Doot Cafe, One North\")","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Tomashiwa"},"content":"            .withDescription(\"Introducing policies.\").withStatus(\"complete\")","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"Tomashiwa"},"content":"            .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Tomashiwa"},"content":"    public static MeetingBook getTypicalMeetingBook() {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Tomashiwa"},"content":"        MeetingBook mb \u003d new MeetingBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Tomashiwa"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Tomashiwa"},"content":"            mb.addMeeting(meeting);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Tomashiwa"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Tomashiwa"},"content":"        return mb;","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Tomashiwa"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Tomashiwa"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Tomashiwa"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_1, ALICE_2, BENSON_1, CARL_1, DANIEL_1, ELLE_1, FIONA_1, FIONA_2));","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Tomashiwa"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Tomashiwa"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"JodyLorah":1,"Tomashiwa":58}},{"path":"src/test/java/seedu/iscam/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Zaiah0505":1,"-":34}},{"path":"src/test/java/seedu/iscam/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zaiah0505"},"content":"package seedu.iscam.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Zaiah0505"},"content":"import static seedu.iscam.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Zaiah0505"},"content":"import seedu.iscam.MainApp;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Zaiah0505":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"\u003c?import seedu.iscam.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Zaiah0505":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Zaiah0505"},"content":"\u003cfx:root type\u003d\"seedu.iscam.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Zaiah0505":1,"-":5}}]
