[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"# Tutor Tracker"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-3/tp/actions)"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"* **Tutor Tracker** is a desktop app designed to **help students search for tutors and manage tuition appointments**, optimised for use via a Command Line Interface (CLI) for a fast and streamlined experience."},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"* For the detailed documentation of this project, see the **[Tutor Tracker Product Website](https://ay2021s2-cs2103-t14-3.github.io/tp/)**."},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"kingsleykuan":7,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"You can reach us at the emails:"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"```"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"kingsley.kuan[at]u.nus.edu"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"vinleon[at]u.nus.edu"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"jared_lyj[at]u.nus.edu"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"e0425411[at]u.nus.edu"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"zou.yuting[at]u.nus.edu"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"```"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Project team"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"### Kingsley Kuan Jun Hao"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/kingsleykuan.png\" width\u003d\"200px\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"[[github](https://github.com/kingsleykuan)]"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"[[portfolio](team/kingsleykuan.md)]"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"* Role: Documentation, Testing"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"### Koh Vinleon"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/glatiuden.png\" width\u003d\"200px\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"[[github](http://github.com/glatiuden)]"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"[[portfolio](team/glatiuden.md)]"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"* Role: Integration"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"### Lim Yong Jian Jared"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/jared98lyj.png\" width\u003d\"200px\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"[[github](http://github.com/jared98lyj)]"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"[[portfolio](team/jared98lyj.md)]"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"* Role: Scheduling and tracking"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"### Winnie Ho Yi Xuan"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/winniehyx.png\" width\u003d\"200px\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"[[github](http://github.com/Winniehyx)]"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"[[portfolio](team/Winniehyx.md)]"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"* Role: Deliverables and deadlines"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"### Zou Yuting"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/yutingzou.png\" width\u003d\"200px\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"[[github](http://github.com/yutingzou)]"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"[[portfolio](team/yutingzou.md)]"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"* Role: Code quality"}],"authorContributionMap":{"kingsleykuan":29,"-":29,"glatiuden":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"## **Introduction**"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"**Tutor Tracker** is a desktop tuition management application meant for secondary students to track their tuition information, such as upcoming tuition appointments and tutor\u0027s contact information."},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"It focuses on the Command Line Interface (CLI) while providing users with a simple and clean Graphical User Interface (GUI)."},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"Thus, the main interaction with **Tutor Tracker** will be done through commands."},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"Tutor Tracker is an all-in-one tuition management solution for tech-savvy secondary school students."},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"The features of Tutor Tracker includes:"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"- Viewing of tutors\u0027 profile"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"- Adding new tuition appointments"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"- Filtering tutors by personal preference (i.e. availability, experiences, name, location, price, etc.)"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"- Viewing upcoming tuition appointments"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"The purpose of this Developer Guide is to help you understand the design and implementation of Tutor Tracker to get started on your contributions to Tutor Tracker."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"This section will help you learn more about the design and structure of Tutor Tracker. Each section will describe and explains how each component of the application works."},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"It\u0027s noteworthy to mention that the Tutor Tracker follows an Object-Oriented Programming paradigm."},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"_Figure 1. Architecture Diagram of Tutor Tracker_"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"The application consists of 6 main components:"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"| Component                           | Description"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"| ----------------------------------- | -------------------------------------------------------------------- |  "},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"| `Main`                              | **`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/MainApp.java). \u003cbr/\u003eIt is responsible for: \u003cli\u003eAt app launch: Initializes the components in the correct sequence, and connects them up with each other.\u003c/li\u003e \u003cli\u003eAt shut down: Shuts down the components and invokes cleanup methods where necessary.\u003c/li\u003e|"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"| [**`UI`**](#ui-component)           | The UI of the App.                                                   |"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"| [**`Logic`**](#logic-component)     | The command executor.                                                |"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"| [**`Model`**](#model-component)     | Holds the data of the App in memory.                                 |"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"| [**`Storage`**](#storage-component) | Reads data from, and writes data to, the hard disk.                  |"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"| [**`Commons`**](#common-classes)    | Represents a collection of classes used by multiple other components.|"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"For each of `UI`, `Logic`, `Model` and `Storage` component, it"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":63,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete_appointment 1`."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"1. `Logic` uses the `TutorTrackerParser` class to parse the user command."},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"1. The command execution can affect the `Model` (e.g. adding an appointment)."},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete_appointment 1\")` API call."},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"![Interactions Inside the Logic Component for the `delete appointment_1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"**API** : `Model.java`"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":118,"author":{"gitId":"Winniehyx"},"content":"* stores the TutorTracker data."},{"lineNumber":119,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"glatiuden"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `TutorTracker`, which `Person` references. This allows `TutorTracker` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"glatiuden"},"content":"**API** : `Storage.java`"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"* can save the Tutor Hunter details in json format and read it back."},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"glatiuden"},"content":"Classes used by multiple components are in the `seedu.TutorTracker.commons` package."},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"glatiuden"},"content":"_{More to be added}_"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"**Target user profile**:"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"kingsleykuan"},"content":"Tech-savvy secondary school students in Singapore who to need to search for tutors and manage their tuition appointments, and prefer CLI over GUI."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"kingsleykuan"},"content":"**Value proposition**:"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"kingsleykuan"},"content":"The demand for tuition in Singapore is escalating, especially among secondary school students. A large amount of time and money has been invested in finding tutors and managing ever growing lists of tuition appointments. Currently, there are limited number of apps and websites that cater to this need, particularly in a streamlined typing oriented CLI. Therefore, this app aims to assist secondary school students in streamlining the process of searching for tutors and managing their tuition appointments. These students can search for an ideal tutor based on their personal preferences (such as subjects, expertise, years of experience, cost, availability etc.), and cut down on the time taken tracking their favoured tutors and tuition appointments."},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |"},{"lineNumber":178,"author":{"gitId":"glatiuden"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |"},{"lineNumber":179,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Add new tutor details                              | Keep track of a new tutor that I have heard about               |"},{"lineNumber":180,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | List all tutors                                    | See all known tutors                                            |"},{"lineNumber":181,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | View details of a tutor (subject, background, age) | Determine whether I should choose this tutor                    |"},{"lineNumber":182,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Get the email address of a tutor                   | Contact tutors directly for queries                             |"},{"lineNumber":183,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Add tuition appointment                            | Keep track of appointments I have made                          |"},{"lineNumber":184,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | View my tuition appointments                       | Keep track of appointments                                      |"},{"lineNumber":185,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Delete a tuition appointment                       | Remove canceled appointments                                    |"},{"lineNumber":186,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Check my own tuition appointments list             | Know the timing of ALL my appointments in order                 |"},{"lineNumber":187,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their subject discipline          | Find a tutor that caters to my needs (academic)                 |"},{"lineNumber":188,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutor by cost                               | Find a tutor that fits into budget as well                      |"},{"lineNumber":189,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter a tutor by his/her name                     | View tutor\u0027s profile                                            |"},{"lineNumber":190,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their years of experience         | Find a tutor with experience within the range of my expectation |"},{"lineNumber":191,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their available timeslots         | Find a tutor with matched tuition time                          |"},{"lineNumber":192,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their available location          | Find tutors in a specific area                                  |"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Use cases"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"glatiuden"},"content":"_For all use cases below, the **System** is the `TutorTracker` and the **Actor** is the `user`, unless specified otherwise._"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"glatiuden"},"content":"\u003chr\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0001: Add new tutor details**"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"kingsleykuan"},"content":"1. User inputs tutor details."},{"lineNumber":208,"author":{"gitId":"kingsleykuan"},"content":"2. TutorTracker confirms that tutor details have been added to list."},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":211,"author":{"gitId":"kingsleykuan"},"content":"* 2a. Tutor details already exists in list."},{"lineNumber":212,"author":{"gitId":"glatiuden"},"content":"    * 2a1. TutorTracker shows an error message"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"kingsleykuan"},"content":"  Use case resumes at step 1."},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0002: List all tutors**"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"glatiuden"},"content":"**MSS**"},{"lineNumber":221,"author":{"gitId":"glatiuden"},"content":"1. User requests to list tutors."},{"lineNumber":222,"author":{"gitId":"glatiuden"},"content":"2. TutorTracker shows a list of tutors."},{"lineNumber":223,"author":{"gitId":"glatiuden"},"content":"  "},{"lineNumber":224,"author":{"gitId":"glatiuden"},"content":"    Use case ends."},{"lineNumber":225,"author":{"gitId":"glatiuden"},"content":"   "},{"lineNumber":226,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0003: Add an appointment**"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"yutingzou"},"content":"1.  User requests to add an appointment."},{"lineNumber":233,"author":{"gitId":"yutingzou"},"content":"2.  TutorTracker adds the appointment and displays the new appointment. "},{"lineNumber":234,"author":{"gitId":"-"},"content":"    "},{"lineNumber":235,"author":{"gitId":"glatiuden"},"content":"    Use case ends."},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":238,"author":{"gitId":"yutingzou"},"content":"* 1a. The tutor name, date of appointment or start and end time is empty."},{"lineNumber":239,"author":{"gitId":"yutingzou"},"content":"    * 1a1. TutorTracker shows an error message. "},{"lineNumber":240,"author":{"gitId":"-"},"content":"      "},{"lineNumber":241,"author":{"gitId":"-"},"content":"      Use case ends."},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"yutingzou"},"content":"* 1b. The given date or start and end time is invalid."},{"lineNumber":244,"author":{"gitId":"yutingzou"},"content":"    * 1b1. TutorTracker shows an error message."},{"lineNumber":245,"author":{"gitId":"-"},"content":"    "},{"lineNumber":246,"author":{"gitId":"yutingzou"},"content":"        Use case ends."},{"lineNumber":247,"author":{"gitId":"glatiuden"},"content":"      "},{"lineNumber":248,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0004: List all tuition appointments**"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"glatiuden"},"content":"**MSS**"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"glatiuden"},"content":"1. User requests to view the list of tuition appointments."},{"lineNumber":255,"author":{"gitId":"glatiuden"},"content":"2. TutorTracker displays the list of tuition appointments to the user."},{"lineNumber":256,"author":{"gitId":"-"},"content":" "},{"lineNumber":257,"author":{"gitId":"kingsleykuan"},"content":"    Use case ends."},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0005: View tuition appointment**"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"glatiuden"},"content":"1.  User requests to view appointment"},{"lineNumber":266,"author":{"gitId":"glatiuden"},"content":"2.  TutorTracker shows a list of appointments "},{"lineNumber":267,"author":{"gitId":"glatiuden"},"content":"    "},{"lineNumber":268,"author":{"gitId":"-"},"content":"    Use case ends."},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"glatiuden"},"content":"* 1a. The list is empty."},{"lineNumber":273,"author":{"gitId":"glatiuden"},"content":"    * 1a1. TutorTracker shows a message that there are no appointments. "},{"lineNumber":274,"author":{"gitId":"glatiuden"},"content":"      "},{"lineNumber":275,"author":{"gitId":"glatiuden"},"content":"    Use case ends."},{"lineNumber":276,"author":{"gitId":"glatiuden"},"content":"      "},{"lineNumber":277,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0006: Delete a tuition appointment**"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"glatiuden"},"content":"**MSS**"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"glatiuden"},"content":"1.  User requests to list appointments"},{"lineNumber":284,"author":{"gitId":"glatiuden"},"content":"2.  TutorTracker shows a list of appointments"},{"lineNumber":285,"author":{"gitId":"glatiuden"},"content":"3.  User requests to delete a specific appointment in the list"},{"lineNumber":286,"author":{"gitId":"glatiuden"},"content":"4.  TutorTracker deletes that specific appointment."},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":293,"author":{"gitId":"jared98lyj"},"content":"**Technical Requirements**:"},{"lineNumber":294,"author":{"gitId":"jared98lyj"},"content":"* Application should be able to launch in any operating"},{"lineNumber":295,"author":{"gitId":"jared98lyj"},"content":"  systems (Linux, Max, Windows) with JDK 11 installed on computer."},{"lineNumber":296,"author":{"gitId":"jared98lyj"},"content":"* Should be able to"},{"lineNumber":297,"author":{"gitId":"jared98lyj"},"content":"  run on both 32-bit and 64-bit systems."},{"lineNumber":298,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":299,"author":{"gitId":"jared98lyj"},"content":"**Performance Requirements**"},{"lineNumber":300,"author":{"gitId":"jared98lyj"},"content":"* Response to user command (add, delete, update, retrieve)"},{"lineNumber":301,"author":{"gitId":"jared98lyj"},"content":"  should be visible within 2 seconds."},{"lineNumber":302,"author":{"gitId":"jared98lyj"},"content":"* Should be able to hold at least 10000 persons"},{"lineNumber":303,"author":{"gitId":"jared98lyj"},"content":"  and appointments without any noticeable decrease in loading time."},{"lineNumber":304,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":305,"author":{"gitId":"jared98lyj"},"content":"**Quality Requirements**"},{"lineNumber":306,"author":{"gitId":"jared98lyj"},"content":"* Interface can be used by a user with no programming"},{"lineNumber":307,"author":{"gitId":"jared98lyj"},"content":"  experience, i.e., user should not be expected to key in complicated commands or"},{"lineNumber":308,"author":{"gitId":"jared98lyj"},"content":"  logical statements to get a desired output."},{"lineNumber":309,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":310,"author":{"gitId":"jared98lyj"},"content":"**Process Requirements**"},{"lineNumber":311,"author":{"gitId":"jared98lyj"},"content":"* Project to be updated with one new feature/improvement from"},{"lineNumber":312,"author":{"gitId":"jared98lyj"},"content":"  each member each week."},{"lineNumber":313,"author":{"gitId":"jared98lyj"},"content":"* Updates will be pushed to each teammates\u0027 individual branches,"},{"lineNumber":314,"author":{"gitId":"jared98lyj"},"content":"  where PRS are made to the master branch."},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":319,"author":{"gitId":"yutingzou"},"content":"* **Appointment**: An event in user\u0027s local schedule with related details, including tutor\u0027s name, date of appointment, start and end time and location(optional)."},{"lineNumber":320,"author":{"gitId":"yutingzou"},"content":"* **Education Level**: The level of education offered by a tutor for a specific subject, e.g, \"O level\"."},{"lineNumber":321,"author":{"gitId":"yutingzou"},"content":"* **Years of Experience**: Years of experience of tutoring a specific subject."},{"lineNumber":322,"author":{"gitId":"yutingzou"},"content":"* **Qualifications**: Official certificates of successful completion of an education programme, e.g, Bachelor of Science."},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"glatiuden"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample tutors. The window size may not be optimum."},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"1. Saving window preferences"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":348,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"glatiuden"},"content":"### Deleting a tutor"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"glatiuden"},"content":"1. Deleting a tutor while all persons are being shown"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"glatiuden"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple tutors in the list."},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":359,"author":{"gitId":"glatiuden"},"content":"       Expected: First tutor is deleted from the list. Details of the deleted tutor shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":362,"author":{"gitId":"glatiuden"},"content":"       Expected: No tutor is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":365,"author":{"gitId":"-"},"content":"       Expected: Similar to previous."},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"}],"authorContributionMap":{"jared98lyj":22,"yutingzou":11,"kingsleykuan":17,"-":229,"glatiuden":89,"Winniehyx":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"_**Tutor Tracker**_ is a **desktop app designed to help secondary school students manage tutors and tuition appointments, optimised for use via a Command Line Interface** (CLI) for a fast and streamlined experience while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Tutor Tracker can get your contact management tasks done faster than traditional GUI apps."},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents "},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"1. Download the latest `tutortracker.jar` from [here](https://github.com/AY2021S2-CS2103-T14-3/tp/releases)."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TutorTracker."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    * **`appointment`**`n/Chloe Lim s/English d/2021-4-20 fr/2:00pm to/c l/Bedok` : Adds an appointment with a tutor named `Chloe Lim` to the Tutor Tracker."},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    * **`list_appointments`** : Lists all personal tuition appointments."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"  e.g. in `appointment n/NAME`, `NAME` is a parameter which can be used as `appointment n/John Doe`."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"  e.g `n/NAME [l/LOCATION]` can be used as `n/John Doe l/Clementi` or as `n/John Doe`."},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"  e.g. `[l/LOCATION]…​` can be used as ` ` (i.e. 0 times), `l/Bedok`."},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"  e.g. if the command specifies `n/NAME s/SUBJECT`, `s/SUBJECT n/NAME` is also acceptable."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"  e.g. if you specify `l/Bedok l/Clementi`, only `l/Clementi` will be taken."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"* Parameters in angle brackets (`\u003c`, `\u003e`) must be supplied together in order as a group. eg. with `\u003cs/SUBJECT_NAME r/RATE\u003e`, both subject name and rate must be supplied in order."},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"### Add new tutor details: `add_tutor`"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"Add a new tutor and enter their basic details."},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"Details:"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"* Name"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"* Phone Number"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"* Email"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"* Gender"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"* Location (multiple allowed)"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"* Subjects (multiple allowed)"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"    * Subject Name"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"    * Hourly Rate"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"    * Education Level"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"    * Years of Experience"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"    * Qualifications"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"Format:"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"`add_tutor n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS... \u003cs/SUBJECT_NAME r/RATE l/EDUCATION_LEVEL y/YEARS q/QUALIFICATIONS\u003e...`"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"Example Input:"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"`add_tutor n/John Doe p/98765432 e/johnd@example.com g/Male a/John street, block 123, #01-01 s/English r/50 l/Sec 3 y/5 q/A-Level s/Mathematics r/60 l/Sec 4 y/6 q/A-Level`"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"### List all tutors: `list_tutors`"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"View a list of all tutors known."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"Example Output:"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"```"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"1) John Doe"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"2) Jane Doe"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"3) Peter Ng"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"```"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"jared98lyj"},"content":"### Viewing a tutor: `view_tutor`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"Views a tutor\u0027s personal information."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"Format: `view_tutor INDEX`"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"Example: `view_tutor 1`"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"Example Output:\u003cbr\u003e"},{"lineNumber":103,"author":{"gitId":"glatiuden"},"content":"```"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"Name: John Doe \u003cbr\u003e Phone Number: 98765432"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"Email Address: johnd@example.com"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"Address: John street, block 123, #01-01"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"Subject Expertise: English, Mathematics (Sec 3, 4)"},{"lineNumber":108,"author":{"gitId":"jared98lyj"},"content":"Hourly Rate: SGD60/hr \u003cbr\u003e Years of Experience: 6"},{"lineNumber":109,"author":{"gitId":"glatiuden"},"content":"```"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"### Adding an appointment : `appointment`"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"Adds an appointment with a specific tutor to the schedule.\u003cbr\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"Format: `appointment n/NAME s/SUBJECT d/DATE fr/TIME_FROM to/TIME_TO [l/LOCATION]`"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"* The date format `yyyy-mm-dd` must be strictly followed. e.g. `2021-3-1`and `2021-03-01`."},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"* The time format `hh:mm a` must be strictly followed. e.g. `9:01 am` and `10:30 pm`."},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"An appointment can only have 0 or 1 location."},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"Examples:\u003cbr\u003e"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"* `appointment n/Andrew Ng s/Mathematics d/2021-3-1 fr/10:00am to/12:00am`"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"* `appointment n/Chloe Lim s/English d/2021-4-20 fr/2:00pm to/c l/Bedok`"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"glatiuden"},"content":"### Listing all tuition appointments : `list_appointments`"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"glatiuden"},"content":"Shows a list of all upcoming tuition schedules in the personal tuition appointment list."},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"glatiuden"},"content":"Format: `list_appointments`"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"glatiuden"},"content":"Example outputs:"},{"lineNumber":135,"author":{"gitId":"glatiuden"},"content":"```"},{"lineNumber":136,"author":{"gitId":"glatiuden"},"content":"1) John Doe - 2021-4-20 2:00pm - 4:00pm @ Bedok National Library"},{"lineNumber":137,"author":{"gitId":"glatiuden"},"content":"2) Jane Doe - 2021-4-21 2:00pm - 4:00pm @ Bedok National Library"},{"lineNumber":138,"author":{"gitId":"glatiuden"},"content":"3) Peter Ng - 2021-4-24 2:00pm - 4:00pm @ Bedok National Library"},{"lineNumber":139,"author":{"gitId":"glatiuden"},"content":"```"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"kingsleykuan"},"content":"### View tuition appointment details: `view_appointment`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"glatiuden"},"content":"View details of a tuition appointment."},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"kingsleykuan"},"content":"Format:"},{"lineNumber":146,"author":{"gitId":"kingsleykuan"},"content":"`view_appointment INDEX`"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"kingsleykuan"},"content":"Example:"},{"lineNumber":149,"author":{"gitId":"kingsleykuan"},"content":"`view_appointment 1`"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"kingsleykuan"},"content":"Example Output:"},{"lineNumber":152,"author":{"gitId":"kingsleykuan"},"content":"```"},{"lineNumber":153,"author":{"gitId":"kingsleykuan"},"content":"Appointment Details"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"kingsleykuan"},"content":"Tutor Name: Chloe Lim"},{"lineNumber":156,"author":{"gitId":"kingsleykuan"},"content":"Appointment Date: 2021-4-20"},{"lineNumber":157,"author":{"gitId":"kingsleykuan"},"content":"Appointment Time: 2:00pm - 2:00pm"},{"lineNumber":158,"author":{"gitId":"kingsleykuan"},"content":"Location: Bedok National Library"},{"lineNumber":159,"author":{"gitId":"kingsleykuan"},"content":"```"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"kingsleykuan"},"content":"### Delete a tuition appointment: `delete_appointment`"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"kingsleykuan"},"content":"Format: `delete_appointment INDEX`"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"kingsleykuan"},"content":"Deletes the specific appointment at the specified INDEX."},{"lineNumber":166,"author":{"gitId":"kingsleykuan"},"content":"The index refers to the index number shown in the displayed person list."},{"lineNumber":167,"author":{"gitId":"glatiuden"},"content":"The index must be a positive integer e.g. `1, 2, 3, …​`"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"glatiuden"},"content":"Referencing to the example output from `list_appointments`,"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"glatiuden"},"content":"Example:"},{"lineNumber":172,"author":{"gitId":"glatiuden"},"content":"`delete_appointment 1`"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"glatiuden"},"content":"Example Output:"},{"lineNumber":175,"author":{"gitId":"glatiuden"},"content":"```"},{"lineNumber":176,"author":{"gitId":"glatiuden"},"content":"1) Jane Doe - 2021-4-21 2:00pm - 4:00pm @ Bedok National Library"},{"lineNumber":177,"author":{"gitId":"glatiuden"},"content":"2) Peter Ng - 2021-4-24 2:00pm - 4:00pm @ Bedok National Library"},{"lineNumber":178,"author":{"gitId":"glatiuden"},"content":"```"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"glatiuden"},"content":"--------------------------------------------------------------------------------------------------------------------\t"},{"lineNumber":181,"author":{"gitId":"Winniehyx"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":182,"author":{"gitId":"Winniehyx"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Tutor Tracker home folder."},{"lineNumber":183,"author":{"gitId":"glatiuden"},"content":"--------------------------------------------------------------------------------------------------------------------\t"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":187,"author":{"gitId":"glatiuden"},"content":"**Add a new tutor** | `add_tutor n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS... \u003cs/SUBJECT_NAME r/RATE l/EDUCATION_LEVEL y/YEARS q/QUALIFICATIONS\u003e...` \u003cbr\u003e e.g., `add_tutor n/John Doe p/98765432 e/johnd@example.com g/Male a/John street, block 123, #01-01 s/English r/50 l/Sec 3 y/5 q/A-Level s/Mathematics r/60 l/Sec 4 y/6 q/A-Level`"},{"lineNumber":188,"author":{"gitId":"glatiuden"},"content":"**List tutors** | `list_tutors`"},{"lineNumber":189,"author":{"gitId":"glatiuden"},"content":"**View a tutor details** | `view_tutor INDEX`, \u003cbr\u003e e.g. `view_tutor 1`"},{"lineNumber":190,"author":{"gitId":"glatiuden"},"content":"**Add a new appointment** | `appointment n/NAME s/SUBJECT d/DATE fr/TIME_FROM to/TIME_TO [l/LOCATION]` \u003cbr\u003e e.g., `appointment n/Chloe Lim s/English d/2021-4-20 fr/2:00pm to/c l/Bedok`"},{"lineNumber":191,"author":{"gitId":"glatiuden"},"content":"**List tuition appointments** | `list_appointments`"},{"lineNumber":192,"author":{"gitId":"glatiuden"},"content":"**View a tuition appointment details** | `view_appointment` \u003cbr\u003e e.g. `view_appointment 1`"},{"lineNumber":193,"author":{"gitId":"kingsleykuan"},"content":"**Delete a tuition appointment** | `delete_appointment` \u003cbr\u003e e.g. `delete_appointment 1`"}],"authorContributionMap":{"jared98lyj":2,"yutingzou":14,"kingsleykuan":44,"-":88,"glatiuden":43,"Winniehyx":2}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"user -[USER_COLOR]\u003e ui : \"delete_appointment 1\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete_appointment 1\")"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteAppointment(a)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAppointment(addressBook)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml"}],"authorContributionMap":{"-":34,"glatiuden":4}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"participant \":TutorTrackerParser\" as TutorTrackerParser LOGIC_COLOR"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"[-\u003e LogicManager : execute(\"delete_appointment 1\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"LogicManager -\u003e TutorTrackerParser : parseCommand(\"delete_appointment 1\")"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"activate TutorTrackerParser"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser -\u003e DeleteCommandParser"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"DeleteCommandParser --\u003e TutorTrackerParser"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser -\u003e DeleteCommandParser : parse(\"1\")"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"DeleteCommandParser --\u003e TutorTrackerParser : d"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar."},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"DeleteCommandParser -[hidden]-\u003e TutorTrackerParser"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser --\u003e LogicManager : d"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"deactivate TutorTrackerParser"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"DeleteCommand -\u003e Model : deleteAppointment(1)"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml"}],"authorContributionMap":{"-":57,"glatiuden":12}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"Class TutorTrackerParser"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"LogicManager --\u003e\"1\" TutorTrackerParser"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser .left.\u003e XYZCommandParser: creates \u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"note right of XYZCommand: XYZCommand \u003d AddAppointmentCommand, \\nDeleteAppointmentCommand, etc"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml"}],"authorContributionMap":{"-":58,"glatiuden":4}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"title: Tutor Tracker"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-3/tp/actions)"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"**Tutor Tracker** is a desktop app designed to **help students search for tutors and manage tuition appointments**, optimised for use via a Command Line Interface (CLI) for a fast and streamlined experience."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"* If you are interested in using **Tutor Tracker**, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start)."},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"* If you are interested about developing **Tutor Tracker**, the [**Developer Guide**](DeveloperGuide.html) is a good place to start."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"kingsleykuan":7,"-":13}},{"path":"docs/team/Winniehyx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"---"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Winnie Ho Yi Xuan\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"---"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"Hello, I am Winnie, a Year 2 Computer Science student. I like to spot fashion trends and operate an online shop that buy and sell clothing."},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"## Project: Tutor Tracker"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"* **New Feature**:"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **Project management**:"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"* **Enhancements to existing features**:"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"* **Documentation**:"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    * User Guide:"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    * Developer Guide:"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"* **Community**:"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"* **Tools**:"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"* _{you can add/remove categories in the list above}_"}],"authorContributionMap":{"glatiuden":21,"Winniehyx":1}},{"path":"docs/team/glatiuden.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"---"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Koh Vinleon\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"---"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"## Project: Tutor Tracker"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"Given below are my contributions to the project."},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"* **New Feature**:"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"* **Project management**:"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"* **Enhancements to existing features**:"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **Documentation**:"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    * User Guide:"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"        * Added documentation for the feature `list_appointments` [\\#2]()"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    * Developer Guide:"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"        * Added introduction: [\\#5]()"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"        * Did cosmetic tweaks to existing documentation of Design Section - `Architecture`, `Design`: [\\#5]()"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        * Added user cases of the `list_appointments` feature: [\\#5]()"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"* **Community**:"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"* **Tools**:"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"* _{you can add/remove categories in the list above}_"}],"authorContributionMap":{"glatiuden":24}},{"path":"docs/team/jared98lyj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"---"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Jared Lim\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"---"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"## Project: Tutor Hunter"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"Tutor Hunter is a desktop tutor finder application that links a user with multiple"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"tutor in the database. The user interacts with it using a CLI, and it"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"has a GUI created with JavaFX."},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"Given below are my contributions to the project."},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **New Feature**: Added an Appointment class to represent the relation between tutor and tutee."},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"* **Code contributed**:"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"* **Project management**:"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"  * Managed releases `v1.1` (3 releases) on GitHub"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"* **Enhancements to existing features**:"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"  "},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"* **Documentation**:"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"  * User Guide:"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    * Added documentation (format and example usage) for the command view_tutor"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"  * Developer Guide:"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    * Added Non Functional Requirements"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"* **Community**:"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"  "},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"* **Tools**:"}],"authorContributionMap":{"jared98lyj":30,"glatiuden":3}},{"path":"docs/team/kingsleykuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"---"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"title: Kingsley Kuan Jun Hao\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"---"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"Hello I’m Kingsley a Year 2 Computer Science student. I’m an aspiring researcher and content creator."},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"## Project: Tutor Tracker"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"* **Code contributed**: [RepoSense link]()"}],"authorContributionMap":{"kingsleykuan":12}},{"path":"docs/team/yutingzou.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"---"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Zou Yuting\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"---"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"Hi I\u0027m Yuting, a year 4 Business Analytics student. I like to cook and explore nice food in every city I visit :)"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"## Project: Tutor Tracker"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"* **New Feature**:"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **Project management**:"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"* **Enhancements to existing features**:"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"* **Documentation**:"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    * User Guide:"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    * Developer Guide:"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"* **Community**:"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"* **Tools**:"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"* _{you can add/remove categories in the list above}_"}],"authorContributionMap":{"yutingzou":1,"glatiuden":21}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book."},{"lineNumber":32,"author":{"gitId":"-"},"content":" */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47)."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them."},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \""},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \""},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \""},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \""},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//..."},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //..."},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done."},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user."},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface."},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string."},{"lineNumber":155,"author":{"gitId":"-"},"content":" *"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}."},{"lineNumber":171,"author":{"gitId":"-"},"content":" */"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user."},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below."},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508)."},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person."},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code."},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation."},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes."},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person."},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"glatiuden"},"content":"Simply add the following to [`seedu.address.ui.TutorCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe)."},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later."},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71)."},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition."},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands."},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well."},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail."},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI."},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //..."},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps."},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`."},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//..."},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//..."},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}."},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior."},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected."},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`."},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut."},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method."},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`."},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`."},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9)."},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook."}],"authorContributionMap":{"-":393,"glatiuden":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book."},{"lineNumber":33,"author":{"gitId":"-"},"content":" */"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \""},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \""},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \""},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \""},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \""},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \""},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \""},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \""},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}."},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"        // TODO: Edit Tutor Subjects"},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTutorSubject\u003e updatedTutorSubjects \u003d new ArrayList\u003c\u003e();"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTutorSubjects, updatedTags);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // state check"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(e.index)"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * corresponding field value of the person."},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Name name;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Phone phone;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Email email;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Address address;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor."},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally."},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited."},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.email \u003d email;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.address \u003d address;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}."},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally."},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * if modification is attempted."},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null."},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // short circuit if same object"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // instanceof handles nulls"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // state check"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kingsleykuan":6,"-":225}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution."},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"        // TODO: Parse Tutor Subjects"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTutorSubject\u003e tutorSubjects \u003d new ArrayList\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"        Person person \u003d new Person(name, phone, email, address, tutorSubjects, tagList);"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new AddCommand(person);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}."},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kingsleykuan":7,"-":59}},{"path":"src/main/java/seedu/address/model/AppointmentStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model;"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":" * Temporary stub class to test the UI interface."},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":" */"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"public class AppointmentStub {"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"    private final Email email;"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"    private final String subject;"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"    private final LocalDateTime dateTime;"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    private final String location;"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"     * Default constructor for AppointmentStub"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public AppointmentStub(Email email, String subject, LocalDateTime dateTime, String location) {"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        this.email \u003d email;"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"        this.subject \u003d subject;"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"        this.location \u003d location;"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public Email getEmail() {"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        return email;"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    public String getSubject() {"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        return subject;"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"        return dateTime;"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"    public String getLocation() {"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        return location;"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"}"}],"authorContributionMap":{"glatiuden":41}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book."},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Address implements Filterable {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}."},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email."},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        return value.contains(s);"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":55,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book."},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Email implements Filterable {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \""},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \""},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \""},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final String value;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}."},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param email A valid email address."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(email);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        value \u003d email;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email."},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"        return value.contains(s);"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":65,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":" * Represents a Person\u0027s name in the address book."},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Gender implements Filterable {"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"            \"Gender should only contain alphanumeric characters and spaces, should be female or male,\""},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"                    + \"and it should not be blank\";"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    /*"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"     * The first character of the address must not be a whitespace,"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    public final String personGender;"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"     * Constructs a {@code Name}."},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"     * @param gender A valid gender."},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    public Gender(String gender) {"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"        requireNonNull(gender);"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        personGender \u003d gender;"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"     * Returns true if a given string is a valid name."},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"    public static boolean isValidGender(String test) {"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        return personGender;"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    public boolean equals(Object other) {"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"                || (other instanceof Name // instanceof handles nulls"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"                \u0026\u0026 personGender.equals(((Name) other).fullName)); // state check"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"    public int hashCode() {"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"        return personGender.hashCode();"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"        return personGender.contains(s);"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":65}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book."},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Name implements Filterable {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}."},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name."},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"        return fullName.contains(s);"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":57,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book."},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"    private final List\u003cTutorSubject\u003e tutorSubjects \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null."},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"    public Person(Name name, Phone phone, Email email, Address address,"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"            List\u003cTutorSubject\u003e tutorSubjects, Set\u003cTag\u003e tags) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"        this.tutorSubjects.addAll(tutorSubjects);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Address getAddress() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"     * Returns an immutable list, which throws {@code UnsupportedOperationException}"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"     * if modification is attempted."},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"    public List\u003cTutorSubject\u003e getTutorSubjects() {"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"        return Collections.unmodifiableList(tutorSubjects);"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name."},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons."},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())"},{"lineNumber":109,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherPerson.getTutorSubjects().equals(getTutorSubjects())"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":116,"author":{"gitId":"kingsleykuan"},"content":"        return Objects.hash(name, phone, email, address, tutorSubjects, tags);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        builder.append(getName())"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(getPhone())"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getEmail())"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(getAddress());"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTutorSubject\u003e tutorSubjects \u003d getTutorSubjects();"},{"lineNumber":131,"author":{"gitId":"kingsleykuan"},"content":"        if (!tutorSubjects.isEmpty()) {"},{"lineNumber":132,"author":{"gitId":"kingsleykuan"},"content":"            builder.append(\"; Subjects: \");"},{"lineNumber":133,"author":{"gitId":"kingsleykuan"},"content":"            tutorSubjects.forEach(builder::append);"},{"lineNumber":134,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return builder.toString();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kingsleykuan":23,"-":121}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book."},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Phone implements Filterable {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}."},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number."},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        return value.contains(s);"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":51,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/subject/SubjectExperience.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Tutor\u0027s years of experience in a subject in Tutor Tracker."},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidExperience(String)}"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectExperience implements Filterable {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Subject experience should only contain numbers, and it should be at least 1 digit long\";"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    public final Integer experience;"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectExperience}."},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"     * @param experience A valid subject experience."},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectExperience(String experience) {"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(experience);"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidExperience(experience), MESSAGE_CONSTRAINTS);"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"        this.experience \u003d Integer.parseInt(experience);"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject experience."},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidExperience(String test) {"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"        return experience.toString();"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectExperience // instanceof handles nulls"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 experience.equals(((SubjectExperience) other).experience)); // state check"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"        return experience.hashCode();"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"        return experience.equals(Integer.parseInt(s));"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":57}},{"path":"src/main/java/seedu/address/model/subject/SubjectLevel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Subject\u0027s education level in Tutor Tracker."},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLevel(String)}"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectLevel implements Filterable {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Subject level should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    /*"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"     * The first character of the subject level must not be a whitespace,"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    public final String level;"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectLevel}."},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     * @param level A valid subject level."},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectLevel(String level) {"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(level);"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidLevel(level), MESSAGE_CONSTRAINTS);"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        this.level \u003d level;"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject level."},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidLevel(String test) {"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        return level;"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectLevel // instanceof handles nulls"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 level.equals(((SubjectLevel) other).level)); // state check"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"        return level.hashCode();"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"        return level.contains(s);"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":63}},{"path":"src/main/java/seedu/address/model/subject/SubjectName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Subject\u0027s name in Tutor Tracker."},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectName implements Filterable {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    /*"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"     * The first character of the subject name must not be a whitespace,"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    public final String name;"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectName}."},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     * @param name A valid subject name."},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectName(String name) {"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(name);"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        this.name \u003d name;"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid name."},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidName(String test) {"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        return name;"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectName // instanceof handles nulls"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 name.equals(((SubjectName) other).name)); // state check"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"        return name.hashCode();"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"        return name.contains(s);"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":63}},{"path":"src/main/java/seedu/address/model/subject/SubjectQualification.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Tutor\u0027s qualifications in a subject in Tutor Tracker."},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQualification(String)}"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectQualification implements Filterable {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Qualifications should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    /*"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"     * The first character of the subject qualification must not be a whitespace,"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    public final String qualification;"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectQualification}."},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     * @param qualification A valid subject qualification."},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectQualification(String qualification) {"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(qualification);"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidQualification(qualification), MESSAGE_CONSTRAINTS);"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        this.qualification \u003d qualification;"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject qualification."},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidQualification(String test) {"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        return qualification;"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectQualification // instanceof handles nulls"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 qualification.equals(((SubjectQualification) other).qualification)); // state check"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"        return qualification.hashCode();"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"        return qualification.contains(s);"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":63}},{"path":"src/main/java/seedu/address/model/subject/SubjectRate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Subject\u0027s hourly rate in Tutor Tracker."},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRate(String)}"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectRate implements Filterable {"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Subject rate should only contain numbers, and it should be at least 1 digit long\";"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    public final Integer rate;"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectRate}."},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"     * @param rate A valid subject rate."},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectRate(String rate) {"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(rate);"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidRate(rate), MESSAGE_CONSTRAINTS);"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"        this.rate \u003d Integer.parseInt(rate);"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject rate."},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidRate(String test) {"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"        return rate.toString();"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectRate // instanceof handles nulls"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 rate.equals(((SubjectRate) other).rate)); // state check"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"        return rate.hashCode();"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"        return rate.equals(Integer.parseInt(s));"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":57}},{"path":"src/main/java/seedu/address/model/subject/TutorSubject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Represents a subject that a tutor offers."},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"public class TutorSubject implements Filterable {"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectName name;"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectLevel level;"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectRate rate;"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectExperience experience;"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectQualification qualification;"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"     * Every field must be present and not null."},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    public TutorSubject(SubjectName name, SubjectLevel level, SubjectRate rate,"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"            SubjectExperience experience, SubjectQualification qualification) {"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"        requireAllNonNull(name, level, rate, experience, qualification);"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"        this.name \u003d name;"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"        this.level \u003d level;"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"        this.rate \u003d rate;"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"        this.experience \u003d experience;"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        this.qualification \u003d qualification;"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectName getName() {"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"        return name;"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectLevel getLevel() {"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"        return level;"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectRate getRate() {"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"        return rate;"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectExperience getExperience() {"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"        return experience;"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectQualification getQualification() {"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"        return qualification;"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if both tutor subjects have the same identity and data fields."},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"            return true;"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"        if (!(other instanceof TutorSubject)) {"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"            return false;"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"        TutorSubject otherTutorSubject \u003d (TutorSubject) other;"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"        return otherTutorSubject.getName().equals(getName())"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getLevel().equals(getLevel())"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getRate().equals(getRate())"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getExperience().equals(getExperience())"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getQualification().equals(getQualification());"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"        return Objects.hash(name, level, rate, experience, qualification);"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"        builder.append(getName())"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Level: \")"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"                .append(getLevel())"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Rate: \")"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"                .append(getRate())"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Years of Experience: \")"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"                .append(getExperience())"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Qualification: \")"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"                .append(getQualification());"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"        return builder.toString();"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"    @Override"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"        boolean disjunction \u003d false;"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || name.filter(s);"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || level.filter(s);"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || rate.filter(s);"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || experience.filter(s);"},{"lineNumber":103,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || qualification.filter(s);"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"        return disjunction;"},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"}"}],"authorContributionMap":{"kingsleykuan":106}},{"path":"src/main/java/seedu/address/model/tag/Filterable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.model.tag;"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public interface Filterable {"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    boolean filter(String s);"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":""},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"}"}],"authorContributionMap":{"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book."},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"public class Tag implements Filterable {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}."},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name."},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        return tagName.contains(s);"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"    public String getTagName() {"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        return this.tagName;"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"    boolean isSameTag(Tag otherTag) {"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"        if (otherTag \u003d\u003d this) {"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"            return true;"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"        return otherTag !\u003d null"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 otherTag.getTagName().equals(getTagName());"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"yutingzou":12,"-":53,"Winniehyx":5}},{"path":"src/main/java/seedu/address/model/tag/TagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.tag;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.util.Iterator;"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"public class TagList implements Iterable\u003cTag\u003e {"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"            FXCollections.unmodifiableObservableList(internalList);"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"     * Returns true if the list contains an equivalent tag as the given argument."},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    public boolean contains(Tag toCheck) {"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toCheck);"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTag);"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"     * Adds a tag to the list."},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     * The tag must not already exist in the list."},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    public void add(Tag toAdd) {"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toAdd);"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"        if (contains(toAdd)) {"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateTagException();"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        internalList.add(toAdd);"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"     * Replaces the tag {@code target} in the list with {@code editedTag}."},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"     * {@code target} must exist in the list."},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"     * The tag identity of {@code editedTag} must not be the same as another existing tag in the list."},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"    public void setTag(Tag target, Tag editedTag) {"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(target, editedTag);"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"        int index \u003d internalList.indexOf(target);"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"            throw new TagNotFoundException();"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"        if (!target.isSameTag(editedTag) \u0026\u0026 contains(editedTag)) {"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateTagException();"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"        internalList.set(index, editedTag);"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"     * Removes the equivalent tag from the list."},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"     * The tag must exist in the list."},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"    public void remove(Tag toRemove) {"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toRemove);"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"        if (!internalList.remove(toRemove)) {"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"            throw new TagNotFoundException();"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"    public void setTags(seedu.address.model.tag.TagList replacement) {"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(replacement);"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(replacement.internalList);"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"     * Replaces the contents of this list with {@code tags}."},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"     * {@code tags} must not contain duplicate tags."},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"    public void setTags(List\u003cTag\u003e tags) {"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(tags);"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"        if (!tagsAreUnique(tags)) {"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateTagException();"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(tags);"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}."},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"        return internalUnmodifiableList;"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"    public Iterator\u003cTag\u003e iterator() {"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"        return internalList.iterator();"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"    public boolean equals(Object other) {"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"                || (other instanceof TagList // instanceof handles nulls"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 internalList.equals(((TagList) other).internalList));"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"    @Override"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"    public int hashCode() {"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"        return internalList.hashCode();"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"     * Returns true if {@code tags} contains only unique tags."},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {"},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"            for (int j \u003d i + 1; j \u003c tags.size(); j++) {"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"                if (tags.get(i).isSameTag(tags.get(j))) {"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"                    return false;"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"                }"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"        return true;"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"}"},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":""}],"authorContributionMap":{"yutingzou":129}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.tag.exceptions;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class DuplicateTagException extends RuntimeException {"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public DuplicateTagException() {"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"        super(\"Operation would result in duplicate tags\");"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.tag.exceptions;"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":""},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":" * Signals that the operation is unable to find the specified tag."},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class TagNotFoundException extends RuntimeException {"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"                getTutorSubjectList(),"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                getTagSet(\"mathematics\")),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"                getTutorSubjectList(),"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"                getTagSet(\"english\")),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"                getTutorSubjectList(),"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"                getTagSet(\"english\", \"literature\")),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"                getTutorSubjectList(),"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"                getTagSet(\"science\")),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"                getTutorSubjectList(),"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"                getTagSet(\"geography\")),"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"                getTutorSubjectList(),"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"                getTagSet(\"history\"))"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    // TODO: Create sample Tutor Subject data"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"    public static List\u003cTutorSubject\u003e getTutorSubjectList() {"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTutorSubject\u003e tutorSubjects \u003d new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"        return tutorSubjects;"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given."},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(Tag::new)"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kingsleykuan":15,"-":54,"glatiuden":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details."},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object."},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"        // TODO: Adapt storage for Tutor Subjects"},{"lineNumber":109,"author":{"gitId":"kingsleykuan"},"content":"        final List\u003cTutorSubject\u003e modelTutorSubjects \u003d new ArrayList\u003c\u003e();"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTutorSubjects, modelTags);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kingsleykuan":6,"-":108}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.AppointmentStub;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public final AppointmentStub appointment;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    private Label subject;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    private Label name;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    private Label datetime;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"    private Label address;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display."},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"     * Temporarily using a Stub due to absence of integration."},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"    public AppointmentCard(AppointmentStub appointment, int displayedIndex) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"        this.appointment \u003d appointment;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"        subject.setText(appointment.getSubject());"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"        name.setText(appointment.getEmail().value);"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"        datetime.setText(appointment.getDateTime().format(formatter));"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"        address.setText(appointment.getLocation());"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"        if (!(other instanceof AppointmentCard)) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // state check"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 appointment.equals(card.appointment);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":53,"glatiuden":20}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.AppointmentStub;"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" * Panel containing the list of persons."},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":" */"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    private ListView\u003cAppointmentStub\u003e appointmentListView;"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}."},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointmentStub\u003e appointmentList) {"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        super(FXML);"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        appointmentListView.setItems(appointmentList);"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}."},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointmentStub\u003e {"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"        @Override"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"        protected void updateItem(AppointmentStub appointment, boolean empty) {"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"            super.updateItem(appointment, empty);"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"            if (empty || appointment \u003d\u003d null) {"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"                setGraphic(null);"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"                setText(null);"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"}"}],"authorContributionMap":{"glatiuden":49}},{"path":"src/main/java/seedu/address/ui/CalendarView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import java.time.Year;"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import java.time.YearMonth;"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.HPos;"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.Insets;"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.VPos;"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.effect.BlendMode;"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Border;"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BorderStroke;"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BorderStrokeStyle;"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BorderWidths;"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.GridPane;"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.text.Text;"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":" * UI calendar component that is displayed."},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":" * Adapted from https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":" * and https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":" */"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"public class CalendarView extends UiPart\u003cRegion\u003e {"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"CalendarView.fxml\";"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    private static final int[] DAYS_IN_MONTH \u003d {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    private static final String[] MONTHS \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\","},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    private int[] simulateGridPane \u003d new int[42];"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"    private int day;"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"    private int month;"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"    private int year;"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"    private YearMonth yearMonth;"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"    private LocalDate todayDate;"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"    private LocalDate nonPivotDate;"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"    private LocalDate pivotDate;"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"    private LocalDate firstDayOfTheMonth;"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"    private int prevMonthBalance;"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"    private int nextMonthBalance;"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"    private int thisMonthBalance;"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"    private final int currentDay;"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"    private Text monthYearText;"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"    private GridPane dateGridPane;"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"    private GridPane monthYearGridPane;"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"    private GridPane weekDayGridPane;"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"    private ImageView leftButton;"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"    private ImageView rightButton;"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"     * Constructor for the calendar view in TutorTracker"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"    public CalendarView() {"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"        super(FXML);"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"        this.todayDate \u003d LocalDate.now();"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"        this.pivotDate \u003d todayDate;"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"        this.nonPivotDate \u003d todayDate;"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"        this.day \u003d todayDate.getDayOfMonth();"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"        this.month \u003d todayDate.getMonthValue();"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"        this.year \u003d todayDate.getYear();"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"        this.currentDay \u003d this.day;"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"        this.yearMonth \u003d YearMonth.of(this.year, this.month);"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"        this.firstDayOfTheMonth \u003d yearMonth.atDay(1);"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"        setMonthYearLabel();"},{"lineNumber":89,"author":{"gitId":"glatiuden"},"content":"        generateCalender();"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    // with minor modifications (renaming variables)."},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * It will update the attributes in the class according to the appointmentDate parse in"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param date the new appointmentDate"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void updateDayMonthYear(LocalDate date) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.year \u003d date.getYear();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.month \u003d date.getMonthValue();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.day \u003d date.getDayOfMonth();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.yearMonth \u003d YearMonth.of(this.year, this.month);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.firstDayOfTheMonth \u003d yearMonth.atDay(1);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private boolean isSameMonth(LocalDate d1, LocalDate d2) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return d1.withDayOfMonth(1).equals(d2.withDayOfMonth(1));"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Find the number of days in a month given the year and month."},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @return return the number of days."},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int findNumberOfDaysInTheMonth() {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (this.month \u003d\u003d 2) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (this.yearMonth.isLeapYear()) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                return 29;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                return DAYS_IN_MONTH[month - 1];"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return DAYS_IN_MONTH[month - 1];"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Find the number of days in a month given the year and month."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @return return the number of days."},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int findNumberOfDaysOfAMonth(int month, int year) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (month \u003d\u003d 2) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            if (Year.isLeap(year)) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                return 29;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                return DAYS_IN_MONTH[month - 1];"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return DAYS_IN_MONTH[month - 1];"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Find the number of days in the previous month given the year and month."},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @return return the number of days."},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public int findNumberOfDaysInPreviousMonth() {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (this.month \u003e\u003d 2) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return findNumberOfDaysOfAMonth(this.month - 1, this.year);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return DAYS_IN_MONTH[11];"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Set the monthYear Label\u0027s content."},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void setMonthYearLabel() {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        StringBuilder monthYear \u003d new StringBuilder();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        monthYear.append(MONTHS[this.nonPivotDate.getMonthValue() - 1]);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        monthYear.append(\"  \");"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        monthYear.append(this.nonPivotDate.getYear());"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String output \u003d monthYear.toString();"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        this.monthYearText.setText(output);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Fill up the simulateGridPane[] with the appointmentDate in order."},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private void fill() {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        this.thisMonthBalance \u003d findNumberOfDaysInTheMonth();"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        int firstDayOfMonth \u003d this.firstDayOfTheMonth.getDayOfWeek().getValue();"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        this.prevMonthBalance \u003d firstDayOfMonth % 7;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        int firstValue \u003d findNumberOfDaysInPreviousMonth() - this.prevMonthBalance + 1;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c this.prevMonthBalance; i++) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.simulateGridPane[i] \u003d firstValue;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            firstValue++;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c this.thisMonthBalance; i++) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.simulateGridPane[this.prevMonthBalance + i] \u003d i + 1;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        this.nextMonthBalance \u003d 42 - this.thisMonthBalance - prevMonthBalance;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        int newStartingPoint \u003d this.thisMonthBalance + prevMonthBalance;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c this.nextMonthBalance; i++) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.simulateGridPane[newStartingPoint + i] \u003d i + 1;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Generate Label for dateGridPane."},{"lineNumber":222,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * @param dayNumber text for the Label"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * @return a label with specific text and font"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private Label createLabel(int dayNumber) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Label label \u003d new Label();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        label.setText(\"\" + dayNumber);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        label.setStyle(\"-fx-text-fill: white\");"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return label;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Generate a VBox with specific calendar."},{"lineNumber":239,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * @return a VBox for dateGridPane."},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    private VBox placeHolderForLabel() {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        VBox holder \u003d new VBox();"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        holder.setFillWidth(false);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        holder.setPrefHeight(20);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        holder.setPrefWidth(20);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        holder.setMinSize(20, 20);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        holder.setMaxSize(30, 30);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        holder.setAlignment(Pos.CENTER);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return holder;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    // with minor modifications (change of colors and code structure)."},{"lineNumber":258,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * Assign a Vbox to each GridPane."},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * Each Vbox contains a Label."},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Each label\u0027s text is correspond to the calendar."},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void generateCalender() {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        fill();"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        this.weekDayGridPane.setBackground(new Background("},{"lineNumber":267,"author":{"gitId":"-"},"content":"                new BackgroundFill(Color.valueOf(\"#383838\"), CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        this.dateGridPane.setBackground(new Background("},{"lineNumber":269,"author":{"gitId":"-"},"content":"                new BackgroundFill(Color.valueOf(\"#383838\"), CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        for (int row \u003d 0; row \u003c 6; row++) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            for (int col \u003d 0; col \u003c 7; col++) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                VBox holder \u003d placeHolderForLabel();"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"                if (i \u003c this.prevMonthBalance || i \u003e 42 - 1 - this.nextMonthBalance) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    holder.setBlendMode(BlendMode.SOFT_LIGHT);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"                if (i \u003d\u003d this.prevMonthBalance + this.day - 1 \u0026\u0026 isSameMonth(this.pivotDate, this.nonPivotDate)) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    holder.setBackground(new Background("},{"lineNumber":280,"author":{"gitId":"-"},"content":"                            new BackgroundFill(Color.valueOf(\"#5e5e5e\"), CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"                if (isSameMonth(this.todayDate, this.nonPivotDate)"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                        \u0026\u0026 i \u003d\u003d this.prevMonthBalance + this.currentDay - 1) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    holder.setBorder(new Border(new BorderStroke(Color.valueOf(\"white\"),"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                            BorderStrokeStyle.SOLID, CornerRadii.EMPTY, new BorderWidths(1))));"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"                Label num \u003d createLabel(this.simulateGridPane[i]);"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"                holder.getChildren().add(num);"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"                holder.setOnMouseClicked(event -\u003e {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    Label a \u003d (Label) holder.getChildren().get(0);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    int clickedDate \u003d Integer.parseInt(a.getText());"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    if (holder.getBlendMode() !\u003d BlendMode.SOFT_LIGHT) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                        pivotDate \u003d nonPivotDate.withDayOfMonth(clickedDate);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                    } else {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                        pivotDate \u003d getNewDate(clickedDate);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    nonPivotDate \u003d pivotDate;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    updateDayMonthYear(pivotDate);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    refreshCalenderView();"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"                this.dateGridPane.add(holder, col, row);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                GridPane.setHalignment(holder, HPos.CENTER);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                GridPane.setValignment(holder, VPos.CENTER);"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                i++;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":319,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * Refresh the whole dateGridPane to show latest UI."},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    private void refreshCalenderView() {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        dateGridPane.getChildren().clear();"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        updateDayMonthYear(nonPivotDate);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        setMonthYearLabel();"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        generateCalender();"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":334,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":335,"author":{"gitId":"-"},"content":"     * generate a new local appointmentDate according to input new appointmentDate."},{"lineNumber":336,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * @param value appointmentDate indicator."},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * @return a new localDate object with that appointmentDate."},{"lineNumber":339,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    private LocalDate getNewDate(int value) {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        if (value \u003c\u003d 31 \u0026\u0026 value \u003e\u003d 21) {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            LocalDate prevM \u003d this.nonPivotDate.minusMonths(1);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            prevM \u003d prevM.withDayOfMonth(value);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return prevM;"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            LocalDate nextM \u003d this.nonPivotDate.plusMonths(1);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            nextM \u003d nextM.withDayOfMonth(value);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            return nextM;"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":356,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * Initialise calendar to previous month data when the next button is clicked."},{"lineNumber":358,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    public void handleToPrev() {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        this.nonPivotDate \u003d nonPivotDate.minusMonths(1);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        updateDayMonthYear(nonPivotDate);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        refreshCalenderView();"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    // Reused from"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    // with no modifications."},{"lineNumber":371,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":372,"author":{"gitId":"-"},"content":"     * Initialise calendar to next month data when the next button is clicked."},{"lineNumber":373,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    public void handleToNext() {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        this.nonPivotDate \u003d nonPivotDate.plusMonths(1);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        updateDayMonthYear(nonPivotDate);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        refreshCalenderView();"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"glatiuden":91,"-":289}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-t14-3.github.io/tp/UserGuide.html\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow."},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread."},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing."},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage."},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown."},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard."},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":101,"glatiuden":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.AppointmentStub;"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    private static final DateTimeFormatter DATETIME_FORMAT \u003d new DateTimeFormatterBuilder()"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[yyyy-MM-dd HH:mm]\")"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[yyyy-MM-dd]\")"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[d-M-yyyy HH:mm]\")"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[d-M-yyyy]\")"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[yyyy/MM/dd HH:mm]\")"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[yyyy/MM/dd]\")"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[d/M/yyyy HH:mm]\")"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"            .appendPattern(\"[d/M/yyyy]\")"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"            .toFormatter();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Stage primaryStage;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Logic logic;"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"    private TutorListPanel tutorListPanel;"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"    private ResultBarFooter resultDisplay;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"    private CalendarView calendarView;"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"    private AppointmentListPanel appointmentListPanel;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"    private StackPane statusbarPlaceholder;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"    private StackPane calendarViewPane;"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"    private StackPane appointmentListPanelPlaceholder;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Set dependencies"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Configure the UI"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setAccelerators();"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"        calendarView \u003d new CalendarView();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return primaryStage;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerators() {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        /*"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK."},{"lineNumber":116,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * the TextInputControl(s)."},{"lineNumber":122,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay."},{"lineNumber":126,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                event.consume();"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"glatiuden"},"content":"    private ObservableList\u003cAppointmentStub\u003e generateMockData() {"},{"lineNumber":136,"author":{"gitId":"glatiuden"},"content":"        ObservableList\u003cAppointmentStub\u003e mockList \u003d FXCollections.observableArrayList();"},{"lineNumber":137,"author":{"gitId":"glatiuden"},"content":"        mockList.add(new AppointmentStub(new Email(\"alexyeoh@example.com\"), \"Mathematics (Sec 4)\","},{"lineNumber":138,"author":{"gitId":"glatiuden"},"content":"                LocalDateTime.parse(\"2020-02-24 14:00\", DATETIME_FORMAT), \"Geylang\"));"},{"lineNumber":139,"author":{"gitId":"glatiuden"},"content":"        mockList.add(new AppointmentStub(new Email(\"bernice@example.com\"), \"Science (Sec 4)\","},{"lineNumber":140,"author":{"gitId":"glatiuden"},"content":"                LocalDateTime.parse(\"2020-02-27 15:00\", DATETIME_FORMAT), \"Serangoon\"));"},{"lineNumber":141,"author":{"gitId":"glatiuden"},"content":"        return mockList;"},{"lineNumber":142,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window."},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    void fillInnerParts() {"},{"lineNumber":148,"author":{"gitId":"glatiuden"},"content":"        tutorListPanel \u003d new TutorListPanel(logic.getFilteredPersonList());"},{"lineNumber":149,"author":{"gitId":"glatiuden"},"content":"        personListPanelPlaceholder.getChildren().add(tutorListPanel.getRoot());"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"glatiuden"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(generateMockData());"},{"lineNumber":152,"author":{"gitId":"glatiuden"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"glatiuden"},"content":"        resultDisplay \u003d new ResultBarFooter();"},{"lineNumber":155,"author":{"gitId":"glatiuden"},"content":"        statusbarPlaceholder.getChildren().add(resultDisplay.getRoot());"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"},{"lineNumber":159,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":160,"author":{"gitId":"glatiuden"},"content":"        calendarViewPane.getChildren().add(new CalendarView().getRoot());"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}."},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened."},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void handleHelp() {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            helpWindow.show();"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            helpWindow.focus();"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":188,"author":{"gitId":"glatiuden"},"content":"    private void setCalendarNavigation(String direction) throws CommandException {"},{"lineNumber":189,"author":{"gitId":"glatiuden"},"content":"        if (direction.equals(\"next\")) {"},{"lineNumber":190,"author":{"gitId":"glatiuden"},"content":"            calendarView.handleToNext();"},{"lineNumber":191,"author":{"gitId":"glatiuden"},"content":"        } else if (direction.equals(\"prev\")) {"},{"lineNumber":192,"author":{"gitId":"glatiuden"},"content":"            calendarView.handleToPrev();"},{"lineNumber":193,"author":{"gitId":"glatiuden"},"content":"        } else {"},{"lineNumber":194,"author":{"gitId":"glatiuden"},"content":"            throw new CommandException(\"MESSAGE_UNKNOWN_COMMAND\");"},{"lineNumber":195,"author":{"gitId":"glatiuden"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application."},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.hide();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"glatiuden"},"content":"    public TutorListPanel getPersonListPanel() {"},{"lineNumber":215,"author":{"gitId":"glatiuden"},"content":"        return tutorListPanel;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result."},{"lineNumber":220,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                handleHelp();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                handleExit();"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return commandResult;"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            throw e;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":184,"glatiuden":60}},{"path":"src/main/java/seedu/address/ui/ResultBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":" * A ui for the status bar that is displayed at the footer of the application."},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":" */"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"public class ResultBarFooter extends UiPart\u003cRegion\u003e {"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private Label saveLocationStatus;"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public ResultBarFooter() {"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        super(FXML);"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    public void setFeedbackToUser(String feedbackToUser) {"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(feedbackToUser);"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"        saveLocationStatus.setText(feedbackToUser);"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"}"}],"authorContributionMap":{"glatiuden":27}},{"path":"src/main/java/seedu/address/ui/TutorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"public class TutorCard extends UiPart\u003cRegion\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"TutorListCard.fxml\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime."},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display."},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"    public TutorCard(Person person, int displayedIndex) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"        if (!(other instanceof TutorCard)) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"        TutorCard card \u003d (TutorCard) other;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":72,"glatiuden":5}},{"path":"src/main/java/seedu/address/ui/TutorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"public class TutorListPanel extends UiPart\u003cRegion\u003e {"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"TutorListPanel.fxml\";"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TutorListPanel.class);"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    private ListView\u003cPerson\u003e tutorListView;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}."},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public TutorListPanel(ObservableList\u003cPerson\u003e tutorList) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        tutorListView.setItems(tutorList);"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        tutorListView.setCellFactory(listView -\u003e new TutorListViewCell());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}."},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    class TutorListViewCell extends ListCell\u003cPerson\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"                setGraphic(new TutorCard(person, getIndex() + 1).getRoot());"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":39,"glatiuden":9}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.Region?\u003e"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"        \u003ccolumnConstraints\u003e"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"        \u003c/columnConstraints\u003e"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"            \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"            \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"1.\"\u003e"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"                    \u003cminWidth\u003e"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"                    \u003c/minWidth\u003e"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"                \u003c/Label\u003e"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel fx:id\u003d\"subject\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$subject\" /\u003e"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"            \u003c/HBox\u003e"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$name\" /\u003e"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"            \u003cLabel fx:id\u003d\"datetime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$datetime\" /\u003e"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"        \u003c/VBox\u003e"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"      \u003crowConstraints\u003e"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"         \u003cRowConstraints /\u003e"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"      \u003c/rowConstraints\u003e"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    \u003c/GridPane\u003e"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"\u003c/HBox\u003e"}],"authorContributionMap":{"glatiuden":38}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.ListView?\u003e"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c/VBox\u003e"}],"authorContributionMap":{"glatiuden":8}},{"path":"src/main/resources/view/CalendarView.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.image.Image?\u003e"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.text.Text?\u003e"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"\u003cAnchorPane fx:id\u003d\"calenderPane\" prefHeight\u003d\"300.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    \u003cchildren\u003e"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"        \u003cGridPane fx:id\u003d\"monthYearGridPane\" alignment\u003d\"CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"600.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"            \u003ccolumnConstraints\u003e"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"            \u003c/columnConstraints\u003e"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"            \u003crowConstraints\u003e"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"            \u003c/rowConstraints\u003e"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"            \u003cchildren\u003e"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"                \u003cText fx:id\u003d\"monthYearText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" textAlignment\u003d\"CENTER\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont size\u003d\"18.0\" /\u003e"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Text\u003e"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                \u003cImageView fx:id\u003d\"leftButton\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" onMouseClicked\u003d\"#handleToPrev\" GridPane.halignment\u003d\"LEFT\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"                    \u003cGridPane.margin\u003e"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"                        \u003cInsets left\u003d\"10.0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"                    \u003c/GridPane.margin\u003e"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"                    \u003cimage\u003e"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"                        \u003cImage url\u003d\"@../images/arrow_backward_icon.png\" /\u003e"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"                    \u003c/image\u003e"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"                \u003c/ImageView\u003e"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"                \u003cImageView fx:id\u003d\"rightButton\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" onMouseClicked\u003d\"#handleToNext\" GridPane.halignment\u003d\"RIGHT\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"                    \u003cGridPane.margin\u003e"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"                        \u003cInsets right\u003d\"10.0\" /\u003e"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"                    \u003c/GridPane.margin\u003e"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"               \u003cimage\u003e"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"                  \u003cImage url\u003d\"@../images/arrow_forward_icon.png\" /\u003e"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"               \u003c/image\u003e"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"                \u003c/ImageView\u003e"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"            \u003c/children\u003e"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        \u003c/GridPane\u003e"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"        \u003cGridPane fx:id\u003d\"weekDayGridPane\" layoutY\u003d\"58.0\" prefHeight\u003d\"42.0\" prefWidth\u003d\"600.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"30.0\"\u003e"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"            \u003ccolumnConstraints\u003e"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"            \u003c/columnConstraints\u003e"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"            \u003crowConstraints\u003e"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"            \u003c/rowConstraints\u003e"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"            \u003cchildren\u003e"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" styleClass\u003d\"weekDayLabel\" text\u003d\"S\" textAlignment\u003d\"CENTER\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"M\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"T\" GridPane.columnIndex\u003d\"2\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"W\" GridPane.columnIndex\u003d\"3\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"T\" GridPane.columnIndex\u003d\"4\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"F\" GridPane.columnIndex\u003d\"5\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"S\" GridPane.columnIndex\u003d\"6\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":89,"author":{"gitId":"glatiuden"},"content":"            \u003c/children\u003e"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"            \u003cpadding\u003e"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"                \u003cInsets top\u003d\"10.0\" /\u003e"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"            \u003c/padding\u003e"},{"lineNumber":93,"author":{"gitId":"glatiuden"},"content":"        \u003c/GridPane\u003e"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"        \u003cGridPane fx:id\u003d\"dateGridPane\" layoutY\u003d\"105.0\" prefHeight\u003d\"300.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"75.0\"\u003e"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"            \u003ccolumnConstraints\u003e"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":97,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":101,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"},{"lineNumber":103,"author":{"gitId":"glatiuden"},"content":"            \u003c/columnConstraints\u003e"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"            \u003crowConstraints\u003e"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":108,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":109,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":110,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"            \u003c/rowConstraints\u003e"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"        \u003c/GridPane\u003e"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"    \u003c/children\u003e"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"glatiuden":114}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.stage.Stage?\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"\u003cfx:root minHeight\u003d\"650.0\" minWidth\u003d\"700.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Tutor Tracker\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"            \u003cHBox\u003e"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"               \u003cchildren\u003e"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"                  \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"                     \u003cchildren\u003e"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"                        \u003cHBox style\u003d\"-fx-background-color: #383838;\"\u003e"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"                           \u003cchildren\u003e"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"                              \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"                                 \u003cimage\u003e"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"                                    \u003cImage url\u003d\"@../images/favorite_icon.png\" /\u003e"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/image\u003e"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"                              \u003c/ImageView\u003e"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"                              \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"25.0\" style\u003d\"-fx-text-fill: white;\" styleClass\u003d\"cell_big_label\" text\u003d\"Favorites\"\u003e"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"                                 \u003cHBox.margin\u003e"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"                                    \u003cInsets left\u003d\"4.0\" /\u003e"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/HBox.margin\u003e"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"                              \u003c/Label\u003e"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"                           \u003c/children\u003e"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"                           \u003cVBox.margin\u003e"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets /\u003e"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"                           \u003c/VBox.margin\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                           \u003cpadding\u003e"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                           \u003c/padding\u003e"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"                        \u003c/HBox\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"                    \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"150.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"                     \u003c/children\u003e"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"                  \u003c/VBox\u003e"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"                  \u003cVBox prefWidth\u003d\"150.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"                     \u003cchildren\u003e"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"                           \u003cHBox alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: #383838;\"\u003e"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"                               \u003cchildren\u003e"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"                                   \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"                                 \u003cimage\u003e"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"                                    \u003cImage url\u003d\"@../images/calendar_icon.png\" /\u003e"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/image\u003e\u003c/ImageView\u003e"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"                                   \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"25.0\" style\u003d\"-fx-text-fill: white;\" styleClass\u003d\"cell_big_label\" text\u003d\"Schedule\"\u003e"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"                                 \u003cHBox.margin\u003e"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"                                    \u003cInsets left\u003d\"4.0\" /\u003e"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/HBox.margin\u003e"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"                                   \u003c/Label\u003e"},{"lineNumber":89,"author":{"gitId":"glatiuden"},"content":"                               \u003c/children\u003e"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"                           \u003cVBox.margin\u003e"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets /\u003e"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"                           \u003c/VBox.margin\u003e"},{"lineNumber":93,"author":{"gitId":"glatiuden"},"content":"                           \u003cpadding\u003e"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"                           \u003c/padding\u003e"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"                           \u003c/HBox\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"                         \u003cStackPane fx:id\u003d\"calendarViewPane\" maxHeight\u003d\"300.0\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"250.0\" style\u003d\"-fx-background-color: #383838\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"                             \u003cpadding\u003e"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"                                 \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"},{"lineNumber":101,"author":{"gitId":"glatiuden"},"content":"                             \u003c/padding\u003e"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"                         \u003c/StackPane\u003e"},{"lineNumber":103,"author":{"gitId":"glatiuden"},"content":"                        \u003cVBox fx:id\u003d\"appointmentList\" prefWidth\u003d\"150.0\" styleClass\u003d\"pane-with-border\"\u003e"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"                           \u003cpadding\u003e"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"                           \u003c/padding\u003e"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"                           \u003cchildren\u003e"},{"lineNumber":108,"author":{"gitId":"glatiuden"},"content":"                              \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":109,"author":{"gitId":"glatiuden"},"content":"                           \u003c/children\u003e"},{"lineNumber":110,"author":{"gitId":"glatiuden"},"content":"                        \u003c/VBox\u003e"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"                     \u003c/children\u003e"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"                  \u003c/VBox\u003e"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"               \u003c/children\u003e"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"            \u003c/HBox\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"-":48,"glatiuden":71}},{"path":"src/main/resources/view/TutorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e"}],"authorContributionMap":{"-":34,"glatiuden":2}},{"path":"src/main/resources/view/TutorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.ListView?\u003e"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":""},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"  \u003cListView fx:id\u003d\"tutorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c/VBox\u003e"}],"authorContributionMap":{"glatiuden":8}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"    private List\u003cTutorSubject\u003e tutorSubjects;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details."},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public PersonBuilder() {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"        tutorSubjects \u003d new ArrayList\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}."},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"        tutorSubjects \u003d personToCopy.getTutorSubjects();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building."},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building."},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"     * Parses the {@code subject} and add it to the {@code Person} that we are building."},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"    public PersonBuilder withSubject() {"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"        // TODO: Add withSubject method"},{"lineNumber":103,"author":{"gitId":"kingsleykuan"},"content":"        this.tutorSubjects \u003d SampleDataUtil.getTutorSubjectList();"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"        return this;"},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Person build() {"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"        return new Person(name, phone, email, address, tutorSubjects, tags);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kingsleykuan":16,"-":95}}]
