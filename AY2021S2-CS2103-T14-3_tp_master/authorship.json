[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"# Tutor Tracker","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-3/tp/actions)","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp)","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"* **Tutor Tracker** is a desktop app designed to **help students search for tutors and manage tuition appointments**, optimised for use via a Command Line Interface (CLI) for a fast and streamlined experience.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"* For the detailed documentation of this project, see the **[Tutor Tracker Product Website](https://ay2021s2-cs2103-t14-3.github.io/tp/)**.","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"kingsleykuan":7,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yutingzou":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"You can reach us at the emails:","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"```","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"kingsley.kuan[at]u.nus.edu","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"vinleon[at]u.nus.edu","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"jared_lyj[at]u.nus.edu","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"e0425411[at]u.nus.edu","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"zou.yuting[at]u.nus.edu","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"```","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"### Kingsley Kuan Jun Hao","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/kingsleykuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"[[github](https://github.com/kingsleykuan)]","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"[[portfolio](team/kingsleykuan.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"* Role: Documentation, Testing","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"### Koh Vinleon","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/glatiuden.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"[[github](http://github.com/glatiuden)]","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"[[portfolio](team/glatiuden.md)]","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"* Role: Integration","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"### Lim Yong Jian Jared","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/jared98lyj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"[[github](http://github.com/jared98lyj)]","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"[[portfolio](team/jared98lyj.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"* Role: Scheduling and tracking","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"### Winnie Ho Yi Xuan","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/winniehyx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"[[github](http://github.com/Winniehyx)]","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"[[portfolio](team/Winniehyx.md)]","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"### Zou Yuting","lastModifiedDate":"2021-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"\u003cimg src\u003d\"images/yutingzou.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"[[github](http://github.com/yutingzou)]","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"[[portfolio](team/yutingzou.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"* Role: Code quality","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"kingsleykuan":29,"-":29,"glatiuden":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"## **Introduction**","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"**Tutor Tracker** is a desktop tuition management application meant for secondary students to track their tuition information, such as upcoming tuition appointments and tutor\u0027s contact information.","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"It focuses on the Command Line Interface (CLI) while providing users with a simple and clean Graphical User Interface (GUI).","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"Thus, the main interaction with **Tutor Tracker** will be done through commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"Tutor Tracker is an all-in-one tuition management solution for tech-savvy secondary school students.","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"The features of Tutor Tracker includes:","lastModifiedDate":"2021-02-25"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"- Viewing of tutors\u0027 profile","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"- Adding new tuition appointments","lastModifiedDate":"2021-02-25"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"- Filtering tutors by personal preference (i.e. availability, experiences, name, location, price, etc.)","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"- Viewing upcoming tuition appointments","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"The purpose of this Developer Guide is to help you understand the design and implementation of Tutor Tracker to get started on your contributions to Tutor Tracker.","lastModifiedDate":"2021-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"This section will help you learn more about the design and structure of Tutor Tracker. Each section will describe and explains how each component of the application works.","lastModifiedDate":"2021-02-25"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"It\u0027s noteworthy to mention that the Tutor Tracker follows an Object-Oriented Programming paradigm.","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"_Figure 1. Architecture Diagram of Tutor Tracker_","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"The application consists of 6 main components:","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"| Component                           | Description","lastModifiedDate":"2021-02-25"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"| ----------------------------------- | -------------------------------------------------------------------- |","lastModifiedDate":"2021-02-25"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"| `Main`                              | **`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/MainApp.java). \u003cbr/\u003eIt is responsible for: \u003cli\u003eAt app launch: Initializes the components in the correct sequence, and connects them up with each other.\u003c/li\u003e \u003cli\u003eAt shut down: Shuts down the components and invokes cleanup methods where necessary.\u003c/li\u003e|","lastModifiedDate":"2021-02-25"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"| [**`UI`**](#ui-component)           | The UI of the App.                                                   |","lastModifiedDate":"2021-02-25"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"| [**`Logic`**](#logic-component)     | The command executor.                                                |","lastModifiedDate":"2021-02-25"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"| [**`Model`**](#model-component)     | Holds the data of the App in memory.                                 |","lastModifiedDate":"2021-02-25"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"| [**`Storage`**](#storage-component) | Reads data from, and writes data to, the hard disk.                  |","lastModifiedDate":"2021-02-25"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"| [**`Commons`**](#common-classes)    | Represents a collection of classes used by multiple other components.|","lastModifiedDate":"2021-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"For each of `UI`, `Logic`, `Model` and `Storage` component, it","lastModifiedDate":"2021-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete_appointment 1`.","lastModifiedDate":"2021-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103-T14-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"1. `Logic` uses the `TutorTrackerParser` class to parse the user command.","lastModifiedDate":"2021-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"1. The command execution can affect the `Model` (e.g. adding an appointment).","lastModifiedDate":"2021-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete_appointment 1\")` API call.","lastModifiedDate":"2021-02-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"![Interactions Inside the Logic Component for the `delete appointment_1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-02-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"**API** : `Model.java`","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Winniehyx"},"content":"* stores the TutorTracker data.","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"glatiuden"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `TutorTracker`, which `Person` references. This allows `TutorTracker` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"glatiuden"},"content":"**API** : `Storage.java`","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"* can save the Tutor Hunter details in json format and read it back.","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"glatiuden"},"content":"Classes used by multiple components are in the `seedu.TutorTracker.commons` package.","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Winniehyx"},"content":"### [Proposed] Favourite Feature","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"Winniehyx"},"content":"####Proposed Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"The proposed favourite feature is to facilitate the user to keep track of his/her favourites ","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"out of the entire list of tutors. It implements the following operations:","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":"* `Favourite tutor` - Add a tutor to the list of favourite tutors.","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":"* `Unfavourite tutor` - Delete the tutor from the list of favourite.","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"Winniehyx"},"content":"* `List favourites` - Show the list of the favourite tutor.","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"Winniehyx"},"content":"These operations are exposed in the `Logic` interface by parsing respective `FavouriteCommand`,","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"Winniehyx"},"content":"`UnfavouriteCommand` and `ListFavouriteCommand`.","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"Winniehyx"},"content":"Given below are example usage scenarios and how the favourite feature behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"Winniehyx"},"content":"### [Proposed] Note Feature","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"Winniehyx"},"content":"####Proposed Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"Winniehyx"},"content":"The proposed note feature is to facilitate the user to keep track of his/her own notes of different ","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"Winniehyx"},"content":"tutors and appointments. Additionally, it implements the following operations:","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"Winniehyx"},"content":"* `Add note` - Add a note","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"Winniehyx"},"content":"* `Delete note` - Delete a note","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"Winniehyx"},"content":"* `Edit note` - Edit a note","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"Winniehyx"},"content":"Given below are example usage scenarios and how the note feature behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"yutingzou"},"content":"### [Proposed] Gradebook Feature","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"yutingzou"},"content":"####Proposed Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"yutingzou"},"content":"The proposed gradebook feature is to facilitate the user to keep track of his/her","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"yutingzou"},"content":"own grades of different subjects for reference, which are internally stored as `gradeList`. Additionally,","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"yutingzou"},"content":"it implements the following operations:  ","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"yutingzou"},"content":"* `Add a subject grade` - Add a subject grade to user\u0027s gradebook","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"yutingzou"},"content":"* `Delete a subject grade` - Delete a subject grade by subject name","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"yutingzou"},"content":"* `Edit a subject grade` - Edit a subject grade by subject name","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"yutingzou"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"yutingzou"},"content":"These operations are exposed in the `Logic` interface by parsing respective `AddGradeCommand`, ","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"yutingzou"},"content":"`DeleteGradeCommand` and `EditGradeCommand`.","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"yutingzou"},"content":"Given below is example usage scenarios and how the gradebook features behave.","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"kingsleykuan"},"content":"### [Proposed] Filter Feature","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"kingsleykuan"},"content":"This Filter feature would allow users to manage filters and apply them to the list of tutors","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"kingsleykuan"},"content":"and appointments. This would facilitate filtering of tutors by attributes such as personal","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"kingsleykuan"},"content":"information as well as the subjects they teach, as well as filter appointments by appointment attributes.","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"kingsleykuan"},"content":"The following commands would be added:","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"kingsleykuan"},"content":"* Add filter - Add a new filter to the filter list, updating the visible tutors and appointments","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"kingsleykuan"},"content":"* Delete filter - Delete a filter from the filter list","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"kingsleykuan"},"content":"* Edit filter - Edit a filter from the filter list (including whether it is active)","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"kingsleykuan"},"content":"* List filters - List all filters currently used","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"kingsleykuan"},"content":"A new `Filter` class would be implemented, along with a list to store them. Each `Filter` object","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"kingsleykuan"},"content":"would contain predicates that filter the attribute classes, which would be combined and used to","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"kingsleykuan"},"content":"filter the lists of tutors and appointments.","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"kingsleykuan"},"content":"These filters would be shown in the UI along the top of the list of tutors and appointments, showing","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"kingsleykuan"},"content":"the active and inactive filters.","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"glatiuden"},"content":"### [Proposed] Schedule Feature","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"glatiuden"},"content":"####Proposed Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"glatiuden"},"content":"The proposed schedule feature is to facilitate the user to keep track of his/her ","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"glatiuden"},"content":"own schedule, which are events that are closely related to tuition, i.e., tuition\u0027s homework deadline. ","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"glatiuden"},"content":"The schedules are internally stored in `scheduleList`. ","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"glatiuden"},"content":"Additionally,  it implements the following operations:","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"glatiuden"},"content":"* `Add a schedule` - Add a schedule to the user\u0027s schedules","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"glatiuden"},"content":"* `Delete a schedule` - Delete a schedule by schedule name","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"glatiuden"},"content":"* `Edit a schedule` - Edit a schedule by schedule name","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"glatiuden"},"content":"These operations are exposed in the `Logic` interface by parsing respective `AddScheduleCommand`,","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"glatiuden"},"content":"`DeleteScheduleCommand` and `EditScheduleCommand`.","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"glatiuden"},"content":"Given below is example usage scenarios and how the schedule features behave.","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"glatiuden"},"content":"### [Proposed] Reminder Feature","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"glatiuden"},"content":"####Proposed Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"glatiuden"},"content":"The proposed reminder feature is to facilitate the user to keep track of his/her","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"glatiuden"},"content":"own events (`appointment` or `schedule`) in the form of reminders when he/she runs the application.","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"glatiuden"},"content":"The reminders are internally stored in `reminderList`.","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"glatiuden"},"content":"Additionally,  it implements the following operations:","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"glatiuden"},"content":"* `Add a reminder` - Add a reminder to the user\u0027s reminders","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"glatiuden"},"content":"* `Delete a reminder` - Delete a reminder by index","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"glatiuden"},"content":"* `Edit a reminder` - Edit a reminder by index","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"glatiuden"},"content":"These operations are exposed in the `Logic` interface by parsing respective `AddReminderCommand`,","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"glatiuden"},"content":"`DeleteReminderCommand` and `EditReminderCommand`.","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"jared98lyj"},"content":"### [Proposed Budget Feature]","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"jared98lyj"},"content":"#### Proposed Implementaion","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"jared98lyj"},"content":"The proposed budget feature is to facilitate the user to keep track of the total","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"jared98lyj"},"content":"of his own appointments and whether it is within the budget he has set for ","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"jared98lyj"},"content":"himself. The budget is an optional feature, and can easily be added through ","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"jared98lyj"},"content":"CLI.","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"jared98lyj"},"content":"It supports the following operations:","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"jared98lyj"},"content":"#### `command` - example usage ","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"jared98lyj"},"content":"* `add_budget budget_size` - add_budget b/500","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"jared98lyj"},"content":"* `edit_budget budget_size` - edit_budget b/600","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"jared98lyj"},"content":"* `delete_budget` - delete_budget","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"jared98lyj"},"content":"* `view_budget` - view_budget","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"glatiuden"},"content":"Given below is example usage scenarios and how the reminder features behave.","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"glatiuden"},"content":"_{More to be added}_","lastModifiedDate":"2021-03-03"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"kingsleykuan"},"content":"Tech-savvy secondary school students in Singapore who to need to search for tutors and manage their tuition appointments, and prefer CLI over GUI.","lastModifiedDate":"2021-02-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"kingsleykuan"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"kingsleykuan"},"content":"The demand for tuition in Singapore is escalating, especially among secondary school students. A large amount of time and money has been invested in finding tutors and managing ever growing lists of tuition appointments. Currently, there are limited number of apps and websites that cater to this need, particularly in a streamlined typing oriented CLI. Therefore, this app aims to assist secondary school students in streamlining the process of searching for tutors and managing their tuition appointments. These students can search for an ideal tutor based on their personal preferences (such as subjects, expertise, years of experience, cost, availability etc.), and cut down on the time taken tracking their favoured tutors and tuition appointments.","lastModifiedDate":"2021-02-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"glatiuden"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-03-03"},{"lineNumber":280,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Add new tutor details                              | Keep track of a new tutor that I have heard about               |","lastModifiedDate":"2021-02-28"},{"lineNumber":281,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | List all tutors                                    | See all known tutors                                            |","lastModifiedDate":"2021-02-28"},{"lineNumber":282,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | View details of a tutor (subject, background, age) | Determine whether I should choose this tutor                    |","lastModifiedDate":"2021-02-28"},{"lineNumber":283,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Get the email address of a tutor                   | Contact tutors directly for queries                             |","lastModifiedDate":"2021-02-28"},{"lineNumber":284,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Add tuition appointment                            | Keep track of appointments I have made                          |","lastModifiedDate":"2021-02-28"},{"lineNumber":285,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | View my tuition appointments                       | Keep track of appointments                                      |","lastModifiedDate":"2021-02-28"},{"lineNumber":286,"author":{"gitId":"glatiuden"},"content":"| `* * *` | User | Filter my tuition appointments by tutor\u0027s name     | Keep track of all the tuition appointments under a particular tutor|","lastModifiedDate":"2021-03-17"},{"lineNumber":287,"author":{"gitId":"glatiuden"},"content":"| `* * *` | User | Filter my tuition appointments by date             | Keep track of all the tuition appointments that falls on the same day|","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Delete a tuition appointment                       | Remove canceled appointments                                    |","lastModifiedDate":"2021-02-28"},{"lineNumber":289,"author":{"gitId":"Winniehyx"},"content":"| `* * *` | User | Check my own tuition appointments list             | Know the timing of ALL my appointments in order                 |","lastModifiedDate":"2021-02-28"},{"lineNumber":290,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their subject discipline          | Find a tutor that caters to my needs (academic)                 |","lastModifiedDate":"2021-02-28"},{"lineNumber":291,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutor by cost                               | Find a tutor that fits into budget as well                      |","lastModifiedDate":"2021-02-28"},{"lineNumber":292,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter a tutor by his/her name                     | View tutor\u0027s profile                                            |","lastModifiedDate":"2021-02-28"},{"lineNumber":293,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their years of experience         | Find a tutor with experience within the range of my expectation |","lastModifiedDate":"2021-02-28"},{"lineNumber":294,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their available timeslots         | Find a tutor with matched tuition time                          |","lastModifiedDate":"2021-02-28"},{"lineNumber":295,"author":{"gitId":"kingsleykuan"},"content":"| `* * *` | User | Filter tutors by their available location          | Find tutors in a specific area                                  |","lastModifiedDate":"2021-02-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":298,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"glatiuden"},"content":"_For all use cases below, the **System** is the `TutorTracker` and the **Actor** is the `user`, unless specified otherwise._","lastModifiedDate":"2021-03-03"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":304,"author":{"gitId":"glatiuden"},"content":"\u003chr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0001: Add new tutor details**","lastModifiedDate":"2021-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"kingsleykuan"},"content":"1. User inputs tutor details.","lastModifiedDate":"2021-02-28"},{"lineNumber":311,"author":{"gitId":"kingsleykuan"},"content":"2. TutorTracker confirms that tutor details have been added to list.","lastModifiedDate":"2021-02-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"kingsleykuan"},"content":"* 2a. Tutor details already exists in list.","lastModifiedDate":"2021-02-28"},{"lineNumber":315,"author":{"gitId":"glatiuden"},"content":"    * 2a1. TutorTracker shows an error message","lastModifiedDate":"2021-03-03"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"kingsleykuan"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2021-02-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":319,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":321,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0002: List all tutors**","lastModifiedDate":"2021-03-03"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":323,"author":{"gitId":"glatiuden"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":324,"author":{"gitId":"glatiuden"},"content":"1. User requests to list tutors.","lastModifiedDate":"2021-03-03"},{"lineNumber":325,"author":{"gitId":"glatiuden"},"content":"2. TutorTracker shows a list of tutors.","lastModifiedDate":"2021-03-03"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":327,"author":{"gitId":"glatiuden"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":329,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":331,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0003: View a tutor**","lastModifiedDate":"2021-03-17"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":333,"author":{"gitId":"glatiuden"},"content":"**MSS**","lastModifiedDate":"2021-03-17"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":335,"author":{"gitId":"glatiuden"},"content":"1.  User requests to list the list of all tutors.","lastModifiedDate":"2021-03-17"},{"lineNumber":336,"author":{"gitId":"glatiuden"},"content":"2.  TutorTracker shows a list of tutors.","lastModifiedDate":"2021-03-17"},{"lineNumber":337,"author":{"gitId":"glatiuden"},"content":"3.  User requests to view a tutor by index.","lastModifiedDate":"2021-03-17"},{"lineNumber":338,"author":{"gitId":"glatiuden"},"content":"4.  TutorTracker displays the tutor.","lastModifiedDate":"2021-03-17"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":340,"author":{"gitId":"glatiuden"},"content":"**Extensions**","lastModifiedDate":"2021-03-17"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":342,"author":{"gitId":"glatiuden"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-17"},{"lineNumber":343,"author":{"gitId":"glatiuden"},"content":"    * 1a1. TutorTracker shows a message that there are no tutors.","lastModifiedDate":"2021-03-17"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":345,"author":{"gitId":"glatiuden"},"content":"  Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":347,"author":{"gitId":"glatiuden"},"content":"* 3a. The index is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":348,"author":{"gitId":"glatiuden"},"content":"    * 3a1. TutorTracker shows an error message.","lastModifiedDate":"2021-03-17"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":350,"author":{"gitId":"glatiuden"},"content":"  User case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":352,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":354,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0004: Add new tuition appointment**","lastModifiedDate":"2021-03-17"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"yutingzou"},"content":"1.  User requests to add an appointment.","lastModifiedDate":"2021-02-25"},{"lineNumber":359,"author":{"gitId":"yutingzou"},"content":"2.  TutorTracker adds the appointment and displays the new appointment.","lastModifiedDate":"2021-02-25"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"glatiuden"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"yutingzou"},"content":"* 1a. The tutor name, date of appointment or start and end time is empty.","lastModifiedDate":"2021-02-26"},{"lineNumber":365,"author":{"gitId":"yutingzou"},"content":"    * 1a1. TutorTracker shows an error message.","lastModifiedDate":"2021-02-25"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"yutingzou"},"content":"* 1b. The given date or start and end time is invalid.","lastModifiedDate":"2021-02-26"},{"lineNumber":370,"author":{"gitId":"yutingzou"},"content":"    * 1b1. TutorTracker shows an error message.","lastModifiedDate":"2021-02-25"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"yutingzou"},"content":"        Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":374,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0005: List all tuition appointments**","lastModifiedDate":"2021-03-17"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":380,"author":{"gitId":"glatiuden"},"content":"1. User requests to view the list of tuition appointments.","lastModifiedDate":"2021-03-03"},{"lineNumber":381,"author":{"gitId":"glatiuden"},"content":"2. TutorTracker displays the list of tuition appointments to the user.","lastModifiedDate":"2021-03-03"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"kingsleykuan"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":384,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":385,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0006: View tuition appointment**","lastModifiedDate":"2021-03-17"},{"lineNumber":388,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":389,"author":{"gitId":"glatiuden"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"yutingzou"},"content":"1.  User requests to view the list of tuition appointments.","lastModifiedDate":"2021-03-14"},{"lineNumber":392,"author":{"gitId":"yutingzou"},"content":"2.  TutorTracker displays the list of tuition appointments to the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":393,"author":{"gitId":"glatiuden"},"content":"3.  User requests to view an appointment by date.","lastModifiedDate":"2021-03-17"},{"lineNumber":394,"author":{"gitId":"yutingzou"},"content":"2.  TutorTracker displays the appointment.","lastModifiedDate":"2021-03-14"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":400,"author":{"gitId":"glatiuden"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-03"},{"lineNumber":401,"author":{"gitId":"glatiuden"},"content":"    * 1a1. TutorTracker shows a message that there are no appointments.","lastModifiedDate":"2021-03-03"},{"lineNumber":402,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":403,"author":{"gitId":"glatiuden"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":404,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":405,"author":{"gitId":"glatiuden"},"content":"* 3a. The date is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":406,"author":{"gitId":"glatiuden"},"content":"    * 3a1. TutorTracker shows an error message.","lastModifiedDate":"2021-03-17"},{"lineNumber":407,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":408,"author":{"gitId":"yutingzou"},"content":"    User case ends.","lastModifiedDate":"2021-03-14"},{"lineNumber":409,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":410,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":411,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":412,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0007: Find tuition appointment**","lastModifiedDate":"2021-03-17"},{"lineNumber":413,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":414,"author":{"gitId":"glatiuden"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":415,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":416,"author":{"gitId":"glatiuden"},"content":"1.  User requests to view the list of tuition appointments.","lastModifiedDate":"2021-03-17"},{"lineNumber":417,"author":{"gitId":"glatiuden"},"content":"2.  TutorTracker displays the list of tuition appointments to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":418,"author":{"gitId":"glatiuden"},"content":"3.  User requests to find appointments by tutor\u0027s name.","lastModifiedDate":"2021-03-17"},{"lineNumber":419,"author":{"gitId":"glatiuden"},"content":"2.  TutorTracker displays the appointment that match the search value.","lastModifiedDate":"2021-03-17"},{"lineNumber":420,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":421,"author":{"gitId":"glatiuden"},"content":"    Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":422,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":423,"author":{"gitId":"yutingzou"},"content":"**Extensions**","lastModifiedDate":"2021-03-14"},{"lineNumber":424,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":425,"author":{"gitId":"yutingzou"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-14"},{"lineNumber":426,"author":{"gitId":"glatiuden"},"content":"    * 1a1. TutorTracker shows a message that there are no appointments.","lastModifiedDate":"2021-03-17"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":428,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-14"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":430,"author":{"gitId":"glatiuden"},"content":"* 3a. No appointment matches the search value.","lastModifiedDate":"2021-03-17"},{"lineNumber":431,"author":{"gitId":"glatiuden"},"content":"    * 3a1. TutorTracker displays an empty list.","lastModifiedDate":"2021-03-17"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":433,"author":{"gitId":"yutingzou"},"content":"  User case ends.","lastModifiedDate":"2021-03-14"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":435,"author":{"gitId":"yutingzou"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":437,"author":{"gitId":"glatiuden"},"content":"**Use Case UC0008: Delete a tuition appointment**","lastModifiedDate":"2021-03-17"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":439,"author":{"gitId":"glatiuden"},"content":"**MSS**","lastModifiedDate":"2021-03-17"},{"lineNumber":440,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":441,"author":{"gitId":"glatiuden"},"content":"1.  User requests to list appointments.","lastModifiedDate":"2021-03-17"},{"lineNumber":442,"author":{"gitId":"glatiuden"},"content":"2.  TutorTracker shows a list of appointments.","lastModifiedDate":"2021-03-17"},{"lineNumber":443,"author":{"gitId":"glatiuden"},"content":"3.  User requests to delete a specific appointment in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":444,"author":{"gitId":"glatiuden"},"content":"4.  TutorTracker deletes that specific appointment.","lastModifiedDate":"2021-03-17"},{"lineNumber":445,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":446,"author":{"gitId":"glatiuden"},"content":"\u003chr/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":449,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"jared98lyj"},"content":"**Technical Requirements**:","lastModifiedDate":"2021-03-01"},{"lineNumber":453,"author":{"gitId":"jared98lyj"},"content":"* Application should be able to launch in any operating","lastModifiedDate":"2021-03-01"},{"lineNumber":454,"author":{"gitId":"jared98lyj"},"content":"  systems (Linux, Max, Windows) with JDK 11 installed on computer.","lastModifiedDate":"2021-03-01"},{"lineNumber":455,"author":{"gitId":"jared98lyj"},"content":"* Should be able to","lastModifiedDate":"2021-03-01"},{"lineNumber":456,"author":{"gitId":"jared98lyj"},"content":"  run on both 32-bit and 64-bit systems.","lastModifiedDate":"2021-03-01"},{"lineNumber":457,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":458,"author":{"gitId":"jared98lyj"},"content":"**Performance Requirements**","lastModifiedDate":"2021-03-01"},{"lineNumber":459,"author":{"gitId":"jared98lyj"},"content":"* Response to user command (add, delete, update, retrieve)","lastModifiedDate":"2021-03-01"},{"lineNumber":460,"author":{"gitId":"jared98lyj"},"content":"  should be visible within 2 seconds.","lastModifiedDate":"2021-03-01"},{"lineNumber":461,"author":{"gitId":"jared98lyj"},"content":"* Should be able to hold at least 10000 persons","lastModifiedDate":"2021-03-01"},{"lineNumber":462,"author":{"gitId":"jared98lyj"},"content":"  and appointments without any noticeable decrease in loading time.","lastModifiedDate":"2021-03-01"},{"lineNumber":463,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":464,"author":{"gitId":"jared98lyj"},"content":"**Quality Requirements**","lastModifiedDate":"2021-03-01"},{"lineNumber":465,"author":{"gitId":"jared98lyj"},"content":"* Interface can be used by a user with no programming","lastModifiedDate":"2021-03-01"},{"lineNumber":466,"author":{"gitId":"jared98lyj"},"content":"  experience, i.e., user should not be expected to key in complicated commands or","lastModifiedDate":"2021-03-01"},{"lineNumber":467,"author":{"gitId":"jared98lyj"},"content":"  logical statements to get a desired output.","lastModifiedDate":"2021-03-01"},{"lineNumber":468,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":469,"author":{"gitId":"jared98lyj"},"content":"**Process Requirements**","lastModifiedDate":"2021-03-01"},{"lineNumber":470,"author":{"gitId":"jared98lyj"},"content":"* Project to be updated with one new feature/improvement from","lastModifiedDate":"2021-03-01"},{"lineNumber":471,"author":{"gitId":"jared98lyj"},"content":"  each member each week.","lastModifiedDate":"2021-03-01"},{"lineNumber":472,"author":{"gitId":"jared98lyj"},"content":"* Updates will be pushed to each teammates\u0027 individual branches,","lastModifiedDate":"2021-03-01"},{"lineNumber":473,"author":{"gitId":"jared98lyj"},"content":"  where PRS are made to the master branch.","lastModifiedDate":"2021-03-01"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"yutingzou"},"content":"* **Appointment**: An event in user\u0027s local schedule with related details, including tutor\u0027s name, date of appointment, start and end time and location(optional).","lastModifiedDate":"2021-02-26"},{"lineNumber":479,"author":{"gitId":"yutingzou"},"content":"* **Education Level**: The level of education offered by a tutor for a specific subject, e.g, \"O level\".","lastModifiedDate":"2021-02-26"},{"lineNumber":480,"author":{"gitId":"yutingzou"},"content":"* **Years of Experience**: Years of experience of tutoring a specific subject.","lastModifiedDate":"2021-02-26"},{"lineNumber":481,"author":{"gitId":"yutingzou"},"content":"* **Qualifications**: Official certificates of successful completion of an education programme, e.g, Bachelor of Science.","lastModifiedDate":"2021-02-26"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"glatiuden"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample tutors. The window size may not be optimum.","lastModifiedDate":"2021-03-03"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"glatiuden"},"content":"### Deleting a tutor","lastModifiedDate":"2021-03-03"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"glatiuden"},"content":"1. Deleting a tutor while all persons are being shown","lastModifiedDate":"2021-03-03"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"glatiuden"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple tutors in the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"glatiuden"},"content":"       Expected: First tutor is deleted from the list. Details of the deleted tutor shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-03-03"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"glatiuden"},"content":"       Expected: No tutor is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-03"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jared98lyj":34,"yutingzou":38,"kingsleykuan":32,"-":258,"glatiuden":143,"Winniehyx":29}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"_**Tutor Tracker**_ is a **desktop app designed to help secondary school students manage tutors and tuition appointments, optimised for use via a Command Line Interface** (CLI) for a fast and streamlined experience while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Tutor Tracker can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"1. Download the latest `tutortracker.jar` from [here](https://github.com/AY2021S2-CS2103-T14-3/tp/releases).","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TutorTracker.","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    * **`appointment`**`n/Chloe Lim s/English d/2021-4-20 fr/2:00pm l/Bedok` : Adds an appointment with a tutor named `Chloe Lim` to the Tutor Tracker.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    * **`list_appointments`** : Lists all personal tuition appointments.","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"  e.g. in `appointment n/NAME`, `NAME` is a parameter which can be used as `appointment n/John Doe`.","lastModifiedDate":"2021-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"  e.g `n/NAME [l/LOCATION]` can be used as `n/John Doe l/Clementi` or as `n/John Doe`.","lastModifiedDate":"2021-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"  e.g. `[l/LOCATION]…​` can be used as ` ` (i.e. 0 times), `l/Bedok`.","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"  e.g. if the command specifies `n/NAME s/SUBJECT`, `s/SUBJECT n/NAME` is also acceptable.","lastModifiedDate":"2021-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"  e.g. if you specify `l/Bedok l/Clementi`, only `l/Clementi` will be taken.","lastModifiedDate":"2021-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"* Parameters in angle brackets (`\u003c`, `\u003e`) must be supplied together in order as a group. eg. with `\u003cs/SUBJECT_NAME r/RATE\u003e`, both subject name and rate must be supplied in order.","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"### Add new tutor details: `add_tutor`","lastModifiedDate":"2021-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"Add a new tutor and enter their basic details.","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"Details:","lastModifiedDate":"2021-02-27"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"* Name","lastModifiedDate":"2021-02-27"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"* Phone Number","lastModifiedDate":"2021-02-27"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"* Email","lastModifiedDate":"2021-02-27"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"* Gender","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"* Location (multiple allowed)","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"* Subjects (multiple allowed)","lastModifiedDate":"2021-02-27"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"    * Subject Name","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"    * Hourly Rate","lastModifiedDate":"2021-02-27"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"    * Education Level","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"    * Years of Experience","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"    * Qualifications","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"Format:","lastModifiedDate":"2021-02-27"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"`add_tutor n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS... \u003cs/SUBJECT_NAME r/RATE l/EDUCATION_LEVEL y/YEARS q/QUALIFICATIONS\u003e...`","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"Example Input:","lastModifiedDate":"2021-02-27"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"`add_tutor n/John Doe p/98765432 e/johnd@example.com g/Male a/John street, block 123, #01-01 s/English r/50 l/Sec 3 y/5 q/A-Level s/Mathematics r/60 l/Sec 4 y/6 q/A-Level`","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"### List all tutors: `list_tutors`","lastModifiedDate":"2021-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"View a list of all tutors known.","lastModifiedDate":"2021-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"Example Output:","lastModifiedDate":"2021-02-27"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"```","lastModifiedDate":"2021-02-27"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"1) John Doe","lastModifiedDate":"2021-02-27"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"2) Jane Doe","lastModifiedDate":"2021-02-27"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"3) Peter Ng","lastModifiedDate":"2021-02-27"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"```","lastModifiedDate":"2021-02-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"### Deleting a tutor: `delete_tutor`","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"Delete a tutor by index.","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"Format: `delete_tutor INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"Example: `delete_tutor 1`","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"### Editing a tutor: `edit_tutor`","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"Edit a tutor\u0027s information by index. Only the attributes present are changed in the tutor.","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"Format: `edit_tutor INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [g/GENDER] [a/ADDRESS] [\u003cs/SUBJECT_NAME r/RATE l/EDUCATION_LEVEL y/YEARS q/QUALIFICATIONS\u003e]...`","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"Example: `edit_tutor 1 p/99824314 s/English r/50 l/Secondary 5 y/9 q/A-Level`","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"### Viewing a tutor: `view_tutor`","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"Views a tutor\u0027s personal information.","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"Format: `view_tutor INDEX`","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"glatiuden"},"content":"Example: `view_tutor 1`","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"glatiuden"},"content":"Example Output:\u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"John Doe","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"98765432","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"John street, block 123, #01-01","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":"johnd@example.com","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"Subjects:","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"1. English","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"    Level: Sec 3","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"    Rate: SGD60/hr","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":"    Experience: 6 years","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":"    Qualification: Bacholar of English Literature","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"Winniehyx"},"content":"### Adding a favourite: `favourite`","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"Winniehyx"},"content":"Label a tutor as a favourite.","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"Winniehyx"},"content":"Format: `favourite INDEX`","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"Winniehyx"},"content":"Example: `favourite 1`","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"Winniehyx"},"content":"Example Output:\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"Winniehyx"},"content":"```","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"Winniehyx"},"content":"John Doe *","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"Winniehyx"},"content":"98765432","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"Winniehyx"},"content":"John street, block 123, #01-01","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"Winniehyx"},"content":"johnd@example.com","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"Winniehyx"},"content":"Subjects:","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"1. English","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"    Level: Sec 3","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":"    Rate: SGD60/hr","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":"    Experience: 6 years","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"Winniehyx"},"content":"    Qualification: Bacholar of English Literature","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"Winniehyx"},"content":"```","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"Winniehyx"},"content":"### Removing a favourite: `unfavourite`","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"Winniehyx"},"content":"Removes the favourite label from a tutor","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"Winniehyx"},"content":"Format: `unfavourite INDEX`","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"Winniehyx"},"content":"Example: `unfavourite 1`","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"Winniehyx"},"content":"### List all favourites: `list_favourites`","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"Winniehyx"},"content":"View a list of all favourites","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"Winniehyx"},"content":"Format: `list_favourites`","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"Winniehyx"},"content":"Example: `list_favourites`","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"glatiuden"},"content":"### Adding an appointment : `add_appointment`","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"yutingzou"},"content":"Adds an appointment with a specific tutor to the schedule.\u003cbr\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"kingsleykuan"},"content":"Format: `add_appointment e/EMAIL s/SUBJECT d/DATE fr/TIME_FROM l/LOCATION`","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"yutingzou"},"content":"* The date format `yyyy-mm-dd` must be strictly followed. e.g. `2021-3-1`and `2021-03-01`.","lastModifiedDate":"2021-02-23"},{"lineNumber":177,"author":{"gitId":"yutingzou"},"content":"* The time format `hh:mm a` must be strictly followed. e.g. `9:01 am` and `10:30 pm`.","lastModifiedDate":"2021-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"yutingzou"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":180,"author":{"gitId":"kingsleykuan"},"content":"* `appointment n/andew.ng@example.com s/Mathematics d/2021-3-1 fr/10:00am l/Bedok`","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"kingsleykuan"},"content":"* `appointment n/chloe.lim@example.com s/English d/2021-4-20 fr/2:00pm l/Bedok`","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"glatiuden"},"content":"### Listing all tuition appointments : `list_appointments`","lastModifiedDate":"2021-02-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"glatiuden"},"content":"Shows a list of all upcoming tuition schedules in the personal tuition appointment list.","lastModifiedDate":"2021-02-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"glatiuden"},"content":"Format: `list_appointments`","lastModifiedDate":"2021-02-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":189,"author":{"gitId":"glatiuden"},"content":"Example outputs:","lastModifiedDate":"2021-02-25"},{"lineNumber":190,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":191,"author":{"gitId":"kingsleykuan"},"content":"1) john.doe@example.com - 2021-4-20 2:00pm @ Bedok National Library","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"kingsleykuan"},"content":"2) jane.doe@example.com - 2021-4-21 2:00pm @ Bedok National Library","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"kingsleykuan"},"content":"3) peter.ng@example.com - 2021-4-24 2:00pm @ Bedok National Library","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"kingsleykuan"},"content":"### View tuition appointment details: `view_appointment`","lastModifiedDate":"2021-03-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":198,"author":{"gitId":"glatiuden"},"content":"View details of a tuition appointment.","lastModifiedDate":"2021-03-03"},{"lineNumber":199,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":200,"author":{"gitId":"kingsleykuan"},"content":"Format:","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"glatiuden"},"content":"`view_appointment DATE`","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":203,"author":{"gitId":"kingsleykuan"},"content":"Example:","lastModifiedDate":"2021-03-03"},{"lineNumber":204,"author":{"gitId":"glatiuden"},"content":"`view_appointment 2021-4-20`","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":206,"author":{"gitId":"kingsleykuan"},"content":"Example Output:","lastModifiedDate":"2021-03-03"},{"lineNumber":207,"author":{"gitId":"kingsleykuan"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":208,"author":{"gitId":"kingsleykuan"},"content":"Appointment Details","lastModifiedDate":"2021-03-03"},{"lineNumber":209,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":210,"author":{"gitId":"kingsleykuan"},"content":"Tutor Email: chloe.lim@example.com","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"kingsleykuan"},"content":"Appointment Date: 2021-4-20","lastModifiedDate":"2021-03-03"},{"lineNumber":212,"author":{"gitId":"yutingzou"},"content":"Appointment Time: 2:00pm","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"kingsleykuan"},"content":"Location: Bedok National Library","lastModifiedDate":"2021-03-03"},{"lineNumber":214,"author":{"gitId":"kingsleykuan"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":215,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":216,"author":{"gitId":"glatiuden"},"content":"### Find tuition appointment details: `find_appointment`","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"glatiuden"},"content":"Find list of tuition appointments based on tutor\u0027s name.","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"glatiuden"},"content":"Format:","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"glatiuden"},"content":"`find_appointment NAME...`","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"glatiuden"},"content":"Example:","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"kingsleykuan"},"content":"`find_appointment john.doe@example.com`","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"glatiuden"},"content":"Example Output:","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"glatiuden"},"content":"Appointment Details","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"kingsleykuan"},"content":"Tutor Email: john.doe@gmail.com","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"glatiuden"},"content":"Appointment Date: 2021-4-21","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"glatiuden"},"content":"Appointment Time: 2:00pm","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"glatiuden"},"content":"Location: Bedok National Library","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"kingsleykuan"},"content":"### Delete a tuition appointment: `delete_appointment`","lastModifiedDate":"2021-03-03"},{"lineNumber":237,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":238,"author":{"gitId":"kingsleykuan"},"content":"Format: `delete_appointment INDEX`","lastModifiedDate":"2021-03-03"},{"lineNumber":239,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":240,"author":{"gitId":"kingsleykuan"},"content":"Deletes the specific appointment at the specified INDEX.","lastModifiedDate":"2021-03-03"},{"lineNumber":241,"author":{"gitId":"kingsleykuan"},"content":"The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-03-03"},{"lineNumber":242,"author":{"gitId":"glatiuden"},"content":"The index must be a positive integer e.g. `1, 2, 3, …​`","lastModifiedDate":"2021-03-03"},{"lineNumber":243,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":244,"author":{"gitId":"glatiuden"},"content":"Referencing to the example output from `list_appointments`,","lastModifiedDate":"2021-03-03"},{"lineNumber":245,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":246,"author":{"gitId":"glatiuden"},"content":"Example:","lastModifiedDate":"2021-03-03"},{"lineNumber":247,"author":{"gitId":"glatiuden"},"content":"`delete_appointment 1`","lastModifiedDate":"2021-03-03"},{"lineNumber":248,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":249,"author":{"gitId":"glatiuden"},"content":"Example Output:","lastModifiedDate":"2021-03-03"},{"lineNumber":250,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":251,"author":{"gitId":"kingsleykuan"},"content":"1) jane.doe@example.com - 2021-4-21 2:00pm @ Bedok National Library","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"kingsleykuan"},"content":"2) peter.ng@example.com - 2021-4-24 2:00pm @ Bedok National Library","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"glatiuden"},"content":"```","lastModifiedDate":"2021-03-03"},{"lineNumber":254,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":255,"author":{"gitId":"kingsleykuan"},"content":"### Editing an appointment : `edit_appointment`","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"kingsleykuan"},"content":"Edits an appointment with a specific index. Only the attributes present are changed in the appointment.","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"kingsleykuan"},"content":"Format: `edit_appointment [e/EMAIL] [s/SUBJECT_NAME] [d/DATE] [fr/TIME_FROM] [l/LOCATION]`","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"kingsleykuan"},"content":"* The date format `yyyy-mm-dd` must be strictly followed. e.g. `2021-3-1`and `2021-03-01`.","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"kingsleykuan"},"content":"* The time format `hh:mm a` must be strictly followed. e.g. `9:01 am` and `10:30 pm`.","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"kingsleykuan"},"content":"Examples: `edit_appointment e/andrewng@example.com l/Clementi`","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"glatiuden"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-03"},{"lineNumber":267,"author":{"gitId":"Winniehyx"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":268,"author":{"gitId":"Winniehyx"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Tutor Tracker home folder.","lastModifiedDate":"2021-03-02"},{"lineNumber":269,"author":{"gitId":"glatiuden"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-03"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"glatiuden"},"content":"**Add a new tutor** | `add_tutor n/NAME p/PHONE_NUMBER e/EMAIL g/GENDER a/ADDRESS... \u003cs/SUBJECT_NAME r/RATE l/EDUCATION_LEVEL y/YEARS q/QUALIFICATIONS\u003e...` \u003cbr\u003e e.g., `add_tutor n/John Doe p/98765432 e/johnd@example.com g/Male a/John street, block 123, #01-01 s/English r/50 l/Sec 3 y/5 q/A-Level s/Mathematics r/60 l/Sec 4 y/6 q/A-Level`","lastModifiedDate":"2021-03-03"},{"lineNumber":274,"author":{"gitId":"glatiuden"},"content":"**List tutors** | `list_tutors`","lastModifiedDate":"2021-03-03"},{"lineNumber":275,"author":{"gitId":"kingsleykuan"},"content":"**Delete a tutor** | `delete_tutor INDEX`, \u003cbr\u003e e.g. `delete_tutor 1`","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"kingsleykuan"},"content":"**Edit a tutor** | `edit_tutor INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [g/GENDER] [a/ADDRESS] [\u003cs/SUBJECT_NAME r/RATE l/EDUCATION_LEVEL y/YEARS q/QUALIFICATIONS\u003e]...`, \u003cbr\u003e e.g. `edit_tutor 1 p/99824314 s/English r/50 l/Secondary 5 y/9 q/A-Level`","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"glatiuden"},"content":"**View a tutor details** | `view_tutor INDEX`, \u003cbr\u003e e.g. `view_tutor 1`","lastModifiedDate":"2021-03-03"},{"lineNumber":278,"author":{"gitId":"Winniehyx"},"content":"**Favourite a tutor** | `favourite INDEX`, \u003cbr\u003e e.g. `favourite 1`","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"Winniehyx"},"content":"**Unfavourite a tutor** | `unfavourite INDEX`, \u003cbr\u003e e.g. `Unfavourite 1`","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"Winniehyx"},"content":"**List favourites** | `list_favourites`, \u003cbr\u003e e.g. `list_favourites`","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"kingsleykuan"},"content":"**Add a new appointment** | `add_appointment e/EMAIL s/SUBJECT d/DATE fr/TIME_FROM l/LOCATION` \u003cbr\u003e e.g., `appointment e/chloe.lim@example.com s/English d/2021-4-20 fr/2:00pm l/Bedok`","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"glatiuden"},"content":"**List tuition appointments** | `list_appointments`","lastModifiedDate":"2021-02-25"},{"lineNumber":283,"author":{"gitId":"glatiuden"},"content":"**View a tuition appointment details** | `view_appointment` \u003cbr\u003e e.g. `view_appointment 2020-03-24`","lastModifiedDate":"2021-03-17"},{"lineNumber":284,"author":{"gitId":"glatiuden"},"content":"**Find tuition appointments** | `find_appointment` \u003cbr\u003e e.g. `find_appointment John`","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"kingsleykuan"},"content":"**Delete a tuition appointment** | `delete_appointment` \u003cbr\u003e e.g. `delete_appointment 1`","lastModifiedDate":"2021-03-03"},{"lineNumber":286,"author":{"gitId":"kingsleykuan"},"content":"**Edit a tuition appointment** | `edit_appointment [e/EMAIL] [s/SUBJECT_NAME] [d/DATE] [fr/TIME_FROM] [l/LOCATION]` \u003cbr\u003e e.g. `edit_appointment e/andrewng@example.com l/Clementi`","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"jared98lyj":1,"yutingzou":21,"kingsleykuan":82,"-":95,"glatiuden":57,"Winniehyx":30}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"user -[USER_COLOR]\u003e ui : \"delete_appointment 1\"","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete_appointment 1\")","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteAppointment(a)","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAppointment(addressBook)","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"glatiuden":4}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"participant \":TutorTrackerParser\" as TutorTrackerParser LOGIC_COLOR","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"[-\u003e LogicManager : execute(\"delete_appointment 1\")","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"LogicManager -\u003e TutorTrackerParser : parseCommand(\"delete_appointment 1\")","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"activate TutorTrackerParser","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"DeleteCommandParser --\u003e TutorTrackerParser","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"DeleteCommandParser --\u003e TutorTrackerParser : d","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"DeleteCommandParser -[hidden]-\u003e TutorTrackerParser","lastModifiedDate":"2021-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser --\u003e LogicManager : d","lastModifiedDate":"2021-02-25"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"deactivate TutorTrackerParser","lastModifiedDate":"2021-02-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"DeleteCommand -\u003e Model : deleteAppointment(1)","lastModifiedDate":"2021-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":57,"glatiuden":12}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"Class TutorTrackerParser","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"LogicManager --\u003e\"1\" TutorTrackerParser","lastModifiedDate":"2021-02-25"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"TutorTrackerParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"note right of XYZCommand: XYZCommand \u003d AddAppointmentCommand, \\nDeleteAppointmentCommand, etc","lastModifiedDate":"2021-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":58,"glatiuden":4}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"title: Tutor Tracker","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-3/tp/actions)","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-T14-3/tp)","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"**Tutor Tracker** is a desktop app designed to **help students search for tutors and manage tuition appointments**, optimised for use via a Command Line Interface (CLI) for a fast and streamlined experience.","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"* If you are interested in using **Tutor Tracker**, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"* If you are interested about developing **Tutor Tracker**, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"kingsleykuan":7,"-":13}},{"path":"docs/team/Winniehyx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Winnie Ho Yi Xuan\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"Hello, I am Winnie, a Year 2 Computer Science student. I like to spot fashion trends and operate an online shop that buy and sell clothing.","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"## Project: Tutor Tracker","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **Project management**:","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    * User Guide:","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    * Developer Guide:","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"* **Community**:","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"* **Tools**:","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"glatiuden":21,"Winniehyx":1}},{"path":"docs/team/glatiuden.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Koh Vinleon\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"## Project: Tutor Tracker","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"* **Project management**:","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    * User Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"        * Added documentation for the feature `list_appointments` [\\#2]()","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    * Developer Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"        * Added introduction: [\\#5]()","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"        * Did cosmetic tweaks to existing documentation of Design Section - `Architecture`, `Design`: [\\#5]()","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        * Added user cases of the `list_appointments` feature: [\\#5]()","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"* **Community**:","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"* **Tools**:","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"glatiuden":24}},{"path":"docs/team/jared98lyj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Jared Lim\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"## Project: Tutor Hunter","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"Tutor Hunter is a desktop tutor finder application that links a user with multiple","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"tutor in the database. The user interacts with it using a CLI, and it","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"has a GUI created with JavaFX.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **New Feature**: Added an Appointment class to represent the relation between tutor and tutee.","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"* **Code contributed**:","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"* **Project management**:","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"  * Managed releases `v1.1` (3 releases) on GitHub","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"  * User Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    * Added documentation (format and example usage) for the command view_tutor","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    * Added Non Functional Requirements","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"* **Community**:","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"* **Tools**:","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"jared98lyj":30,"glatiuden":3}},{"path":"docs/team/kingsleykuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"layout: page","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"title: Kingsley Kuan Jun Hao\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"Hello I’m Kingsley a Year 2 Computer Science student. I’m an aspiring researcher and content creator.","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"## Project: Tutor Tracker","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"kingsleykuan":12}},{"path":"docs/team/yutingzou.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"layout: page","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"title: Zou Yuting\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"Hi I\u0027m Yuting, a year 4 Business Analytics student. I like to cook and explore nice food in every city I visit :)","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"## Project: Tutor Tracker","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"* **Project management**:","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    * User Guide:","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    * Developer Guide:","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"* **Community**:","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"* **Tools**:","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"yutingzou":1,"glatiuden":21}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"glatiuden"},"content":"Simply add the following to [`seedu.address.ui.TutorCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":393,"glatiuden":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.storage.AppointmentBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"    private static final String APPOINTMENT_BOOK_NOT_FOUND \u003d \"Data file not found. \"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"            + \"Will be starting with a sample Appointment Book\";","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    private static final String ADDRESS_BOOK_NOT_FOUND \u003d \"Data file not found. Will \"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"            + \"be starting with a sample AddressBook\";","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"        AppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"                new JsonAppointmentBookStorage(userPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"        Optional\u003cReadOnlyAppointmentBook\u003e appointmentBookOptional;","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"        ReadOnlyAppointmentBook initialAppointments;","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":"                logger.info(ADDRESS_BOOK_NOT_FOUND);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"jared98lyj"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"jared98lyj"},"content":"            appointmentBookOptional \u003d storage.readAppointmentBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"jared98lyj"},"content":"            if (!appointmentBookOptional.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"                logger.info(APPOINTMENT_BOOK_NOT_FOUND);","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"jared98lyj"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"jared98lyj"},"content":"            initialAppointments \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"jared98lyj"},"content":"                    appointmentBookOptional.orElseGet(SampleDataUtil::getSampleAppointmentBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"jared98lyj"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"jared98lyj"},"content":"            initialAppointments \u003d new AppointmentBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"jared98lyj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"jared98lyj"},"content":"            initialAppointments \u003d new AppointmentBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"glatiuden"},"content":"        return new ModelManager(initialData, userPrefs, initialAppointments);","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jared98lyj":26,"-":180,"glatiuden":4}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_APPOINTMENT_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kingsleykuan":2,"-":12,"glatiuden":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"     * Returns an unmodifiable view of the filtered list of appointments","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":49,"glatiuden":10}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.TutorTrackerParser;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    private final TutorTrackerParser tutorTrackerParser;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        tutorTrackerParser \u003d new TutorTrackerParser();","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        Command command \u003d tutorTrackerParser.parseCommand(commandText);","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"            storage.saveAppointmentBook(model.getAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kingsleykuan":1,"-":77,"glatiuden":10}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"add_tutor\";","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":66,"glatiuden":1}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":71,"Winniehyx":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"delete_tutor\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"glatiuden":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION_LEVEL;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"edit_tutor\";","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the tutor identified \"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"            + \"by the index number used in the displayed tutor list. \"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"            + \"[\u003c\" + PREFIX_SUBJECT_NAME + \"SUBJECT_NAME\"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"            + \" \" + PREFIX_EDUCATION_LEVEL + \"EDUCATION_LEVEL\"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"            + \" \" + PREFIX_RATE + \"RATE\"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"            + \" \" + PREFIX_YEAR + \"YEARS EXPERIENCE\"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"            + \" \" + PREFIX_QUALIFICATION + \"QUALIFICATION\u003e]... \"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"            + PREFIX_SUBJECT_NAME + \"English \"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"            + PREFIX_EDUCATION_LEVEL + \"Sec 3 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"            + PREFIX_RATE + \"50 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"            + PREFIX_YEAR + \"5 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"            + PREFIX_QUALIFICATION + \"A-Level\u003e]...\";","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"kingsleykuan"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"kingsleykuan"},"content":"        SubjectList updatedSubjectList \u003d editPersonDescriptor.getSubjectList().orElse(personToEdit.getSubjectList());","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"kingsleykuan"},"content":"        return new Person(updatedName, updatedGender, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"kingsleykuan"},"content":"                updatedSubjectList, updatedTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"kingsleykuan"},"content":"        private Gender gender;","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"kingsleykuan"},"content":"        private SubjectList subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"kingsleykuan"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"kingsleykuan"},"content":"            setSubjectList(toCopy.subjectList);","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"kingsleykuan"},"content":"            return CollectionUtil.isAnyNonNull(name, gender, phone, email, address, tags, subjectList);","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"kingsleykuan"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"kingsleykuan"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"kingsleykuan"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"kingsleykuan"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"kingsleykuan"},"content":"        public void setSubjectList(SubjectList subjectList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"kingsleykuan"},"content":"            this.subjectList \u003d subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"kingsleykuan"},"content":"        public Optional\u003cSubjectList\u003e getSubjectList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"kingsleykuan"},"content":"            return Optional.ofNullable(subjectList);","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"kingsleykuan"},"content":"            // Convert empty lists to none optionals","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"kingsleykuan"},"content":"            // Required to pass unit tests involving EditPersonDescriptor","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"kingsleykuan"},"content":"            Optional\u003cSubjectList\u003e subjectList \u003d getSubjectList();","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"kingsleykuan"},"content":"            Optional\u003cSubjectList\u003e otherSubjectList \u003d e.getSubjectList();","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"kingsleykuan"},"content":"            if (subjectList.isPresent()","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"kingsleykuan"},"content":"                    \u0026\u0026 subjectList.get().asUnmodifiableObservableList().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"kingsleykuan"},"content":"                subjectList \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"kingsleykuan"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"kingsleykuan"},"content":"            if (otherSubjectList.isPresent()","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"kingsleykuan"},"content":"                    \u0026\u0026 otherSubjectList.get().asUnmodifiableObservableList().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"kingsleykuan"},"content":"                otherSubjectList \u003d Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"kingsleykuan"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"kingsleykuan"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2021-03-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"kingsleykuan"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-16"},{"lineNumber":280,"author":{"gitId":"kingsleykuan"},"content":"                    \u0026\u0026 subjectList.equals(otherSubjectList);","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kingsleykuan":63,"-":219,"glatiuden":1}},{"path":"src/main/java/seedu/address/logic/commands/FavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"public class FavouriteCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    public static final String COMMAND_WORD \u003d \"favourite\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" ID\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Favourite tutor: %s\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index %d\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    private static final String MESSAGE_AlREADY_FAVOURITE \u003d \"Tutor is already a favourite\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    public FavouriteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        List\u003cPerson\u003e tutorList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d tutorList.size()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_INDEX, targetIndex.getZeroBased()));","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        Person person \u003d tutorList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        if (person.isFavourite()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"            throw new CommandException(MESSAGE_AlREADY_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"            person.setFavourite(true);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person.getName()));","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Winniehyx":48}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"find_tutor\";","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":41,"glatiuden":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":" * Lists all tutors in the address book to the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"list_tutors\";","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tutors\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yutingzou":2,"-":21,"glatiuden":1}},{"path":"src/main/java/seedu/address/logic/commands/ListFavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.person.ViewTutorPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"public class ListFavouriteCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    public static final String COMMAND_WORD \u003d \"list_favourites\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all favourites\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"        List\u003cPerson\u003e favouritePersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"        List\u003cPerson\u003e personList \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"        for (Person p: personList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"            if (p.isFavourite()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"                favouritePersonList.add(p);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"        Predicate\u003cPerson\u003e personPredicate \u003d new ViewTutorPredicate(favouritePersonList);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"        model.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Winniehyx":39}},{"path":"src/main/java/seedu/address/logic/commands/UnfavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"public class UnfavouriteCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    public static final String COMMAND_WORD \u003d \"unfavourite\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" ID\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Unfavourite tutor: %s\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index %d\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"    private static final String MESSAGE_AlREADY_UNFAVOURITE \u003d \"Tutor is already not a favourite\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    public UnfavouriteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        List\u003cPerson\u003e tutorList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d tutorList.size()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_INDEX, targetIndex.getZeroBased()));","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"        Person person \u003d tutorList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        if (!person.isFavourite()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"            throw new CommandException(MESSAGE_AlREADY_UNFAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"            person.setFavourite(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person.getName()));","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Winniehyx":48}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.person.ViewTutorPredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":" * View a tutor by its index in tutor list.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    public static final String COMMAND_WORD \u003d \"view_tutor\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"            + \": Views the tutor identified by the index number used in the displayed tutor list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    public static final String MESSAGE_VIEW_TUTOR_SUCCESS \u003d \"View Tutor: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        List\u003cPerson\u003e updatedTutorList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d updatedTutorList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"        Person tutorToView \u003d updatedTutorList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"        model.updateFilteredPersonList(new ViewTutorPredicate(tutorToView));","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_TUTOR_SUCCESS, tutorToView.getName()));","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"yutingzou":52}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_FROM;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_TO;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":" * Adds an appointment to the appointment list.","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"add_appointment\";","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to the appointment list. \"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_SUBJECT_NAME + \"SUBJECT \"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_TIME_FROM + \"TIME FROM \"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_TIME_TO + \"TIME TO \"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_LOCATION + \"LOCATION\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_NAME + \"Chloe Lim \"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_SUBJECT_NAME + \"English \"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_DATE + \"2021-3-1 \"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_TIME_FROM + \"10:00am \"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_TIME_TO + \"12:00pm \"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_LOCATION + \"Bedok\";","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the list\";","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"     * Primary constructor to accept an appointment and add it to appointment list.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"     * @param appointment Appointment to add","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"     * Main execute method that creates adds a new appointment to the appointment list","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"     * @return CommandResult indicating success or failure of add operation","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"     * @throws CommandException","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"            model.addAppointment(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"jared98lyj":30,"glatiuden":44}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":" * Deletes an appointment identified using it\u0027s displayed index from the appointment list.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"delete_appointment\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_FAILURE \u003d \"Appointment does\"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"            + \" not exists in appointment list.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    private final Appointment toDelete;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"     * Create {@code DeleteAppointmentCommand} with target index to delete.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"     * @param targetIndex Target index of appointment to delete.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"        this.toDelete \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"     * Create {@code DeleteAppointmentCommand} with {@code Appointment} to delete.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"     * @param toDelete Appointment to delete.","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"    public DeleteAppointmentCommand(Appointment toDelete) {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"        this.toDelete \u003d toDelete;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"     * Deletes appointment if exists in appointment list (Offer two ways to delete by","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"     * index or by appointment)","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"     * @return Command Result indicating success or failure of delete operation","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"     * @throws CommandException","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"        // Delete by appointment","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"        if (targetIndex \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"            if (model.hasAppointment(toDelete)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"                model.removeAppointment(toDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"                return new CommandResult(MESSAGE_DELETE_APPOINTMENT_SUCCESS);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"                return new CommandResult(MESSAGE_DELETE_APPOINTMENT_FAILURE);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"            // Delete by index","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"            try {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"                model.removeAppointmentIndex(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"                return new CommandResult(MESSAGE_DELETE_APPOINTMENT_SUCCESS);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"                return new CommandResult(MESSAGE_DELETE_APPOINTMENT_FAILURE);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"                || (other instanceof DeleteAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteAppointmentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"jared98lyj":38,"kingsleykuan":8,"glatiuden":42}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_FROM;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_TO;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENT;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":" * Edits the details of an existing appointment in the appointment list.","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"edit_appointment\";","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"            + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"            + \"[\" + PREFIX_SUBJECT_NAME + \"SUBJECT] \"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"            + \"[\" + PREFIX_TIME_FROM + \"TIME FROM] \"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"            + \"[\" + PREFIX_TIME_TO + \"TIME TO] \"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION]\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_EMAIL + \"chloelim@example.com \"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"            + PREFIX_SUBJECT_NAME + \"Science\";","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"    private final Index index;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"     * @param index of the appointment in the filtered appointment list to edit","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    public EditAppointmentCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"            Index index,","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"            EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"        this.editAppointmentDescriptor \u003d editAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"        if (!appointmentToEdit.equals(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENT);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"    private static Appointment createEditedAppointment(","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":"            Appointment appointmentToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"            EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"jared98lyj"},"content":"        Name updatedName \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"jared98lyj"},"content":"                editAppointmentDescriptor.getName().orElse(appointmentToEdit.getName());","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"        SubjectName updatedSubjectName \u003d editAppointmentDescriptor.getSubjectName()","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"                .orElse(appointmentToEdit.getSubject());","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"jared98lyj"},"content":"        AppointmentDateTime updatedTimeFrom \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"jared98lyj"},"content":"                editAppointmentDescriptor.getTimeFrom().orElse(appointmentToEdit.getTimeFrom());","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"jared98lyj"},"content":"        AppointmentDateTime updatedTimeTo \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"jared98lyj"},"content":"                editAppointmentDescriptor.getTimeTo().orElse(appointmentToEdit.getTimeTo());","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"        Address updatedAddress \u003d editAppointmentDescriptor.getAddress().orElse(appointmentToEdit.getLocation());","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"jared98lyj"},"content":"        return new Appointment(updatedName, updatedSubjectName, updatedTimeFrom,","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"                updatedTimeTo, updatedAddress);","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"glatiuden"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"glatiuden"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"glatiuden"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"glatiuden"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"glatiuden"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"glatiuden"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"glatiuden"},"content":"        // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"glatiuden"},"content":"        EditAppointmentCommand e \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"kingsleykuan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"kingsleykuan"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"kingsleykuan"},"content":"     * corresponding field value of the appointment.","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"glatiuden"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"jared98lyj"},"content":"        private Name name;","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"kingsleykuan"},"content":"        private SubjectName subjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"jared98lyj"},"content":"        private AppointmentDateTime timeFrom;","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"jared98lyj"},"content":"        private AppointmentDateTime timeTo;","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"kingsleykuan"},"content":"        private Address address;","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"glatiuden"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"kingsleykuan"},"content":"        /**","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"kingsleykuan"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"kingsleykuan"},"content":"         */","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"kingsleykuan"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"jared98lyj"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-21"},{"lineNumber":149,"author":{"gitId":"kingsleykuan"},"content":"            setSubjectName(toCopy.subjectName);","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"jared98lyj"},"content":"            setTimeFrom(toCopy.timeFrom);","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"jared98lyj"},"content":"            setTimeTo(toCopy.timeTo);","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"kingsleykuan"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"kingsleykuan"},"content":"        /**","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"kingsleykuan"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"kingsleykuan"},"content":"         */","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"kingsleykuan"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"jared98lyj"},"content":"            return CollectionUtil.isAnyNonNull(name, subjectName, timeFrom, address);","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"jared98lyj"},"content":"        public void setName(Name email) {","lastModifiedDate":"2021-03-21"},{"lineNumber":163,"author":{"gitId":"jared98lyj"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"jared98lyj"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"jared98lyj"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"kingsleykuan"},"content":"        public void setSubjectName(SubjectName subjectName) {","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"kingsleykuan"},"content":"            this.subjectName \u003d subjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"kingsleykuan"},"content":"        public Optional\u003cSubjectName\u003e getSubjectName() {","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"kingsleykuan"},"content":"            return Optional.ofNullable(subjectName);","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"jared98lyj"},"content":"        public void setTimeFrom(AppointmentDateTime timeFrom) {","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"jared98lyj"},"content":"            this.timeFrom \u003d timeFrom;","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"jared98lyj"},"content":"        public Optional\u003cAppointmentDateTime\u003e getTimeFrom() {","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"jared98lyj"},"content":"            return Optional.ofNullable(this.timeFrom);","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"jared98lyj"},"content":"        public void setTimeTo(AppointmentDateTime timeTo) {","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"jared98lyj"},"content":"            this.timeTo \u003d timeTo;","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"jared98lyj"},"content":"        public Optional\u003cAppointmentDateTime\u003e getTimeTo() {","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"jared98lyj"},"content":"            return Optional.ofNullable(this.timeTo);","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"kingsleykuan"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"kingsleykuan"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"kingsleykuan"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"kingsleykuan"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"kingsleykuan"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"kingsleykuan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"kingsleykuan"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"kingsleykuan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"kingsleykuan"},"content":"                return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"kingsleykuan"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"kingsleykuan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"kingsleykuan"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"kingsleykuan"},"content":"                return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"kingsleykuan"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"kingsleykuan"},"content":"            // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"kingsleykuan"},"content":"            EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"jared98lyj"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-21"},{"lineNumber":218,"author":{"gitId":"kingsleykuan"},"content":"                    \u0026\u0026 getSubjectName().equals(e.getSubjectName())","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"jared98lyj"},"content":"                    \u0026\u0026 getTimeFrom().equals(e.getTimeFrom())","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"jared98lyj"},"content":"                    \u0026\u0026 getTimeTo().equals(e.getTimeTo())","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"kingsleykuan"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress());","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"jared98lyj":35,"kingsleykuan":113,"glatiuden":76}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.NamePredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":" * Finds and lists all appointments in list whose attributes contains any of the argument keywords.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" * TODO: Possibly find by other predicates (i.e., subject name, date, location) in the future.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"find_appointment\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all appointments whose tutor name contain any of\"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"            + \" the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"    private final NamePredicate predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    public FindAppointmentCommand(NamePredicate predicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"                String.format(Messages.MESSAGE_APPOINTMENT_LISTED_OVERVIEW, model.getFilteredAppointmentList().size()));","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"                || (other instanceof FindAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 predicate.equals(((FindAppointmentCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":45}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/ListAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":" * Lists all appointments in the appointment list to the user.","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"public class ListAppointmentCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"list_appointments\";","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":26}},{"path":"src/main/java/seedu/address/logic/commands/appointmentcommands/ViewAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.DateViewPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":" * View appointments by its date in appointment list.","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"public class ViewAppointmentCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    public static final String COMMAND_WORD \u003d \"view_appointment\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"            + \": Views the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"            + \"Parameters: DATE (must be in YYYY-MM-DD format)\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2021-03-17\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    public static final String MESSAGE_VIEW_APPOINTMENT_SUCCESS \u003d \"View Appointment: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    private final DateViewPredicate predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public ViewAppointmentCommand(DateViewPredicate predicate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_APPOINTMENT_SUCCESS, predicate.toString()));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"                || (other instanceof ViewAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 predicate.equals(((ViewAppointmentCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"glatiuden":43}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION_LEVEL;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"                        PREFIX_GENDER, PREFIX_SUBJECT_NAME, PREFIX_RATE, PREFIX_EDUCATION_LEVEL,","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"                        PREFIX_YEAR, PREFIX_QUALIFICATION);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER)","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"        SubjectList subjectList \u003d ParserUtil.parseSubjectList(","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"                argMultimap.getAllValues(PREFIX_SUBJECT_NAME),","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"                argMultimap.getAllValues(PREFIX_EDUCATION_LEVEL),","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"                argMultimap.getAllValues(PREFIX_RATE),","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"                argMultimap.getAllValues(PREFIX_YEAR),","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"                argMultimap.getAllValues(PREFIX_QUALIFICATION)","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"        );","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"        Person person \u003d new Person(name, gender, phone, email, address, subjectList, tagList);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kingsleykuan":7,"-":57,"Winniehyx":16}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"jared98lyj"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"jared98lyj"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"jared98lyj"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"jared98lyj"},"content":"                                        Prefix... prefixes) {","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"jared98lyj"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"jared98lyj":10,"-":148}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    public static final Prefix PREFIX_COST \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"     * Subject prefix definitions","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"     * Reference: s/English r/50 l/Sec 3 y/5 q/A-Level s/Mathematics r/60 l/Sec 4 y/6 q/A-Level","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_SUBJECT_NAME \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_RATE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_EDUCATION_LEVEL \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_YEAR \u003d new Prefix(\"y/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_QUALIFICATION \u003d new Prefix(\"q/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"     * Appointment prefix definitions","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"     * Reference: n/NAME s/SUBJECT d/DATE fr/TIME_FROM to/TIME_TO [l/LOCATION]","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_TIME_FROM \u003d new Prefix(\"fr/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_TIME_TO \u003d new Prefix(\"to/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jared98lyj":1,"kingsleykuan":1,"-":15,"glatiuden":18}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION_LEVEL;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GENDER, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_SUBJECT_NAME, PREFIX_EDUCATION_LEVEL,","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"                        PREFIX_RATE, PREFIX_YEAR, PREFIX_QUALIFICATION);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cString\u003e subjectNames \u003d argMultimap.getAllValues(PREFIX_SUBJECT_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cString\u003e subjectLevels \u003d argMultimap.getAllValues(PREFIX_EDUCATION_LEVEL);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cString\u003e subjectRates \u003d argMultimap.getAllValues(PREFIX_RATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cString\u003e subjectExperiences \u003d argMultimap.getAllValues(PREFIX_YEAR);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cString\u003e subjectQualifications \u003d argMultimap.getAllValues(PREFIX_QUALIFICATION);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"        // TODO: Merge with existing list instead of overwriting","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"        if (subjectNames.size() \u003e 0) {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"            SubjectList subjectList \u003d ParserUtil.parseSubjectList(","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"                    subjectNames,","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"                    subjectLevels,","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"                    subjectRates,","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"                    subjectExperiences,","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"                    subjectQualifications);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"            editPersonDescriptor.setSubjectList(subjectList);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kingsleykuan":32,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FavouriteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.FavouriteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"public class FavouriteCommandParser implements Parser\u003cFavouriteCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    public FavouriteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"            return new FavouriteCommand(index);","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FavouriteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Winniehyx":21}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectExperience;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectLevel;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectQualification;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectRate;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"    public static final String SUBJECT_LIST_INVALID_LENGTH \u003d \"Each Tutor Subject must have all fields defined.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"kingsleykuan"},"content":"     * Parses a {@code String subjectName} into a {@code SubjectName}.","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"kingsleykuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"kingsleykuan"},"content":"     * @throws ParseException if the given {@code subjectName} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"kingsleykuan"},"content":"    public static SubjectName parseSubjectName(String subjectName) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectName);","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"kingsleykuan"},"content":"        String trimmedSubjectName \u003d subjectName.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"kingsleykuan"},"content":"        if (!SubjectName.isValidName(trimmedSubjectName)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(SubjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"kingsleykuan"},"content":"        return new SubjectName(trimmedSubjectName);","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"kingsleykuan"},"content":"     * Parses a {@code String subjectLevel} into a {@code SubjectLevel}.","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"kingsleykuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"kingsleykuan"},"content":"     * @throws ParseException if the given {@code subjectLevel} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"kingsleykuan"},"content":"    public static SubjectLevel parseSubjectLevel(String subjectLevel) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectLevel);","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"kingsleykuan"},"content":"        String trimmedSubjectLevel \u003d subjectLevel.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"kingsleykuan"},"content":"        if (!SubjectLevel.isValidLevel(trimmedSubjectLevel)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(SubjectLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"kingsleykuan"},"content":"        return new SubjectLevel(trimmedSubjectLevel);","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"kingsleykuan"},"content":"     * Parses a {@code String subjectRate} into a {@code SubjectRate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"kingsleykuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"kingsleykuan"},"content":"     * @throws ParseException if the given {@code subjectRate} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"kingsleykuan"},"content":"    public static SubjectRate parseSubjectRate(String subjectRate) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectRate);","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"kingsleykuan"},"content":"        String trimmedSubjectRate \u003d subjectRate.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"kingsleykuan"},"content":"        if (!SubjectRate.isValidRate(trimmedSubjectRate)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(SubjectRate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"kingsleykuan"},"content":"        return new SubjectRate(trimmedSubjectRate);","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"kingsleykuan"},"content":"     * Parses a {@code String subjectExperience} into a {@code SubjectExperience}.","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"kingsleykuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"kingsleykuan"},"content":"     * @throws ParseException if the given {@code subjectExperience} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"kingsleykuan"},"content":"    public static SubjectExperience parseSubjectExperience(String subjectExperience) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectExperience);","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"kingsleykuan"},"content":"        String trimmedSubjectExperience \u003d subjectExperience.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"kingsleykuan"},"content":"        if (!SubjectExperience.isValidExperience(trimmedSubjectExperience)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(SubjectExperience.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"kingsleykuan"},"content":"        return new SubjectExperience(trimmedSubjectExperience);","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"kingsleykuan"},"content":"     * Parses a {@code String subjectQualification} into a {@code SubjectQualification}.","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"kingsleykuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"kingsleykuan"},"content":"     * @throws ParseException if the given {@code subjectQualification} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"kingsleykuan"},"content":"    public static SubjectQualification parseSubjectQualification(String subjectQualification) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectQualification);","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"kingsleykuan"},"content":"        String trimmedSubjectQualification \u003d subjectQualification.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":220,"author":{"gitId":"kingsleykuan"},"content":"        if (!SubjectQualification.isValidQualification(trimmedSubjectQualification)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":221,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(SubjectQualification.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"kingsleykuan"},"content":"        return new SubjectQualification(trimmedSubjectQualification);","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"kingsleykuan"},"content":"     * Parses {@code List} of {@code String subjectNames}, {@code String subjectLevels},","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"kingsleykuan"},"content":"     * {@code String subjectRates}, {@code String subjectExperiences},","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"kingsleykuan"},"content":"     * and {@code String subjectQualifications} into a {@code SubjectList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"kingsleykuan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"kingsleykuan"},"content":"     * @throws ParseException if the number of items in each {@code List} is not equal or","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"kingsleykuan"},"content":"     * if any items are invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"kingsleykuan"},"content":"    public static SubjectList parseSubjectList(","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"kingsleykuan"},"content":"            List\u003cString\u003e subjectNames,","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"kingsleykuan"},"content":"            List\u003cString\u003e subjectLevels,","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"kingsleykuan"},"content":"            List\u003cString\u003e subjectRates,","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"kingsleykuan"},"content":"            List\u003cString\u003e subjectExperiences,","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"kingsleykuan"},"content":"            List\u003cString\u003e subjectQualifications","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"kingsleykuan"},"content":"    ) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectNames);","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectLevels);","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectRates);","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectExperiences);","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(subjectQualifications);","lastModifiedDate":"2021-03-16"},{"lineNumber":247,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"kingsleykuan"},"content":"        int numSubjects \u003d subjectNames.size();","lastModifiedDate":"2021-03-16"},{"lineNumber":249,"author":{"gitId":"kingsleykuan"},"content":"        if (subjectLevels.size() !\u003d numSubjects","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"kingsleykuan"},"content":"                || subjectRates.size() !\u003d numSubjects","lastModifiedDate":"2021-03-16"},{"lineNumber":251,"author":{"gitId":"kingsleykuan"},"content":"                || subjectExperiences.size() !\u003d numSubjects","lastModifiedDate":"2021-03-16"},{"lineNumber":252,"author":{"gitId":"kingsleykuan"},"content":"                || subjectQualifications.size() !\u003d numSubjects) {","lastModifiedDate":"2021-03-16"},{"lineNumber":253,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(SUBJECT_LIST_INVALID_LENGTH);","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":255,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":256,"author":{"gitId":"kingsleykuan"},"content":"        SubjectList subjectList \u003d new SubjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":257,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":258,"author":{"gitId":"kingsleykuan"},"content":"        for (int i \u003d 0; i \u003c numSubjects; i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":259,"author":{"gitId":"kingsleykuan"},"content":"            SubjectName subjectName \u003d parseSubjectName(subjectNames.get(i));","lastModifiedDate":"2021-03-16"},{"lineNumber":260,"author":{"gitId":"kingsleykuan"},"content":"            SubjectLevel subjectLevel \u003d parseSubjectLevel(subjectLevels.get(i));","lastModifiedDate":"2021-03-16"},{"lineNumber":261,"author":{"gitId":"kingsleykuan"},"content":"            SubjectRate subjectRate \u003d parseSubjectRate(subjectRates.get(i));","lastModifiedDate":"2021-03-16"},{"lineNumber":262,"author":{"gitId":"kingsleykuan"},"content":"            SubjectExperience subjectExperience \u003d parseSubjectExperience(subjectExperiences.get(i));","lastModifiedDate":"2021-03-16"},{"lineNumber":263,"author":{"gitId":"kingsleykuan"},"content":"            SubjectQualification subjectQualification \u003d parseSubjectQualification(subjectQualifications.get(i));","lastModifiedDate":"2021-03-16"},{"lineNumber":264,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":265,"author":{"gitId":"kingsleykuan"},"content":"            TutorSubject tutorSubject \u003d new TutorSubject(","lastModifiedDate":"2021-03-16"},{"lineNumber":266,"author":{"gitId":"kingsleykuan"},"content":"                    subjectName,","lastModifiedDate":"2021-03-16"},{"lineNumber":267,"author":{"gitId":"kingsleykuan"},"content":"                    subjectLevel,","lastModifiedDate":"2021-03-16"},{"lineNumber":268,"author":{"gitId":"kingsleykuan"},"content":"                    subjectRate,","lastModifiedDate":"2021-03-16"},{"lineNumber":269,"author":{"gitId":"kingsleykuan"},"content":"                    subjectExperience,","lastModifiedDate":"2021-03-16"},{"lineNumber":270,"author":{"gitId":"kingsleykuan"},"content":"                    subjectQualification);","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":272,"author":{"gitId":"kingsleykuan"},"content":"            subjectList.add(tutorSubject);","lastModifiedDate":"2021-03-16"},{"lineNumber":273,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":274,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":275,"author":{"gitId":"kingsleykuan"},"content":"        return subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":276,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":277,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":278,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":279,"author":{"gitId":"glatiuden"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-03-16"},{"lineNumber":280,"author":{"gitId":"glatiuden"},"content":"     * trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":281,"author":{"gitId":"glatiuden"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-03-16"},{"lineNumber":282,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"glatiuden"},"content":"    public static AppointmentDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":284,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":285,"author":{"gitId":"kingsleykuan"},"content":"        String trimmedDateTime \u003d dateTime.trim().toUpperCase();","lastModifiedDate":"2021-03-16"},{"lineNumber":286,"author":{"gitId":"glatiuden"},"content":"        if (!AppointmentDateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":287,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(AppointmentDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":288,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":289,"author":{"gitId":"glatiuden"},"content":"        return new AppointmentDateTime(trimmedDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":290,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kingsleykuan":155,"-":124,"glatiuden":12}},{"path":"src/main/java/seedu/address/logic/parser/TutorTrackerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.FavouriteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.ListFavouriteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.UnfavouriteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.AddAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.DeleteAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.EditAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.FindAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.ListAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.ViewAppointmentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.appointmentparser.AddAppointmentCommandParser;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.appointmentparser.DeleteAppointmentCommandParser;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.appointmentparser.EditAppointmentCommandParser;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.appointmentparser.FindAppointmentCommandParser;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.appointmentparser.ViewAppointmentCommandParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"public class TutorTrackerParser {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"        case FavouriteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"            return new FavouriteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"        case UnfavouriteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"            return new UnfavouriteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":"        case ListFavouriteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"            return new ListFavouriteCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"        /* Appointment Commands */","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"glatiuden"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"        case FindAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"            return new FindAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"        case ViewAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"glatiuden"},"content":"            return new ViewAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"glatiuden"},"content":"        case ListAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"            return new ListAppointmentCommand();","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yutingzou":3,"-":71,"Winniehyx":13,"glatiuden":31}},{"path":"src/main/java/seedu/address/logic/parser/UnfavouriteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.commands.UnfavouriteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"public class UnfavouriteCommandParser implements Parser\u003cUnfavouriteCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    public UnfavouriteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"            return new UnfavouriteCommand(index);","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnfavouriteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Winniehyx":20}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"yutingzou":28}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_FROM;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_TO;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.AddAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_SUBJECT_NAME,","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"                        PREFIX_DATE, PREFIX_TIME_FROM,","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"                        PREFIX_TIME_TO, PREFIX_LOCATION);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"        if (!ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_NAME,","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"                PREFIX_SUBJECT_NAME,","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"                PREFIX_DATE,","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"                PREFIX_TIME_FROM, PREFIX_TIME_TO, PREFIX_LOCATION)","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"        SubjectName subjectName \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"                ParserUtil.parseSubjectName(argMultimap.getValue(PREFIX_SUBJECT_NAME).get());","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"        String dateString \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"        String timeFromString \u003d argMultimap.getValue(PREFIX_TIME_FROM).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"        String timeToString \u003d argMultimap.getValue(PREFIX_TIME_TO).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"        AppointmentDateTime timeFrom \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"                ParserUtil.parseDateTime(dateString + \" \" + timeFromString);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"        AppointmentDateTime timeTo \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"                ParserUtil.parseDateTime(dateString + \" \" + timeToString);","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"        Address location \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"        Appointment appointment \u003d new Appointment(name, subjectName, timeFrom, timeTo,","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"                location);","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"jared98lyj":19,"kingsleykuan":14,"glatiuden":35}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.DeleteAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":32}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_FROM;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_TO;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.EditAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.logic.commands.appointmentcommands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAppointmentCommand","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"     * and returns an EditAppointmentCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_SUBJECT_NAME,","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"                        PREFIX_DATE, PREFIX_TIME_FROM, PREFIX_TIME_TO, PREFIX_LOCATION);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        Index index;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"            editAppointmentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        if (argMultimap.getValue(PREFIX_SUBJECT_NAME).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"            editAppointmentDescriptor.setSubjectName(ParserUtil.parseSubjectName(","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                    argMultimap.getValue(PREFIX_SUBJECT_NAME).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"        if (ArgumentTokenizer.arePrefixesPresent(argMultimap, PREFIX_DATE,","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"                PREFIX_TIME_FROM, PREFIX_TIME_TO) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"        // TODO: Implement better handling of date and times (and combinations)","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_TIME_FROM).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"            String dateString \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"            String timeFromString \u003d argMultimap.getValue(PREFIX_TIME_FROM).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"            String dateTimeString \u003d dateString + \" \" + timeFromString;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"            editAppointmentDescriptor.setTimeFrom(ParserUtil.parseDateTime(dateTimeString));","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"        if (argMultimap.getValue(PREFIX_TIME_TO).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"            String dateString \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"            String timeToString \u003d argMultimap.getValue(PREFIX_TIME_TO).get();","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"            String dateTimeString \u003d dateString + \" \" + timeToString;","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"            editAppointmentDescriptor.setTimeTo(ParserUtil.parseDateTime(dateTimeString));","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"            editAppointmentDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"jared98lyj":22,"kingsleykuan":22,"glatiuden":42}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/FindAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.FindAppointmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.NamePredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"public class FindAppointmentCommandParser implements Parser\u003cFindAppointmentCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppointmentCommand","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"     * and returns a FindAppointmentCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    public FindAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        return new FindAppointmentCommand(new NamePredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":33}},{"path":"src/main/java/seedu/address/logic/parser/appointmentparser/ViewAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.ViewAppointmentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.DateViewPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":" * Parses input arguments and creates a new {@code ViewAppointmentCommand} object","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"public class ViewAppointmentCommandParser implements Parser\u003cViewAppointmentCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code ViewAppointmentCommand}","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"     * and returns a {@code ViewAppointmentCommand} object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    public ViewAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"            AppointmentDateTime appointmentDateTime \u003d ParserUtil.parseDateTime(args + \" 12:00AM\");","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"            return new ViewAppointmentCommand(new DateViewPredicate(appointmentDateTime));","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"glatiuden":33}},{"path":"src/main/java/seedu/address/model/AppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentList;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":" * Wraps all data at the appointment-book level","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"public class AppointmentBook implements ReadOnlyAppointmentBook {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private final AppointmentList appointments;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    /*","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        appointments \u003d new AppointmentList();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBook() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"     * Creates an AppointmentBook using the Appointments in the {@code toBeCopied}","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBook(ReadOnlyAppointmentBook toBeCopied) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"        this();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"     * Resets the existing data of this {@code AppointmentBook} with {@code newData}.","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"    public void resetData(ReadOnlyAppointmentBook newData) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"    //// person-level operations","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"     * Returns true if a person with the same identity as {@code appointment} exists in the appointment book.","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"     * Adds a person to the appointment book.","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"     * The person must not already exist in the appointment book.","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"    public void addAppointment(Appointment a) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"        appointments.add(a);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"     * Replaces the given person {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"     * The person identity of {@code editedAppointment} must not be the same as another existing person","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"     * in the appointment book.","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"     * Removes {@code key} from this {@code AppointmentBook}.","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"     * {@code key} must exist in the appointment book.","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"        appointments.remove(key);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"     * Removes {@code key} from this {@code AppointmentBook}.","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"     * {@code key} must exist in the appointment book.","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"    public void removeAppointment(int key) {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"glatiuden"},"content":"        appointments.remove(key);","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"    //// util methods","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"glatiuden"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"glatiuden"},"content":"        return appointments.asUnmodifiableObservableList().size() + \" appointments\";","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"glatiuden"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"glatiuden"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"glatiuden"},"content":"                || (other instanceof AppointmentBook // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 appointments.equals(((AppointmentBook) other).appointments));","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"glatiuden"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"glatiuden"},"content":"        return appointments.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"glatiuden":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENT \u003d unused -\u003e true;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"     * Returns the Appointment book","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"    ReadOnlyAppointmentBook getAppointmentBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"    void setAppointmentBook(ReadOnlyAppointmentBook readOnlyAppointmentBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"     * @return File path of Appointment Book data file","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"     * Sets appointment book file path.","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"     * @param appointmentBookFilePath To be supplied by user","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"    void setAppointmentBookFilePath(Path appointmentBookFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"     * Returns an unmodifiable view of the filtered appointment list","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"glatiuden"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"glatiuden"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"glatiuden"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"jared98lyj"},"content":"     * Checks if Appointment exists in appointment list.","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"jared98lyj"},"content":"     * @param appointment Appointment to check","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"jared98lyj"},"content":"     * @return True if appointment is already in appointment list","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"jared98lyj"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"jared98lyj"},"content":"     * @param appointment Appointment to add (appointment must not already exist)","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"jared98lyj"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"jared98lyj"},"content":"     * Removes appointment from appointment list.","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"jared98lyj"},"content":"     * @param appointment Appointment to remove must be present","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"jared98lyj"},"content":"    void removeAppointment(Appointment appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"kingsleykuan"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"kingsleykuan"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"kingsleykuan"},"content":"     * The {@code editedAppointment} must not be the same as another existing appointment in the appointment book.","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"kingsleykuan"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"jared98lyj"},"content":"     * Method that removes appointment based on index","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"jared98lyj"},"content":"     * @param indexToRemove","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"jared98lyj"},"content":"    void removeAppointmentIndex(int indexToRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"glatiuden"},"content":"     * Checks if {@code AppointmentDateTime} exists in the appointment list.","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"glatiuden"},"content":"     * @param appointmentDateTime Appointment DateTime to be checked","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"glatiuden"},"content":"     * @return true if Appointment DateTime exists in the appointment list","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"glatiuden"},"content":"    boolean hasAppointmentDateTime(AppointmentDateTime appointmentDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jared98lyj":40,"kingsleykuan":7,"-":84,"glatiuden":39}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.DateViewPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    private final AppointmentBook appointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"                        ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"        this.appointmentBook \u003d new AppointmentBook(appointmentBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        filteredAppointment \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList());","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"        this(new AddressBook(), new UserPrefs(), new AppointmentBook());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"        return userPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"jared98lyj"},"content":"        return userPrefs.getAppointmentBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"jared98lyj"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":"        userPrefs.setAppointmentBookFilePath(appointmentBookFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"jared98lyj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"jared98lyj"},"content":"    public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"jared98lyj"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"jared98lyj"},"content":"    public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"jared98lyj"},"content":"        this.appointmentBook.resetData(appointmentBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"glatiuden"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"glatiuden"},"content":"     * {@code versionedAppointmentBook}","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"glatiuden"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"glatiuden"},"content":"        return filteredAppointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"glatiuden"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"glatiuden"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"kingsleykuan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"glatiuden"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"glatiuden"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"glatiuden"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"glatiuden"},"content":"        filteredAppointment.setPredicate(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"glatiuden"},"content":"     * Checks if Appointment exists in appointment list.","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"glatiuden"},"content":"     * @param appointment Appointment to check","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"glatiuden"},"content":"     * @return True if appointment is already in appointment list","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"glatiuden"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"glatiuden"},"content":"        return appointmentBook.hasAppointment(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"glatiuden"},"content":"     * @param appointment Appointment to add (appointment must not already exist)","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"glatiuden"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"glatiuden"},"content":"        appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"glatiuden"},"content":"     * Removes appointment from appointment list.","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"glatiuden"},"content":"     * @param appointment Appointment to remove must be present","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"glatiuden"},"content":"    public void removeAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"glatiuden"},"content":"        appointmentBook.removeAppointment(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"kingsleykuan"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"kingsleykuan"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"kingsleykuan"},"content":"        appointmentBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"glatiuden"},"content":"     * Method that removes appointment based on index","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"glatiuden"},"content":"     * @param indexToRemove","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"glatiuden"},"content":"    public void removeAppointmentIndex(int indexToRemove) {","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"glatiuden"},"content":"        appointmentBook.removeAppointment(indexToRemove);","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"glatiuden"},"content":"     * Checks if {@code AppointmentDateTime} exists in the appointment list.","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"glatiuden"},"content":"     * @param appointmentDateTime Appointment DateTime to be checked","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"glatiuden"},"content":"     * @return true if Appointment DateTime exists in the appointment list","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"glatiuden"},"content":"    public boolean hasAppointmentDateTime(AppointmentDateTime appointmentDateTime) {","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"glatiuden"},"content":"        return !filteredAppointment.filtered(new DateViewPredicate(appointmentDateTime)).isEmpty();","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jared98lyj":20,"kingsleykuan":10,"-":148,"glatiuden":88}},{"path":"src/main/java/seedu/address/model/ReadOnlyAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":" * Unmodifiable view of an appointment book","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"public interface ReadOnlyAppointmentBook {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"     * Returns an unmodifiable view of the appointment list.","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"glatiuden":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jared98lyj":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    private Path appointmentBookFilePath \u003d Paths.get(\"data\", \"appointmentBook.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"        return appointmentBookFilePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"        this.appointmentBookFilePath \u003d appointmentBookFilePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jared98lyj":9,"kingsleykuan":1,"-":87}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":" * Appointment class to store appointment objects to represent tutee and tutor relations","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"public class Appointment {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"    private final Name name;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    private final SubjectName subject;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    private final AppointmentDateTime timeFrom;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    private final AppointmentDateTime timeTo;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"    private final Address location;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"     * Primary constructor for appointment class.","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"     * @param name    Email of tutor.","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"     * @param subject  Subject tutor is teaching to tutee.","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"     * @param timeFrom  Start Time of appointment","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"     * @param timeTo End Time of appointment","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"     * @param location Location of teaching venue","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    public Appointment(Name name, SubjectName subject, AppointmentDateTime timeFrom,","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"                       AppointmentDateTime timeTo, Address location) {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"        this.timeFrom \u003d timeFrom;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"        this.timeTo \u003d timeTo;","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"        return name;","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"    public SubjectName getSubject() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"        return subject;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"    public AppointmentDateTime getTimeFrom() {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"        return timeFrom;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"    public AppointmentDateTime getTimeTo() {","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"        return timeTo;","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"    public Address getLocation() {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"        return location;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-02-26"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"        return String.format(\"Appointment with Tutor (%s) from %s to %s\",","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"                this.name.fullName, timeFrom.toString(), timeTo.toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"     * Returns true if both appointment have the same datetime.","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 this.timeFrom.equals(otherAppointment.timeFrom)","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 this.timeTo.equals(otherAppointment.timeTo);","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":"     * Checks whether given appointment is valid.","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"jared98lyj"},"content":"     * @param appointment Appointment to check","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"jared98lyj"},"content":"     * @return Boolean representing whether given appointment is valid","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":"    public static boolean isValidAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"jared98lyj"},"content":"        return Name.isValidName(appointment.getName().fullName)","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 SubjectName.isValidName(appointment.getSubject().name)","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 AppointmentDateTime.isValidDateTime(appointment.getTimeFrom().toDateString())","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 AppointmentDateTime.isValidDateTime(appointment.getTimeTo().toDateString())","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 Address.isValidAddress(appointment.getLocation().toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-02-26"},{"lineNumber":94,"author":{"gitId":"jared98lyj"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"jared98lyj"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":"            return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"jared98lyj"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"jared98lyj"},"content":"            return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"jared98lyj"},"content":"        Appointment that \u003d (Appointment) o;","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"jared98lyj"},"content":"        return Objects.equals(name, that.name) \u0026\u0026 Objects.equals(subject, that.subject)","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 Objects.equals(timeFrom, that.timeFrom)","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 Objects.equals(timeTo, that.timeTo)","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"jared98lyj"},"content":"                \u0026\u0026 Objects.equals(location, that.location);","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-02-26"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-26"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"        return Objects.hash(name, subject, timeFrom, timeTo, location);","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"jared98lyj":65,"yutingzou":22,"glatiuden":25}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":" * Represents an Appointment\u0027s date and time in the AppointmentList.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"public class AppointmentDateTime {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"AppointmentDateTime should be in \"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"            + \"YYYY-MM-DD HH:MM AM/PM format\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    /*","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"     * DateTime make use of formatter to validate instead of Regex for DateTime accuracy.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"    public static final DateTimeFormatter VALIDATION_PATTERN \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"            .appendPattern(\"[y-M-d [h:m[ ]a]]\")","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"            .appendPattern(\"[d-M-y [h:m[ ]a]]\")","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"            .appendPattern(\"[y/M/d [h:m[ ]a]]\")","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"            .appendPattern(\"[d/M/y [h:m[ ]a]]\")","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"            .parseDefaulting(ChronoField.CLOCK_HOUR_OF_AMPM, 12)","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"            .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"     * Constructs an {@code AppointmentDateTime}.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"     * @param dateTime A valid datetime.","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"    public AppointmentDateTime(String dateTime) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        dateTime \u003d dateTime.toUpperCase();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"        value \u003d LocalDateTime.parse(dateTime, VALIDATION_PATTERN);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"     * Returns true if a given string is a valid DateTime.","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"            LocalDateTime.parse(test, VALIDATION_PATTERN);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"     * Performs a quick {@code LocalDateTime} equality check","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"    public boolean equalsDateCheck(LocalDateTime other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d value // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"                || (other !\u003d null // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 value.toLocalDate().isEqual((other.toLocalDate()))); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"        return value.format(formatter);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"     * Returns a date only string for display purpose.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"    public String toDateString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"        return value.format(formatter);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"     * Returns a date time string for storage purpose.","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm a\");","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"        return value.format(formatter);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"                || (other instanceof seedu.address.model.appointment.AppointmentDateTime // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 value.isEqual(((seedu.address.model.appointment.AppointmentDateTime) other).value)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"yutingzou":2,"kingsleykuan":18,"glatiuden":82}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"public class AppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"     * The appointment identity of {@code editedAppointment} must not be","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"     * the same as another existing appointment in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"        if (!target.equals(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"     * Removes the equivalent appointment from the list. (By appointment)","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"     * Removes the equivalent appointment from the list (must be present).","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"     * @param index Index of appointment to remove (0-based)","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"        this.internalList.remove(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"    public void setAppointments(AppointmentList replacement) {","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jared98lyj"},"content":"     * Sorts by start time of each appointment.","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jared98lyj"},"content":"        Collections.sort(internalList, Comparator.comparing(a -\u003e a.getTimeFrom().value));","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"                || (other instanceof seedu.address.model.appointment.AppointmentList // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 internalList.equals(((seedu.address.model.appointment.AppointmentList) other).internalList));","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"yutingzou"},"content":"     * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"yutingzou"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"yutingzou"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"yutingzou"},"content":"                if (appointments.get(i).equals(appointments.get(j))) {","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"yutingzou"},"content":"                    return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"yutingzou"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"yutingzou"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"yutingzou"},"content":"        return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jared98lyj":10,"yutingzou":126,"glatiuden":3}},{"path":"src/main/java/seedu/address/model/appointment/DateViewPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":" * Tests that an {@code Appointment}\u0027s {@code dateTime} matches the date given.","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":" * This primarily to support the Calendar\u0027s Filtering.","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"public class DateViewPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"    private final AppointmentDateTime date;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"    public DateViewPredicate(AppointmentDateTime date) {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"        return appointment.getTimeFrom().equalsDateCheck(date.value)","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"                || appointment.getTimeTo().equalsDateCheck(date.value);","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"                || (other instanceof DateViewPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 date.equals(((DateViewPredicate) other).date)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        return date.toDateString();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"glatiuden":33}},{"path":"src/main/java/seedu/address/model/appointment/NamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":" * Since the {@code Name} is tagged to the Person object, the Person object needs to be retrieve first.","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":" * Then, {@code Email} will be extracted out to perform the Predicate Search.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"public class NamePredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    public NamePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(appointment.getName().fullName, keyword));","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"                || (other instanceof NamePredicate // instanceof handles nulls","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 keywords.equals(((NamePredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jared98lyj":2,"glatiuden":30}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class AppointmentNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/grade/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.grade;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":" * Represents a Grade in Tutor Tracker.","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"public class Grade implements Filterable {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"            \"Each Grade must contain subject name, exam name and grade.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    /*","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"     * The first character of the gradedItem must not be a whitespace,","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    /*","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"     * The first character of the grade must not be a whitespace,","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"     * The grade must be","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    public static final String VALIDATION_GRADE \u003d \"[\\\\p{Alnum}][-+]?\";","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"    private final SubjectName subject;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    private final String gradedItem;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"    private final String grade;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"    public Grade(SubjectName subject, String gradedItem, String grade) {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(subject, gradedItem, grade);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"        this.gradedItem \u003d gradedItem;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"    public SubjectName getSubject() {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"        assert(this.subject !\u003d null);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"        return this.subject;","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"    public String getGradedItem() {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        assert(this.gradedItem !\u003d null);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        return this.gradedItem;","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"    public String getGrade() {","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"        assert(this.grade !\u003d null);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"        return this.grade;","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"    public static boolean isValidGradedItem(String test) {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"    public static boolean isValidGrade(String test) {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        return test.matches(VALIDATION_GRADE);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"    public String toString() {","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"        return subject.name + \" - \" + gradedItem + \" - \" + grade;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"        Grade that \u003d (Grade) o;","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        return Objects.equals(subject, that.subject)","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 Objects.equals(gradedItem, that.gradedItem)","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 Objects.equals(grade, that.grade);","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"        return Objects.hash(subject, gradedItem, grade);","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"        return subject.filter(s);","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yutingzou":97}},{"path":"src/main/java/seedu/address/model/grade/GradeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.grade;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.grade.exceptions.DuplicateGradeException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.grade.exceptions.GradeNotFoundException;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.subject.exceptions.SubjectNotFoundException;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"public class GradeList implements Iterable\u003cGrade\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cGrade\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cGrade\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"     * Returns true if the list contains an equivalent grade as the given argument.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    public boolean contains(Grade toCheck) {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"     * Adds a grade to the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"     * The grade must not already exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    public void add(Grade toAdd) {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateGradeException();","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"     * Replaces the grade {@code target} in the list with {@code editedGrade}.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"     * The grade identity of {@code editedGrade} must not be the same as another existing grade in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"    public void setGrade(Grade target, Grade editedGrade) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(target, editedGrade);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"            throw new GradeNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"        if (!target.equals(editedGrade) \u0026\u0026 contains(editedGrade)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateGradeException();","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"        internalList.set(index, editedGrade);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"     * Removes the equivalent grade from the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"     * The grade must exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"    public void remove(Grade toRemove) {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"            throw new SubjectNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"    public void setGrades(seedu.address.model.grade.GradeList replacement) {","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"     * Replaces the contents of this list with {@code grades}.","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"     * {@code grades} must not contain duplicate grades.","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"    public void setGrades(List\u003cGrade\u003e grades) {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(grades);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        if (!gradesAreUnique(grades)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateGradeException();","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(grades);","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"    public ObservableList\u003cGrade\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"    public Iterator\u003cGrade\u003e iterator() {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"                || (other instanceof seedu.address.model.grade.Grade // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 internalList.equals(((seedu.address.model.grade.GradeList) other).internalList));","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":"     * Returns true if {@code subjects} contains only unique grades.","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"    private boolean gradesAreUnique(List\u003cGrade\u003e grades) {","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 0; i \u003c grades.size() - 1; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"            for (int j \u003d i + 1; j \u003c grades.size(); j++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"                if (grades.get(i).equals(grades.get(j))) {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"                    return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"        return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yutingzou":126}},{"path":"src/main/java/seedu/address/model/grade/exceptions/DuplicateGradeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.grade.exceptions;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":" * Signals that the operation will result in duplicate Grades (Grades are considered duplicates if they have the same","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":" * identity).","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"public class DuplicateGradeException extends RuntimeException {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"    public DuplicateGradeException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"        super(\"Operation would result in duplicate grades\");","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yutingzou":11}},{"path":"src/main/java/seedu/address/model/grade/exceptions/GradeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.grade.exceptions;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":" * Signals that the operation is unable to find the specified Grade.","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class GradeNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Address implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        return value.contains(s);","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":55,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Email implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"        return value.contains(s);","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":65,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Gender implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"            \"Gender should only contain alphanumeric characters and spaces, should be female or male,\"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"                    + \"and it should not be blank\";","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    /*","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    public final String personGender;","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    public Gender(String gender) {","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        personGender \u003d gender;","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"    public String toString() {","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        return personGender;","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 personGender.equals(((Gender) other).personGender)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"        return personGender.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"        return personGender.contains(s);","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"kingsleykuan":2,"Winniehyx":63}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Name implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"        return fullName.contains(s);","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Person in Tutor Tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    private final Gender gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectList subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"    private boolean isFavourite;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    public Person(Name name, Gender gender, Phone phone, Email email, Address address,","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"                  SubjectList subjectList, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        requireAllNonNull(name, gender, phone, email, address, subjectList, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"        this.subjectList \u003d subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"        this.isFavourite \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"     * Additional constructor to take in whether the Tutor is a favourite","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"    public Person(Name name, Gender gender, Phone phone, Email email, Address address,","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"                  SubjectList subjectList, Set\u003cTag\u003e tags, boolean isFavourite) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"        requireAllNonNull(name, gender, phone, email, address, subjectList, tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"        this.subjectList \u003d subjectList;","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"        this.isFavourite \u003d isFavourite;","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"        return gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectList getSubjectList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"        return subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"    public boolean isFavourite() {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"        return isFavourite;","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"Winniehyx"},"content":"    public void setFavourite(boolean isFavourite) {","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"        this.isFavourite \u003d isFavourite;","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":135,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender())","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherPerson.getSubjectList().equals(getSubjectList())","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"kingsleykuan"},"content":"        return Objects.hash(name, gender, phone, email, address, subjectList, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"kingsleykuan"},"content":"                .append(getGender())","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"kingsleykuan"},"content":"        List\u003cTutorSubject\u003e subjectList \u003d getSubjectList().asUnmodifiableObservableList();","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"kingsleykuan"},"content":"        if (!subjectList.isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"kingsleykuan"},"content":"            builder.append(\"; Subjects: \");","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"kingsleykuan"},"content":"            subjectList.forEach(builder::append);","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kingsleykuan":30,"-":118,"Winniehyx":27}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"public class Phone implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        return value.contains(s);","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/person/ViewTutorPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"public class ViewTutorPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    private final List\u003cPerson\u003e targetTutors;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"    public ViewTutorPredicate(Person targetTutor) {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"        this.targetTutors \u003d new ArrayList\u003c\u003e(List.of(targetTutor));","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    public ViewTutorPredicate(List\u003cPerson\u003e targetTutors) {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"        this.targetTutors \u003d targetTutors;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    public boolean test(Person tutor) {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"        for (Person p: targetTutors) {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Winniehyx"},"content":"            if (p.equals(tutor)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"                return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"        return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"                || (other instanceof seedu.address.model.person.ViewTutorPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"                \u0026\u0026 targetTutors.equals(((ViewTutorPredicate) other).targetTutors)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"yutingzou":19,"Winniehyx":16}},{"path":"src/main/java/seedu/address/model/subject/SubjectExperience.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Tutor\u0027s years of experience in a subject in Tutor Tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidExperience(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectExperience implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Subject experience should only contain numbers, and it should be at least 1 digit long\";","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    public final Integer experience;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectExperience}.","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"     * @param experience A valid subject experience.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectExperience(String experience) {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(experience);","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidExperience(experience), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"        this.experience \u003d Integer.parseInt(experience);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject experience.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidExperience(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"        return experience.toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectExperience // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 experience.equals(((SubjectExperience) other).experience)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"        return experience.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"        return experience.equals(Integer.parseInt(s));","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kingsleykuan":57}},{"path":"src/main/java/seedu/address/model/subject/SubjectLevel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Subject\u0027s education level in Tutor Tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLevel(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectLevel implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Subject level should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    /*","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"     * The first character of the subject level must not be a whitespace,","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    public final String level;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectLevel}.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     * @param level A valid subject level.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectLevel(String level) {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(level);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidLevel(level), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        this.level \u003d level;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject level.","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidLevel(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        return level;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectLevel // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 level.equals(((SubjectLevel) other).level)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"        return level.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"        return level.contains(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kingsleykuan":63}},{"path":"src/main/java/seedu/address/model/subject/SubjectList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.subject;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"import java.util.List;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"yutingzou"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.subject.exceptions.DuplicateSubjectException;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.subject.exceptions.SubjectNotFoundException;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"public class SubjectList implements Iterable\u003cTutorSubject\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cTutorSubject\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    private final ObservableList\u003cTutorSubject\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"     * Returns true if the list contains an equivalent subject as the given argument.","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"    public boolean contains(TutorSubject toCheck) {","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"yutingzou"},"content":"     * Adds a subject to the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"yutingzou"},"content":"     * The subject must not already exist in the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"yutingzou"},"content":"    public void add(TutorSubject toAdd) {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateSubjectException();","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"     * Replaces the subject {@code target} in the list with {@code editedSubject}.","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"     * The subject identity of {@code editedSubject} must not be the same as another existing subject in the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"    public void setSubject(TutorSubject target, TutorSubject editedSubject) {","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(target, editedSubject);","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"            throw new SubjectNotFoundException();","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"        if (!target.equals(editedSubject) \u0026\u0026 contains(editedSubject)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateSubjectException();","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"        internalList.set(index, editedSubject);","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"     * Removes the equivalent subject from the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"     * The subject must exist in the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"    public void remove(TutorSubject toRemove) {","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"            throw new SubjectNotFoundException();","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"    public void setSubjects(seedu.address.model.subject.SubjectList replacement) {","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"     * Replaces the contents of this list with {@code subjects}.","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"     * {@code subjects} must not contain duplicate subjects.","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"    public void setSubjects(List\u003cTutorSubject\u003e subjects) {","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"        requireAllNonNull(subjects);","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"        if (!subjectsAreUnique(subjects)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"            throw new DuplicateSubjectException();","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"        internalList.setAll(subjects);","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"    public ObservableList\u003cTutorSubject\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"    public Iterator\u003cTutorSubject\u003e iterator() {","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"                || (other instanceof SubjectList // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 internalList.equals(((SubjectList) other).internalList));","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"yutingzou"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"yutingzou"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"yutingzou"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"yutingzou"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"yutingzou"},"content":"     * Returns true if {@code subjects} contains only unique subjects.","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"yutingzou"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"yutingzou"},"content":"    private boolean subjectsAreUnique(List\u003cTutorSubject\u003e subjects) {","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"yutingzou"},"content":"        for (int i \u003d 0; i \u003c subjects.size() - 1; i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"yutingzou"},"content":"            for (int j \u003d i + 1; j \u003c subjects.size(); j++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"yutingzou"},"content":"                if (subjects.get(i).equals(subjects.get(j))) {","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"yutingzou"},"content":"                    return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"yutingzou"},"content":"                }","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"yutingzou"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"yutingzou"},"content":"        return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":126,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"yutingzou":126}},{"path":"src/main/java/seedu/address/model/subject/SubjectName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Subject\u0027s name in Tutor Tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectName implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    /*","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"     * The first character of the subject name must not be a whitespace,","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    public final String name;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectName}.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     * @param name A valid subject name.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectName(String name) {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        return name;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectName // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 name.equals(((SubjectName) other).name)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"        return name.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"        return name.contains(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kingsleykuan":63}},{"path":"src/main/java/seedu/address/model/subject/SubjectQualification.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Tutor\u0027s qualifications in a subject in Tutor Tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQualification(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectQualification implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Qualifications should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    /*","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"     * The first character of the subject qualification must not be a whitespace,","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum} \\\\-)(]{2,20}$\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    public final String qualification;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectQualification}.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"     * @param qualification A valid subject qualification.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectQualification(String qualification) {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(qualification);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidQualification(qualification), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        this.qualification \u003d qualification;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject qualification.","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidQualification(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        return qualification;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectQualification // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 qualification.equals(((SubjectQualification) other).qualification)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"        return qualification.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"        return qualification.contains(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kingsleykuan":62,"Winniehyx":1}},{"path":"src/main/java/seedu/address/model/subject/SubjectRate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":" * Represents a Subject\u0027s hourly rate in Tutor Tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRate(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"public class SubjectRate implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"            \"Subject rate should only contain numbers, and it should be at least 1 digit long\";","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    public final Integer rate;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code SubjectRate}.","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"     * @param rate A valid subject rate.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectRate(String rate) {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"        requireNonNull(rate);","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"        checkArgument(isValidRate(rate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"        this.rate \u003d Integer.parseInt(rate);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if a given string is a valid subject rate.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"    public static boolean isValidRate(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"        return rate.toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"                || (other instanceof SubjectRate // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 rate.equals(((SubjectRate) other).rate)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"        return rate.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"        return rate.equals(Integer.parseInt(s));","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kingsleykuan":57}},{"path":"src/main/java/seedu/address/model/subject/TutorSubject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kingsleykuan"},"content":"package seedu.address.model.subject;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.tag.Filterable;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":" * Represents a subject that a tutor offers.","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"public class TutorSubject implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"            \"Each TutorSubject must contain name, level, rate, experience and qualification\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectName name;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectLevel level;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectRate rate;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectExperience experience;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"    private final SubjectQualification qualification;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"    public TutorSubject(SubjectName name, SubjectLevel level, SubjectRate rate,","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"            SubjectExperience experience, SubjectQualification qualification) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"        requireAllNonNull(name, level, rate, experience, qualification);","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"        this.level \u003d level;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        this.experience \u003d experience;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        this.qualification \u003d qualification;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectName getName() {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"        return name;","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectLevel getLevel() {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"        return level;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectRate getRate() {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"        return rate;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectExperience getExperience() {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"        return experience;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    public SubjectQualification getQualification() {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"        return qualification;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"     * Returns true if both tutor subjects have the same identity and data fields.","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"        if (!(other instanceof TutorSubject)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"        TutorSubject otherTutorSubject \u003d (TutorSubject) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"        return otherTutorSubject.getName().equals(getName())","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getLevel().equals(getLevel())","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getRate().equals(getRate())","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getExperience().equals(getExperience())","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"                \u0026\u0026 otherTutorSubject.getQualification().equals(getQualification());","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"        return Objects.hash(name, level, rate, experience, qualification);","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Level: \")","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"                .append(getLevel())","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Rate: \")","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"                .append(getRate())","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Years of Experience: \")","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"                .append(getExperience())","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"                .append(\"; Qualification: \")","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"                .append(getQualification());","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"        boolean disjunction \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || name.filter(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || level.filter(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || rate.filter(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || experience.filter(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"        disjunction \u003d disjunction || qualification.filter(s);","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"        return disjunction;","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kingsleykuan":106,"Winniehyx":2}},{"path":"src/main/java/seedu/address/model/subject/exceptions/DuplicateSubjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.subject.exceptions;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class DuplicateSubjectException extends RuntimeException {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public DuplicateSubjectException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"        super(\"Operation would result in duplicate subjects\");","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/subject/exceptions/SubjectNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.subject.exceptions;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":" * Signals that the operation is unable to find the specified subject.","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class SubjectNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/tag/Filterable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"public interface Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"Winniehyx"},"content":"    boolean filter(String s);","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"Winniehyx":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"public class Tag implements Filterable {","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Winniehyx"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"    public boolean filter(String s) {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        return tagName.contains(s);","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"    public String getTagName() {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        return this.tagName;","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"    boolean isSameTag(Tag otherTag) {","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"        if (otherTag \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"        return otherTag !\u003d null","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"                \u0026\u0026 otherTag.getTagName().equals(getTagName());","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yutingzou":12,"-":53,"Winniehyx":5}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":" * Signals that the operation is unable to find the specified tag.","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"public class TagNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"yutingzou":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectExperience;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectLevel;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectQualification;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectRate;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Gender(\"Male\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"kingsleykuan"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"kingsleykuan"},"content":"                getSampleSubjectList(getSampleTutorSubject(\"Mathematics\", \"Secondary 4\", \"60\", \"5\", \"A-Level\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"            new Person(new Name(\"Bernice Yu\"), new Gender(\"Female\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"                getSampleSubjectList(","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"                        getSampleTutorSubject(\"English\", \"Secondary 4\", \"60\", \"4\", \"A-Level\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"                        getSampleTutorSubject(\"Geography\", \"Secondary 4\", \"60\", \"4\", \"A-Level\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Gender(\"Female\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"                getSampleSubjectList(","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                        getSampleTutorSubject(\"English\", \"Secondary 3\", \"50\", \"5\", \"A-Level\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                        getSampleTutorSubject(\"Literature\", \"Secondary 3\", \"50\", \"5\", \"A-Level\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"            new Person(new Name(\"David Li\"), new Gender(\"Male\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"                getSampleSubjectList(getSampleTutorSubject(\"Physics\", \"Secondary 3\", \"50\", \"6\", \"A-Level\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Gender(\"Male\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"                getSampleSubjectList(getSampleTutorSubject(\"Geography\", \"Secondary 2\", \"40\", \"3\", \"A-Level\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Gender(\"Male\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"                getSampleSubjectList(getSampleTutorSubject(\"History\", \"Secondary 2\", \"40\", \"7\", \"A-Level\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"                getTagSet())","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"    public static Appointment[] getSampleAppointment() {","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"        return new Appointment[] {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"            new Appointment(new Name(\"Alex Yeoh\"), new SubjectName(\"Mathematics\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"                    new AppointmentDateTime(\"2021-03-24 2:00PM\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"                    new AppointmentDateTime(\"2021-03-24 4:00PM\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"                    new Address(\"Geylang\")),","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"            new Appointment(new Name(\"Bernice Yu\"), new SubjectName(\"Science\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"                    new AppointmentDateTime(\"2021-03-27 3:00PM\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"                    new AppointmentDateTime(\"2021-03-27 5:00PM\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":"                    new Address(\"Hougang\"))","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"        };","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"    public static TutorSubject getSampleTutorSubject(","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"            String subjectName,","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":"            String subjectLevel,","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"            String subjectRate,","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"            String subjectExperience,","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"            String subjectQualification) {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"        SubjectName name \u003d new SubjectName(subjectName);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"        SubjectLevel level \u003d new SubjectLevel(subjectLevel);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"        SubjectRate rate \u003d new SubjectRate(subjectRate);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"        SubjectExperience experience \u003d new SubjectExperience(subjectExperience);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kingsleykuan"},"content":"        SubjectQualification qualification \u003d new SubjectQualification(subjectQualification);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"        return new TutorSubject(name, level, rate, experience, qualification);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"    public static SubjectList getSampleSubjectList(TutorSubject... subjects) {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"        SubjectList subjectList \u003d new SubjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"kingsleykuan"},"content":"        for (TutorSubject subject : subjects) {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":"            subjectList.add(subject);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kingsleykuan"},"content":"        return subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"glatiuden"},"content":"    public static ReadOnlyAppointmentBook getSampleAppointmentBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"glatiuden"},"content":"        AppointmentBook sampleAb \u003d new AppointmentBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"glatiuden"},"content":"        for (Appointment samplePerson : getSampleAppointment()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"glatiuden"},"content":"            sampleAb.addAppointment(samplePerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"glatiuden"},"content":"        return sampleAb;","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jared98lyj":8,"kingsleykuan":57,"-":48,"glatiuden":19}},{"path":"src/main/java/seedu/address/storage/AppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":" * Represents a storage for {@link seedu.address.model.AppointmentBook}","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"public interface AppointmentBookStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"     * @return File path of Appointment Book data file","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"     * Returns Appointment book as a {@link ReadOnlyAppointmentBook}","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"     * @return {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"     * @throws DataConversionException","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"     * @throws IOException","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException,","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"            IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"     * @param filePath File path of Appointment book","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"     * @return {@code Optional.empty()} if filePath is an empty Appointment Book","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"     * @throws DataConversionException","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"     * @throws IOException","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"            IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"     * Saves the given {@link ReadOnlyAppointmentBook} to the storage.","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"     * @param appointmentBook cannot be null.","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"     * @see #saveAppointmentBook(ReadOnlyAppointmentBook)","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jared98lyj":52}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field\"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"            + \" is missing!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    //TODO Replace all email with name in next iteration","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    private String name;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"    private final String subject;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    private final String timeFrom;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    private final String timeTo;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    private final String location;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"     * Primary Constructor to create Json Adapted Appointment","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"                                  @JsonProperty(\"subjectname\") String subject,","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"                                  @JsonProperty(\"timeFrom\") String timeFrom,","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"                                  @JsonProperty(\"timeTo\") String timeTo,","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"                                  @JsonProperty(\"address\") String address) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"        this.timeFrom \u003d timeFrom;","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"        this.timeTo \u003d timeTo;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        this.location \u003d address;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"    public JsonAdaptedAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"        this.name \u003d appointment.getName().fullName;","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"        this.subject \u003d appointment.getSubject().name;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"        this.timeFrom \u003d appointment.getTimeFrom().toStorageString();","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"        this.timeTo \u003d appointment.getTimeTo().toStorageString();","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"        this.location \u003d appointment.getLocation().value;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"     * Appointment } object.","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"        if (!Address.isValidAddress(location)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"        final Address modelAddress \u003d new Address(location);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"        if (timeFrom \u003d\u003d null || timeTo \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":"                    AppointmentDateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"jared98lyj"},"content":"        if (!AppointmentDateTime.isValidDateTime(timeFrom)","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":"                || !AppointmentDateTime.isValidDateTime(timeTo)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(AppointmentDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":"        final AppointmentDateTime fromDateTime \u003d new AppointmentDateTime(timeFrom);","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"        final AppointmentDateTime toDateTime \u003d new AppointmentDateTime(timeTo);","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"jared98lyj"},"content":"        if (subject \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"jared98lyj"},"content":"                    SubjectName.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"jared98lyj"},"content":"        if (!SubjectName.isValidName(subject)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"jared98lyj"},"content":"            throw new IllegalValueException(SubjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"jared98lyj"},"content":"        final SubjectName modelSubjectName \u003d new SubjectName(subject);","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"jared98lyj"},"content":"        return new Appointment(modelName, modelSubjectName, fromDateTime, toDateTime,","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"jared98lyj"},"content":"                modelAddress);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"jared98lyj"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jared98lyj":103,"kingsleykuan":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"    private final String gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"    private final List\u003cJsonAdaptedTutorSubject\u003e tutorSubjects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"    private final String isFavourite;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Winniehyx"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"                             @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"                             @JsonProperty(\"tutorSubjects\") List\u003cJsonAdaptedTutorSubject\u003e tutorSubjects,","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"                             @JsonProperty(\"isFavourite\") String isFavourite) {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"        if (tutorSubjects !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"            this.tutorSubjects.addAll(tutorSubjects);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"        this.isFavourite \u003d isFavourite;","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"        gender \u003d source.getGender().personGender;","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"        tutorSubjects.addAll(source.getSubjectList()","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"                .asUnmodifiableObservableList()","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"                .stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"                .map(JsonAdaptedTutorSubject::new)","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"        isFavourite \u003d Boolean.toString(source.isFavourite());","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"Winniehyx"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"Winniehyx"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"Winniehyx"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"kingsleykuan"},"content":"        final SubjectList modelSubjectList \u003d new SubjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"Winniehyx"},"content":"        for (JsonAdaptedTutorSubject tutorSubject : tutorSubjects) {","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"kingsleykuan"},"content":"            modelSubjectList.add(tutorSubject.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"Winniehyx"},"content":"        final boolean modelIsFavourite;","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"Winniehyx"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"Winniehyx"},"content":"            modelIsFavourite \u003d Boolean.parseBoolean(isFavourite);","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"Winniehyx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(\"Invalid boolean value\");","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"Winniehyx"},"content":"        return new Person(modelName, modelGender, modelPhone, modelEmail,","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"Winniehyx"},"content":"                modelAddress, modelSubjectList, modelTags, modelIsFavourite);","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kingsleykuan":9,"-":105,"Winniehyx":39}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTutorSubject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Winniehyx"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Winniehyx"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.subject.SubjectExperience;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.subject.SubjectLevel;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.subject.SubjectQualification;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.subject.SubjectRate;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"import seedu.address.model.subject.TutorSubject;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"public class JsonAdaptedTutorSubject {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"    private final String subjectName;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"    private final String subjectLevel;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    private final String subjectRate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"    private final String subjectExperience;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"    private final String subjectQualification;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"     * Constructs a {@code JsonAdaptedTutorSubject} with the given details.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Winniehyx"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    public JsonAdaptedTutorSubject(@JsonProperty(\"subjectName\") String subjectName,","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"                                   @JsonProperty(\"subjectLevel\") String subjectLevel,","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"                                   @JsonProperty(\"subjectRate\") String subjectRate,","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"                                   @JsonProperty(\"subjectExperience\") String subjectExperience,","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"                                   @JsonProperty(\"subjectQualification\") String subjectQualification) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"        this.subjectName \u003d subjectName;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"        this.subjectLevel \u003d subjectLevel;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"        this.subjectRate \u003d subjectRate;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"        this.subjectExperience \u003d subjectExperience;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Winniehyx"},"content":"        this.subjectQualification \u003d subjectQualification;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"     * Converts a given {@code TutorSubject} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"    public JsonAdaptedTutorSubject(TutorSubject source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"        subjectName \u003d source.getName().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Winniehyx"},"content":"        subjectLevel \u003d source.getLevel().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Winniehyx"},"content":"        subjectRate \u003d source.getRate().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Winniehyx"},"content":"        subjectExperience \u003d source.getExperience().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Winniehyx"},"content":"        subjectQualification \u003d source.getQualification().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"     * Converts this Jackson-friendly adapted tutor subject object into the model\u0027s {@code TutorSubject} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tutor subject.","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"    public TutorSubject toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"        if (!SubjectName.isValidName(subjectName)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(SubjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"        SubjectName modelSubjectName \u003d new SubjectName(subjectName);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"        if (!SubjectLevel.isValidLevel(subjectLevel)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(SubjectLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Winniehyx"},"content":"        SubjectLevel modelSubjectLevel \u003d new SubjectLevel(subjectLevel);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Winniehyx"},"content":"        if (!SubjectRate.isValidRate(subjectRate)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(SubjectRate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"        SubjectRate modelSubjectRate \u003d new SubjectRate(subjectRate);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Winniehyx"},"content":"        if (!SubjectExperience.isValidExperience(subjectExperience)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(SubjectExperience.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Winniehyx"},"content":"        SubjectExperience modelSubjectExperience \u003d new SubjectExperience(subjectExperience);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"        if (!SubjectQualification.isValidQualification(subjectQualification)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"            throw new IllegalValueException(SubjectQualification.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Winniehyx"},"content":"        SubjectQualification modelSubjectQualification \u003d new SubjectQualification(subjectQualification);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Winniehyx"},"content":"        TutorSubject modelTutorSubject \u003d new TutorSubject(","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Winniehyx"},"content":"                modelSubjectName,","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Winniehyx"},"content":"                modelSubjectLevel,","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Winniehyx"},"content":"                modelSubjectRate,","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Winniehyx"},"content":"                modelSubjectExperience,","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"                modelSubjectQualification","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"        );","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Winniehyx"},"content":"        return modelTutorSubject;","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Winniehyx"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Winniehyx"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"kingsleykuan":12,"Winniehyx":80}},{"path":"src/main/java/seedu/address/storage/JsonAppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"public class JsonAppointmentBookStorage implements AppointmentBookStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    public JsonAppointmentBookStorage(Path filePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"        return filePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"        return readAppointmentBook(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"     * Similar to {@link #readAppointmentBook(Path)} ()}.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"        Optional\u003cJsonSerializableAppointmentBook\u003e jsonSerializableAppointmentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"                filePath, JsonSerializableAppointmentBook.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"        if (!jsonSerializableAppointmentBook.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"            return Optional.of(jsonSerializableAppointmentBook.get().toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"        saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"     * Similar to {@link #saveAppointmentBook(ReadOnlyAppointmentBook, Path)}.","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(appointmentBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAppointmentBook(appointmentBook), filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jared98lyj":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"public class JsonSerializableAppointmentBook {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Persons list contains \"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"            + \"duplicate apppointment(s).\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"    public JsonSerializableAppointmentBook(@JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointmentList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"        this.appointments.addAll(appointmentList);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"    public JsonSerializableAppointmentBook(ReadOnlyAppointmentBook source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"        this.appointments.addAll(source.getAppointmentList().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"                .map(JsonAdaptedAppointment::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"    public AppointmentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"            if (appointmentBook.hasAppointment(appointment)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"            appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"jared98lyj":58}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"public interface Storage extends AddressBookStorage, AppointmentBookStorage,","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"        UserPrefsStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook addressBook) throws IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jared98lyj":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    private AppointmentBookStorage appointmentBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"                          UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"                          AppointmentBookStorage appointmentBookStorage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"        this.appointmentBookStorage \u003d appointmentBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":"        return appointmentBookStorage.getAppointmentBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"jared98lyj"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook()","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"jared98lyj"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"        return readAppointmentBook(appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"jared98lyj"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath)","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"jared98lyj"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"        return appointmentBookStorage.readAppointmentBook(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"jared98lyj"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook addressBook) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"        saveAppointmentBook(addressBook, appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"jared98lyj"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kingsleykuan"},"content":"        appointmentBookStorage.saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jared98lyj":30,"kingsleykuan":6,"-":78}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    public final Appointment appointment;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"    private Label subject;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    private Label name;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    private Label datetime;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    private Label address;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"    private Label timeto;","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"     * Temporarily using a Stub due to absence of integration.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"        name.setText(appointment.getName().fullName);","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"        subject.setText(appointment.getSubject().name);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"        datetime.setText(appointment.getTimeFrom().toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"        address.setText(appointment.getLocation().value);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"        timeto.setText(appointment.getTimeTo().toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"        if (!(other instanceof AppointmentCard)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jared98lyj":5,"-":52,"glatiuden":16}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"                setText(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":49}},{"path":"src/main/java/seedu/address/ui/CalendarView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import java.time.Year;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.HPos;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import javafx.geometry.VPos;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.effect.BlendMode;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":" * UI calendar component that is displayed.","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":" * Adapted from https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":" * and https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"public class CalendarView extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"CalendarView.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    private static final int[] DAYS_IN_MONTH \u003d {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"    private static final String[] MONTHS \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"    private int[] simulateGridPane \u003d new int[42];","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"    private int day;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"    private int month;","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"    private int year;","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"    private YearMonth yearMonth;","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"    private LocalDate todayDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"    private LocalDate nonPivotDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"    private LocalDate pivotDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"    private LocalDate firstDayOfTheMonth;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"    private int prevMonthBalance;","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"    private int nextMonthBalance;","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"    private int thisMonthBalance;","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"    private final int currentDay;","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"    private final CommandBox.CommandExecutor commandExecutor;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"    private Text monthYearText;","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"    private GridPane dateGridPane;","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"    private GridPane monthYearGridPane;","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"    private GridPane weekDayGridPane;","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"    private ImageView leftButton;","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"    private ImageView rightButton;","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"     * Constructor for the calendar view in TutorTracker","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"    public CalendarView(CommandBox.CommandExecutor commandExecutor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"        this.todayDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"        this.pivotDate \u003d todayDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"        this.nonPivotDate \u003d todayDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"        this.day \u003d todayDate.getDayOfMonth();","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"glatiuden"},"content":"        this.month \u003d todayDate.getMonthValue();","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"        this.year \u003d todayDate.getYear();","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"        this.currentDay \u003d this.day;","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"        this.yearMonth \u003d YearMonth.of(this.year, this.month);","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"glatiuden"},"content":"        this.firstDayOfTheMonth \u003d yearMonth.atDay(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"        setMonthYearLabel();","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"        generateCalender();","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    // with minor modifications (renaming variables).","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * It will update the attributes in the class according to the appointmentDate parse in","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param date the new appointmentDate","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void updateDayMonthYear(LocalDate date) {","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.year \u003d date.getYear();","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.month \u003d date.getMonthValue();","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.day \u003d date.getDayOfMonth();","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.yearMonth \u003d YearMonth.of(this.year, this.month);","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.firstDayOfTheMonth \u003d yearMonth.atDay(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private boolean isSameMonth(LocalDate d1, LocalDate d2) {","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return d1.withDayOfMonth(1).equals(d2.withDayOfMonth(1));","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Find the number of days in a month given the year and month.","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @return return the number of days.","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int findNumberOfDaysInTheMonth() {","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (this.month \u003d\u003d 2) {","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            if (this.yearMonth.isLeapYear()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                return 29;","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                return DAYS_IN_MONTH[month - 1];","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return DAYS_IN_MONTH[month - 1];","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Find the number of days in a month given the year and month.","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @return return the number of days.","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int findNumberOfDaysOfAMonth(int month, int year) {","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (month \u003d\u003d 2) {","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (Year.isLeap(year)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                return 29;","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                return DAYS_IN_MONTH[month - 1];","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return DAYS_IN_MONTH[month - 1];","lastModifiedDate":"2021-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Find the number of days in the previous month given the year and month.","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @return return the number of days.","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public int findNumberOfDaysInPreviousMonth() {","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (this.month \u003e\u003d 2) {","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return findNumberOfDaysOfAMonth(this.month - 1, this.year);","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return DAYS_IN_MONTH[11];","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Set the monthYear Label\u0027s content.","lastModifiedDate":"2021-03-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private void setMonthYearLabel() {","lastModifiedDate":"2021-03-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        StringBuilder monthYear \u003d new StringBuilder();","lastModifiedDate":"2021-03-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        monthYear.append(MONTHS[this.nonPivotDate.getMonthValue() - 1]);","lastModifiedDate":"2021-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        monthYear.append(\"  \");","lastModifiedDate":"2021-03-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        monthYear.append(this.nonPivotDate.getYear());","lastModifiedDate":"2021-03-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String output \u003d monthYear.toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        this.monthYearText.setText(output);","lastModifiedDate":"2021-03-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Fill up the simulateGridPane[] with the appointmentDate in order.","lastModifiedDate":"2021-03-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private void fill() {","lastModifiedDate":"2021-03-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        this.thisMonthBalance \u003d findNumberOfDaysInTheMonth();","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        int firstDayOfMonth \u003d this.firstDayOfTheMonth.getDayOfWeek().getValue();","lastModifiedDate":"2021-03-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        this.prevMonthBalance \u003d firstDayOfMonth % 7;","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        int firstValue \u003d findNumberOfDaysInPreviousMonth() - this.prevMonthBalance + 1;","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c this.prevMonthBalance; i++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            this.simulateGridPane[i] \u003d firstValue;","lastModifiedDate":"2021-03-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            firstValue++;","lastModifiedDate":"2021-03-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c this.thisMonthBalance; i++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.simulateGridPane[this.prevMonthBalance + i] \u003d i + 1;","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        this.nextMonthBalance \u003d 42 - this.thisMonthBalance - prevMonthBalance;","lastModifiedDate":"2021-03-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        int newStartingPoint \u003d this.thisMonthBalance + prevMonthBalance;","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c this.nextMonthBalance; i++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.simulateGridPane[newStartingPoint + i] \u003d i + 1;","lastModifiedDate":"2021-03-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Generate Label for dateGridPane.","lastModifiedDate":"2021-03-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param dayNumber text for the Label","lastModifiedDate":"2021-03-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * @return a label with specific text and font","lastModifiedDate":"2021-03-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    private Label createLabel(int dayNumber) {","lastModifiedDate":"2021-03-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Label label \u003d new Label();","lastModifiedDate":"2021-03-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        label.setText(\"\" + dayNumber);","lastModifiedDate":"2021-03-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        label.setStyle(\"-fx-text-fill: white\");","lastModifiedDate":"2021-03-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return label;","lastModifiedDate":"2021-03-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * Generate a VBox with specific calendar.","lastModifiedDate":"2021-03-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * @return a VBox for dateGridPane.","lastModifiedDate":"2021-03-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    private VBox placeHolderForLabel() {","lastModifiedDate":"2021-03-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        VBox holder \u003d new VBox();","lastModifiedDate":"2021-03-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        holder.setFillWidth(false);","lastModifiedDate":"2021-03-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        holder.setPrefHeight(20);","lastModifiedDate":"2021-03-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        holder.setPrefWidth(20);","lastModifiedDate":"2021-03-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        holder.setMinSize(20, 20);","lastModifiedDate":"2021-03-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        holder.setMaxSize(30, 30);","lastModifiedDate":"2021-03-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        holder.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-03-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return holder;","lastModifiedDate":"2021-03-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    // with minor modifications (change of colors and code structure).","lastModifiedDate":"2021-03-10"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Assign a Vbox to each GridPane.","lastModifiedDate":"2021-03-10"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Each Vbox contains a Label.","lastModifiedDate":"2021-03-10"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Each label\u0027s text is correspond to the calendar.","lastModifiedDate":"2021-03-10"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void generateCalender() {","lastModifiedDate":"2021-03-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        fill();","lastModifiedDate":"2021-03-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        this.weekDayGridPane.setBackground(new Background(","lastModifiedDate":"2021-03-10"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                new BackgroundFill(Color.valueOf(\"#383838\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-03-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        this.dateGridPane.setBackground(new Background(","lastModifiedDate":"2021-03-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                new BackgroundFill(Color.valueOf(\"#383838\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-03-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        for (int row \u003d 0; row \u003c 6; row++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            for (int col \u003d 0; col \u003c 7; col++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                VBox holder \u003d placeHolderForLabel();","lastModifiedDate":"2021-03-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                if (i \u003c this.prevMonthBalance || i \u003e 42 - 1 - this.nextMonthBalance) {","lastModifiedDate":"2021-03-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    holder.setBlendMode(BlendMode.SOFT_LIGHT);","lastModifiedDate":"2021-03-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                if (i \u003d\u003d this.prevMonthBalance + this.day - 1 \u0026\u0026 isSameMonth(this.pivotDate, this.nonPivotDate)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    holder.setBackground(new Background(","lastModifiedDate":"2021-03-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                            new BackgroundFill(Color.valueOf(\"#5e5e5e\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-03-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                if (isSameMonth(this.todayDate, this.nonPivotDate)","lastModifiedDate":"2021-03-10"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                        \u0026\u0026 i \u003d\u003d this.prevMonthBalance + this.currentDay - 1) {","lastModifiedDate":"2021-03-10"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    holder.setBorder(new Border(new BorderStroke(Color.valueOf(\"white\"),","lastModifiedDate":"2021-03-10"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                            BorderStrokeStyle.SOLID, CornerRadii.EMPTY, new BorderWidths(1))));","lastModifiedDate":"2021-03-10"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-10"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                Label num \u003d createLabel(this.simulateGridPane[i]);","lastModifiedDate":"2021-03-10"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                holder.getChildren().add(num);","lastModifiedDate":"2021-03-10"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                holder.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    Label a \u003d (Label) holder.getChildren().get(0);","lastModifiedDate":"2021-03-10"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    int clickedDate \u003d Integer.parseInt(a.getText());","lastModifiedDate":"2021-03-10"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    if (holder.getBlendMode() !\u003d BlendMode.SOFT_LIGHT) {","lastModifiedDate":"2021-03-10"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                        pivotDate \u003d nonPivotDate.withDayOfMonth(clickedDate);","lastModifiedDate":"2021-03-10"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                        pivotDate \u003d getNewDate(clickedDate);","lastModifiedDate":"2021-03-10"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-03-10"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    try {","lastModifiedDate":"2021-03-16"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                        commandExecutor.execute(\"view_appointment \" + pivotDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                        logger.info(\"Invalid command\");","lastModifiedDate":"2021-03-16"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-03-16"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    nonPivotDate \u003d pivotDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    updateDayMonthYear(pivotDate);","lastModifiedDate":"2021-03-10"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                    refreshCalenderView();","lastModifiedDate":"2021-03-10"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                });","lastModifiedDate":"2021-03-10"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                this.dateGridPane.add(holder, col, row);","lastModifiedDate":"2021-03-10"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                GridPane.setHalignment(holder, HPos.CENTER);","lastModifiedDate":"2021-03-10"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                GridPane.setValignment(holder, VPos.CENTER);","lastModifiedDate":"2021-03-10"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                i++;","lastModifiedDate":"2021-03-10"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * Refresh the whole dateGridPane to show latest UI.","lastModifiedDate":"2021-03-10"},{"lineNumber":334,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    private void refreshCalenderView() {","lastModifiedDate":"2021-03-10"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        dateGridPane.getChildren().clear();","lastModifiedDate":"2021-03-10"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        updateDayMonthYear(nonPivotDate);","lastModifiedDate":"2021-03-10"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        setMonthYearLabel();","lastModifiedDate":"2021-03-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        generateCalender();","lastModifiedDate":"2021-03-10"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * generate a new local appointmentDate according to input new appointmentDate.","lastModifiedDate":"2021-03-10"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":350,"author":{"gitId":"-"},"content":"     * @param value appointmentDate indicator.","lastModifiedDate":"2021-03-10"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     * @return a new localDate object with that appointmentDate.","lastModifiedDate":"2021-03-10"},{"lineNumber":352,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    private LocalDate getNewDate(int value) {","lastModifiedDate":"2021-03-10"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        if (value \u003c\u003d 31 \u0026\u0026 value \u003e\u003d 21) {","lastModifiedDate":"2021-03-10"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            LocalDate prevM \u003d this.nonPivotDate.minusMonths(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            prevM \u003d prevM.withDayOfMonth(value);","lastModifiedDate":"2021-03-10"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            return prevM;","lastModifiedDate":"2021-03-10"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            LocalDate nextM \u003d this.nonPivotDate.plusMonths(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            nextM \u003d nextM.withDayOfMonth(value);","lastModifiedDate":"2021-03-10"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            return nextM;","lastModifiedDate":"2021-03-10"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":370,"author":{"gitId":"-"},"content":"     * Initialise calendar to previous month data when the next button is clicked.","lastModifiedDate":"2021-03-10"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    public void handleToPrev() {","lastModifiedDate":"2021-03-10"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        this.nonPivotDate \u003d nonPivotDate.minusMonths(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        updateDayMonthYear(nonPivotDate);","lastModifiedDate":"2021-03-10"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        refreshCalenderView();","lastModifiedDate":"2021-03-10"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    // @@author {zwasd}-reused","lastModifiedDate":"2021-03-10"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    // https://github.com/AY1920S2-CS2103T-T10-3/main/blob/master/src/main/java/seedu/saveit/ui/CalendarView.java","lastModifiedDate":"2021-03-10"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":385,"author":{"gitId":"-"},"content":"     * Initialise calendar to next month data when the next button is clicked.","lastModifiedDate":"2021-03-10"},{"lineNumber":386,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    public void handleToNext() {","lastModifiedDate":"2021-03-10"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        this.nonPivotDate \u003d nonPivotDate.plusMonths(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        updateDayMonthYear(nonPivotDate);","lastModifiedDate":"2021-03-10"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        refreshCalenderView();","lastModifiedDate":"2021-03-10"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":98,"-":295}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-t14-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"glatiuden":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"    private TutorListPanel tutorListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    private ResultBarFooter resultDisplay;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    private CalendarView calendarView;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"    private StackPane calendarViewPane;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"glatiuden"},"content":"        tutorListPanel \u003d new TutorListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"glatiuden"},"content":"        personListPanelPlaceholder.getChildren().add(tutorListPanel.getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"glatiuden"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"glatiuden"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"glatiuden"},"content":"        resultDisplay \u003d new ResultBarFooter();","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"glatiuden"},"content":"        statusbarPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"glatiuden"},"content":"        calendarView \u003d new CalendarView(this::executeCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"glatiuden"},"content":"        calendarViewPane.getChildren().add(calendarView.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"glatiuden"},"content":"    private void setCalendarNavigation(String direction) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":161,"author":{"gitId":"glatiuden"},"content":"        if (direction.equals(\"next\")) {","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"glatiuden"},"content":"            calendarView.handleToNext();","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"glatiuden"},"content":"        } else if (direction.equals(\"prev\")) {","lastModifiedDate":"2021-03-10"},{"lineNumber":164,"author":{"gitId":"glatiuden"},"content":"            calendarView.handleToPrev();","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"glatiuden"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"glatiuden"},"content":"            throw new CommandException(\"MESSAGE_UNKNOWN_COMMAND\");","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"glatiuden"},"content":"    public TutorListPanel getPersonListPanel() {","lastModifiedDate":"2021-03-10"},{"lineNumber":187,"author":{"gitId":"glatiuden"},"content":"        return tutorListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":184,"glatiuden":32}},{"path":"src/main/java/seedu/address/ui/ResultBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"public class ResultBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public ResultBarFooter() {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":27}},{"path":"src/main/java/seedu/address/ui/TutorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.subject.TutorSubject;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"public class TutorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"TutorListCard.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"    private Label subjects;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"    public TutorCard(Person person, int displayedIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Winniehyx"},"content":"        boolean isFavourite \u003d person.isFavourite();","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Winniehyx"},"content":"        if (isFavourite) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Winniehyx"},"content":"            name.setText(person.getName().fullName + \" \" + \"*\");","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        person.getSubjectList().asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"                .filter(subject -\u003e Objects.nonNull(subject))","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"                .forEach(subject -\u003e displaySubjectDetails(subject));","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"    private void displaySubjectDetails(TutorSubject subject) {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"        String text \u003d subject.getName().name + \"\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"                + \"    Level: \" + subject.getLevel().level + \"\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"                + \"    Rate: SGD\" + subject.getRate().rate + \"/hr\" + \"\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"                + \"    Experience: \" + subject.getExperience().experience + \" years\" + \"\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"                + \"    Qualification: \" + subject.getQualification().qualification;","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"        subjects.setText(text);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"        if (!(other instanceof TutorCard)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"        TutorCard card \u003d (TutorCard) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yutingzou":16,"-":72,"glatiuden":5,"Winniehyx":7}},{"path":"src/main/java/seedu/address/ui/TutorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"public class TutorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    private static final String FXML \u003d \"TutorListPanel.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TutorListPanel.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    private ListView\u003cPerson\u003e tutorListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public TutorListPanel(ObservableList\u003cPerson\u003e tutorList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        tutorListView.setItems(tutorList);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        tutorListView.setCellFactory(listView -\u003e new TutorListViewCell());","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    class TutorListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"                setGraphic(new TutorCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":39,"glatiuden":9}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"1.\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel fx:id\u003d\"subject\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$subject\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"            \u003cLabel fx:id\u003d\"datetime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$datetime\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"            \u003cLabel fx:id\u003d\"timeto\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timeto\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"jared98lyj":1,"glatiuden":38}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":8}},{"path":"src/main/resources/view/CalendarView.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"\u003cAnchorPane fx:id\u003d\"calenderPane\" prefHeight\u003d\"300.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"        \u003cGridPane fx:id\u003d\"monthYearGridPane\" alignment\u003d\"CENTER\" prefHeight\u003d\"40.0\" prefWidth\u003d\"600.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"                \u003cText fx:id\u003d\"monthYearText\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" textAlignment\u003d\"CENTER\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                \u003cImageView fx:id\u003d\"leftButton\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" onMouseClicked\u003d\"#handleToPrev\" GridPane.halignment\u003d\"LEFT\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"                    \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"                        \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"                    \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"                        \u003cImage url\u003d\"@../images/arrow_backward_icon.png\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"                \u003cImageView fx:id\u003d\"rightButton\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" onMouseClicked\u003d\"#handleToNext\" GridPane.halignment\u003d\"RIGHT\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"                    \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"                        \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"                    \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"               \u003cimage\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"                  \u003cImage url\u003d\"@../images/arrow_forward_icon.png\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"               \u003c/image\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"        \u003cGridPane fx:id\u003d\"weekDayGridPane\" layoutY\u003d\"58.0\" prefHeight\u003d\"42.0\" prefWidth\u003d\"600.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"30.0\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" styleClass\u003d\"weekDayLabel\" text\u003d\"S\" textAlignment\u003d\"CENTER\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"M\" GridPane.columnIndex\u003d\"1\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"T\" GridPane.columnIndex\u003d\"2\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"W\" GridPane.columnIndex\u003d\"3\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"T\" GridPane.columnIndex\u003d\"4\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"F\" GridPane.columnIndex\u003d\"5\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"                \u003cLabel styleClass\u003d\"weekDayLabel\" text\u003d\"S\" GridPane.columnIndex\u003d\"6\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"                    \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"glatiuden"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"                \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"glatiuden"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"        \u003cGridPane fx:id\u003d\"dateGridPane\" layoutY\u003d\"105.0\" prefHeight\u003d\"300.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"75.0\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"glatiuden"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"glatiuden"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":114}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"glatiuden"},"content":"    padding: 4px;","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"glatiuden"},"content":"    -fx-font-size: 10.5pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":351,"glatiuden":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"\u003cfx:root minHeight\u003d\"650.0\" minWidth\u003d\"1000.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Tutor Tracker\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"                  \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"                        \u003cHBox style\u003d\"-fx-background-color: #383838;\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"                              \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"                                 \u003cimage\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"                                    \u003cImage url\u003d\"@../images/favorite_icon.png\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/image\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"                              \u003c/ImageView\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"                              \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"25.0\" style\u003d\"-fx-text-fill: white;\" styleClass\u003d\"cell_big_label\" text\u003d\"Favorites\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"                                 \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"                                    \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"                              \u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"                    \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"150.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"                  \u003cVBox prefWidth\u003d\"150.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"                           \u003cHBox alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: #383838;\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"                               \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"                                   \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"                                 \u003cimage\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"                                    \u003cImage url\u003d\"@../images/calendar_icon.png\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/image\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"                                   \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"25.0\" style\u003d\"-fx-text-fill: white;\" styleClass\u003d\"cell_big_label\" text\u003d\"Schedule\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"                                 \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"                                    \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"                                 \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"                                   \u003c/Label\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"glatiuden"},"content":"                               \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"glatiuden"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"glatiuden"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"glatiuden"},"content":"                           \u003c/HBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":98,"author":{"gitId":"glatiuden"},"content":"                         \u003cStackPane fx:id\u003d\"calendarViewPane\" maxHeight\u003d\"300.0\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"250.0\" style\u003d\"-fx-background-color: #383838\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"                             \u003cpadding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"                                 \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"glatiuden"},"content":"                             \u003c/padding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"glatiuden"},"content":"                         \u003c/StackPane\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"glatiuden"},"content":"                        \u003cVBox fx:id\u003d\"appointmentList\" prefWidth\u003d\"150.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"glatiuden"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"glatiuden"},"content":"                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"glatiuden"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"glatiuden"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"glatiuden"},"content":"                              \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"glatiuden"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"glatiuden"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"glatiuden"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"glatiuden"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"glatiuden"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"glatiuden"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":48,"glatiuden":71}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"        \u003cRowConstraints minHeight\u003d\"75\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":9,"glatiuden":7}},{"path":"src/main/resources/view/TutorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"      \u003cLabel fx:id\u003d\"subjects\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yutingzou":2,"-":34,"glatiuden":2}},{"path":"src/main/resources/view/TutorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"  \u003cListView fx:id\u003d\"tutorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"glatiuden":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Winniehyx"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    \"address\" : \"John street, block 123, #01-01\",","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    \"tagged\" : [ \"friends\", \"tutor\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"      \"subjectName\" : \"English\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"      \"subjectLevel\" : \"Sec 3\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"      \"subjectRate\" : \"50\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"      \"subjectExperience\" : \"5\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"      \"subjectQualification\" : \"ALevel\"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"      \"subjectName\" : \"Mathematics\",","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"      \"subjectLevel\" : \"Sec 4\",","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"      \"subjectRate\" : \"60\",","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"      \"subjectExperience\" : \"6\",","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"      \"subjectQualification\" : \"ALevel\"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Winniehyx"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Winniehyx"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Winniehyx"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Winniehyx"},"content":"      \"subjectName\" : \"English\",","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Winniehyx"},"content":"      \"subjectLevel\" : \"Sec 3\",","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"      \"subjectRate\" : \"50\",","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Winniehyx"},"content":"      \"subjectExperience\" : \"5\",","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Winniehyx"},"content":"      \"subjectQualification\" : \"ALevel\"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"    }]","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":9,"Winniehyx":28}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\" : \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"Winniehyx"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Winniehyx"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Winniehyx"},"content":"    \"tagged\" : [ \"friends\", \"tutor\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Winniehyx"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Winniehyx"},"content":"      \"subjectName\" : \"English\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Winniehyx"},"content":"      \"subjectLevel\" : \"Sec 3\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Winniehyx"},"content":"      \"subjectRate\" : \"50\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Winniehyx"},"content":"      \"subjectExperience\" : \"5\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Winniehyx"},"content":"      \"subjectQualification\" : \"ALevel\"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Winniehyx"},"content":"    }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Winniehyx"},"content":"      \"subjectName\" : \"Mathematics\",","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Winniehyx"},"content":"      \"subjectLevel\" : \"Sec 4\",","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"      \"subjectRate\" : \"60\",","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Winniehyx"},"content":"      \"subjectExperience\" : \"6\",","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Winniehyx"},"content":"      \"subjectQualification\" : \"ALevel\"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Winniehyx"},"content":"    } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":7,"Winniehyx":16}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectName\" : \"Mathematics\",","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 4\",","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectRate\" : \"60\",","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"5\",","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"    } ]","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Winniehyx"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Winniehyx"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Winniehyx"},"content":"      \"subjectName\" : \"English\",","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 4\",","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectRate\" : \"60\",","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"4\",","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectName\" : \"Geography\",","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 4\",","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"      \"subjectRate\" : \"60\",","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"4\",","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Winniehyx"},"content":"    } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Winniehyx"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Winniehyx"},"content":"      \"subjectName\" : \"English\",","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 3\",","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectRate\" : \"50\",","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"5\",","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectName\" : \"Literature\",","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 3\",","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"      \"subjectRate\" : \"50\",","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Winniehyx"},"content":"      \"subjectExperience\" : \"5\",","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    } ]","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectName\" : \"Physics\",","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 3\",","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectRate\" : \"50\",","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"6\",","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"    } ]","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectName\" : \"Geography\",","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 2\",","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectRate\" : \"40\",","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"3\",","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"    } ]","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"    \"gender\" : \"Female\",","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"kingsleykuan"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectName\" : \"History\",","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 2\",","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectRate\" : \"40\",","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"7\",","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"    } ]","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"    \"gender\" : \"Male\",","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"    \"tutorSubjects\" : [ {","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectName\" : \"Chemistry\",","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectLevel\" : \"Secondary 2\",","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectRate\" : \"40\",","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectExperience\" : \"4\",","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":"      \"subjectQualification\" : \"A-Level\"","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"Winniehyx"},"content":"    } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kingsleykuan":64,"-":39,"Winniehyx":10}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"                new JsonAppointmentBookStorage(temporaryFolder.resolve(","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"                        \"appointmentBook.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage,","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"                userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"        String deleteCommand \u003d \"delete_tutor 9\";","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":"                new JsonAppointmentBookStorage(temporaryFolder.resolve(","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"jared98lyj"},"content":"                        \"ioExceptionAppointmentBook.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage,","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":"                userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"jared98lyj"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"jared98lyj"},"content":"                new UserPrefs(), model.getAppointmentBook());","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jared98lyj":13,"kingsleykuan":3,"-":156,"glatiuden":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":43,"glatiuden":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"glatiuden"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"glatiuden"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"glatiuden"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook readOnlyAppointmentBook) {","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"glatiuden"},"content":"        public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"glatiuden"},"content":"        public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"glatiuden"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"glatiuden"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"glatiuden"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"glatiuden"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"glatiuden"},"content":"        public void removeAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"Winniehyx"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"glatiuden"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"glatiuden"},"content":"        public void removeAppointmentIndex(int indexToRemove) {","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"glatiuden"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"glatiuden"},"content":"        public boolean hasAppointmentDateTime(AppointmentDateTime appointmentDateTime) {","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"glatiuden"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":194,"glatiuden":62,"Winniehyx":1}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":30,"glatiuden":4}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION_LEVEL;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.DateViewPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALID_GENDER_AMY \u003d \"Female\";","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALID_GENDER_BOB \u003d \"Male\";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALID_SUBJECT_NAME \u003d \"English\";","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALID_SUBJECT_LEVEL \u003d \"Secondary 4\";","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALID_SUBJECT_RATE \u003d \"60\";","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALID_SUBJECT_EXPERIENCE \u003d \"5\";","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    public static final String VALID_SUBJECT_QUALIFICATION \u003d \"A-Level\";","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"    public static final String SUBJECT_NAME_DESC \u003d \" \" + PREFIX_SUBJECT_NAME + VALID_SUBJECT_NAME;","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"    public static final String SUBJECT_LEVEL_DESC \u003d \" \" + PREFIX_EDUCATION_LEVEL + VALID_SUBJECT_LEVEL;","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"    public static final String SUBJECT_RATE_DESC \u003d \" \" + PREFIX_RATE + VALID_SUBJECT_RATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"    public static final String SUBJECT_EXPERIENCE_DESC \u003d \" \" + PREFIX_YEAR + VALID_SUBJECT_EXPERIENCE;","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"    public static final String SUBJECT_QUALIFICATION_DESC \u003d \" \" + PREFIX_QUALIFICATION + VALID_SUBJECT_QUALIFICATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"kingsleykuan"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"                .withSubjectList(","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"kingsleykuan"},"content":"                        VALID_SUBJECT_NAME,","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"kingsleykuan"},"content":"                        VALID_SUBJECT_LEVEL,","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"                        VALID_SUBJECT_RATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"                        VALID_SUBJECT_EXPERIENCE,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"                        VALID_SUBJECT_QUALIFICATION)","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"glatiuden"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"glatiuden"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"glatiuden"},"content":"    public static void showAppointmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"glatiuden"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAppointmentList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"glatiuden"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"jared98lyj"},"content":"        final AppointmentDateTime date \u003d appointment.getTimeFrom();","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"glatiuden"},"content":"        model.updateFilteredAppointmentList(new DateViewPredicate(date));","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"glatiuden"},"content":"        assertEquals(1, model.getFilteredAppointmentList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"glatiuden"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetDateTime} in the","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"glatiuden"},"content":"     * {@code model}\u0027s appointment book.","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"glatiuden"},"content":"    public static void showAppointmentAtDate(Model model, AppointmentDateTime targetDateTime) {","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"glatiuden"},"content":"        assertTrue(model.hasAppointmentDateTime(targetDateTime));","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate predicate \u003d new DateViewPredicate(targetDateTime);","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"glatiuden"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"glatiuden"},"content":"        assertEquals(1, model.getFilteredAppointmentList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jared98lyj":1,"kingsleykuan":30,"-":126,"glatiuden":27}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"                model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":106,"glatiuden":5}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"                model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"                model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"                model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"glatiuden"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"glatiuden"},"content":"                model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":168,"glatiuden":10}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"            getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":81,"glatiuden":4}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAppointmentBook());","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":37,"glatiuden":3}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"kingsleykuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"import seedu.address.model.person.ViewTutorPredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"kingsleykuan"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kingsleykuan"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"kingsleykuan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"kingsleykuan"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"yutingzou"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"yutingzou"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"yutingzou"},"content":"        Person tutorToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"yutingzou"},"content":"        ViewTutorPredicate predicate \u003d new ViewTutorPredicate(tutorToView);","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"yutingzou"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"yutingzou"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_TUTOR_SUCCESS,","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"yutingzou"},"content":"                tutorToView.getName());","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"yutingzou"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"yutingzou"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"yutingzou"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"yutingzou"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"yutingzou"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"yutingzou"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"yutingzou"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"yutingzou"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"yutingzou"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"yutingzou"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"yutingzou"},"content":"        Person tutorToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yutingzou"},"content":"        ViewTutorPredicate predicate \u003d new ViewTutorPredicate(tutorToView);","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"yutingzou"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"yutingzou"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_TUTOR_SUCCESS,","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"yutingzou"},"content":"                tutorToView.getName());","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"yutingzou"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"yutingzou"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"yutingzou"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"yutingzou"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"yutingzou"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"yutingzou"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"yutingzou"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"yutingzou"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"yutingzou"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"yutingzou"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"yutingzou"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"yutingzou"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"yutingzou"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"yutingzou"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"yutingzou"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"yutingzou"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"yutingzou"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"yutingzou"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"yutingzou"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"yutingzou"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"yutingzou"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"yutingzou"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"yutingzou"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"yutingzou"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"yutingzou"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"yutingzou":84,"kingsleykuan":11,"glatiuden":9}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/FindAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_APPOINTMENT_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.MATHS_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.SCIENCE_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.NamePredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"public class FindAppointmentCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"            getTypicalAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"        NamePredicate firstPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"                new NamePredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"        NamePredicate secondPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"                new NamePredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        FindAppointmentCommand findFirstCommand \u003d new FindAppointmentCommand(firstPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        FindAppointmentCommand findSecondCommand \u003d new FindAppointmentCommand(secondPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"        FindAppointmentCommand findFirstCommandCopy \u003d new FindAppointmentCommand(firstPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENT_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"        NamePredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENT_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"        NamePredicate predicate \u003d preparePredicate(\"Alice John\");","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"        assertEquals(Arrays.asList(MATHS_APPOINTMENT, SCIENCE_APPOINTMENT), model.getFilteredAppointmentList());","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"    private NamePredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"        return new NamePredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"glatiuden":86}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/ListAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListAppointmentCommand.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"public class ListAppointmentCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        assertCommandSuccess(new ListAppointmentCommand(), model,","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        assertCommandSuccess(new ListAppointmentCommand(), model,","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"                ListAppointmentCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"glatiuden":42}},{"path":"src/test/java/seedu/address/logic/commands/appointmentcommands/ViewAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.commands.appointmentcommands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalDates.APPOINTMENT_FIRST_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalDates.APPOINTMENT_SECOND_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.DateViewPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"public class ViewAppointmentCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"            getTypicalAppointmentBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    public void execute_validDateUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate predicate \u003d new DateViewPredicate(APPOINTMENT_FIRST_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        Appointment appointmentToView \u003d model.getFilteredAppointmentList().filtered(predicate).get(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"        ViewAppointmentCommand viewCommand \u003d new ViewAppointmentCommand(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        String expectedMessage \u003d String.format(ViewAppointmentCommand.MESSAGE_VIEW_APPOINTMENT_SUCCESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"                appointmentToView.getTimeFrom().toDateString());","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"    public void execute_validDateFilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        showAppointmentAtDate(model, APPOINTMENT_FIRST_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate predicate \u003d new DateViewPredicate(APPOINTMENT_FIRST_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"        Appointment appointmentToView \u003d model.getFilteredAppointmentList().filtered(predicate).get(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"        ViewAppointmentCommand viewCommand \u003d new ViewAppointmentCommand(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"        String expectedMessage \u003d String.format(ViewAppointmentCommand.MESSAGE_VIEW_APPOINTMENT_SUCCESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"                appointmentToView.getTimeFrom().toDateString());","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate firstPredicate \u003d new DateViewPredicate(APPOINTMENT_FIRST_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate secondPredicate \u003d new DateViewPredicate(APPOINTMENT_SECOND_DATE);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"        ViewAppointmentCommand viewFirstCommand \u003d new ViewAppointmentCommand(firstPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"        ViewAppointmentCommand viewSecondCommand \u003d new ViewAppointmentCommand(secondPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"        ViewAppointmentCommand viewFirstCommandCopy \u003d new ViewAppointmentCommand(firstPredicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"jared98lyj":2,"glatiuden":73}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_EXPERIENCE_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_LEVEL_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_NAME_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_QUALIFICATION_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_RATE_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + SUBJECT_NAME_DESC + SUBJECT_LEVEL_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"                + SUBJECT_RATE_DESC + SUBJECT_EXPERIENCE_DESC + SUBJECT_QUALIFICATION_DESC,","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + SUBJECT_NAME_DESC + SUBJECT_LEVEL_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"                + SUBJECT_RATE_DESC + SUBJECT_EXPERIENCE_DESC + SUBJECT_QUALIFICATION_DESC,","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + SUBJECT_NAME_DESC + SUBJECT_LEVEL_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"                + SUBJECT_RATE_DESC + SUBJECT_EXPERIENCE_DESC + SUBJECT_QUALIFICATION_DESC,","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + SUBJECT_NAME_DESC + SUBJECT_LEVEL_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"                + SUBJECT_RATE_DESC + SUBJECT_EXPERIENCE_DESC + SUBJECT_QUALIFICATION_DESC,","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + SUBJECT_NAME_DESC + SUBJECT_LEVEL_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"                + SUBJECT_RATE_DESC + SUBJECT_EXPERIENCE_DESC + SUBJECT_QUALIFICATION_DESC,","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":91,"author":{"gitId":"kingsleykuan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"kingsleykuan"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + SUBJECT_NAME_DESC + SUBJECT_LEVEL_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"kingsleykuan"},"content":"                + SUBJECT_RATE_DESC + SUBJECT_EXPERIENCE_DESC + SUBJECT_QUALIFICATION_DESC,","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"kingsleykuan"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"kingsleykuan"},"content":"        // missing gender prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_GENDER_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"kingsleykuan"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"kingsleykuan"},"content":"                + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_GENDER_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"kingsleykuan"},"content":"                + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"kingsleykuan"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"kingsleykuan"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"kingsleykuan"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"kingsleykuan"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"kingsleykuan"},"content":"                + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"kingsleykuan"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"kingsleykuan"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"kingsleykuan"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"kingsleykuan"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"kingsleykuan"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"kingsleykuan"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"kingsleykuan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"kingsleykuan"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kingsleykuan":67,"-":105}},{"path":"src/test/java/seedu/address/logic/parser/TutorTrackerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"public class TutorTrackerParserTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    private final TutorTrackerParser parser \u003d new TutorTrackerParser();","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":92,"glatiuden":2}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yutingzou"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"yutingzou"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"yutingzou"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"yutingzou"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yutingzou"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yutingzou"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"yutingzou"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"yutingzou"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"yutingzou"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"yutingzou"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"yutingzou"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yutingzou"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yutingzou"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"yutingzou":21,"glatiuden":4}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/FindAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.FindAppointmentCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.NamePredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"public class FindAppointmentCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    private FindAppointmentCommandParser parser \u003d new FindAppointmentCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"                FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        FindAppointmentCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"                new FindAppointmentCommand(new NamePredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"glatiuden":35}},{"path":"src/test/java/seedu/address/logic/parser/appointmentparser/ViewAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.logic.parser.appointmentparser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.TypicalDates.APPOINTMENT_FIRST_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import seedu.address.logic.commands.appointmentcommands.ViewAppointmentCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.DateViewPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"public class ViewAppointmentCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    private ViewAppointmentCommandParser parser \u003d new ViewAppointmentCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"        assertParseSuccess(parser, \"2021-03-24\",","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"                new ViewAppointmentCommand(new DateViewPredicate(APPOINTMENT_FIRST_DATE)));","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"                ViewAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"glatiuden":28}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"jared98lyj"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"jared98lyj"},"content":"        AppointmentDateTime appointmentFromTime \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"jared98lyj"},"content":"                new AppointmentDateTime(\"2020-10-10 10:10AM\");","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"jared98lyj"},"content":"        AppointmentDateTime appointmentToTime \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"                new AppointmentDateTime(\"2020-10-10 11:10AM\");","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"jared98lyj"},"content":"        Appointment diffAppointment \u003d new Appointment(new Name(\"John Lim\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"jared98lyj"},"content":"                new SubjectName(\"Math\"), appointmentFromTime, appointmentToTime,","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"jared98lyj"},"content":"                new Address(\"Clementi\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"jared98lyj"},"content":"        AppointmentBook differentAppointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"jared98lyj"},"content":"        differentAppointmentBook.addAppointment(diffAppointment);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"glatiuden"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, appointmentBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"jared98lyj"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs,","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"jared98lyj"},"content":"                appointmentBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"jared98lyj"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook,","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"jared98lyj"},"content":"                userPrefs, appointmentBook)));","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"jared98lyj"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, appointmentBook)));","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":147,"author":{"gitId":"jared98lyj"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook,","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"jared98lyj"},"content":"                differentUserPrefs, appointmentBook)));","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"jared98lyj"},"content":"        // different appointmentBook -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"jared98lyj"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook,","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"jared98lyj"},"content":"                userPrefs, differentAppointmentBook)));","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jared98lyj":27,"-":127,"glatiuden":1}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"public class AppointmentBookTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"    private final AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"        assertEquals(Collections.emptyList(), appointmentBook.getAppointmentList());","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentBook.resetData(null));","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"jared98lyj":26}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"public class AppointmentDateTimeTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentDateTime(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    public void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"        String invalidDateTime \u003d \"\";","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentDateTime(invalidDateTime));","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        // null datetime","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppointmentDateTime.isValidDateTime(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        // invalid datetime","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        assertFalse(AppointmentDateTime.isValidDateTime(\"\")); // empty string","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        assertFalse(AppointmentDateTime.isValidDateTime(\" \")); // spaces only","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"        assertFalse(AppointmentDateTime.isValidDateTime(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        assertFalse(AppointmentDateTime.isValidDateTime(\"2021-03-55 10:00AM\")); // invalid date","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        assertFalse(AppointmentDateTime.isValidDateTime(\"2021-03-15 30:00AM\")); // invalid time","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        // valid datetime","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"        assertTrue(AppointmentDateTime.isValidDateTime(\"2021-03-24 10:00AM\")); // YYYY-MM-DD","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"        assertTrue(AppointmentDateTime.isValidDateTime(\"2021/03/24 10:00AM\")); // YYYY/MM/DD","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"glatiuden":38}},{"path":"src/test/java/seedu/address/model/appointment/DateViewPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"public class DateViewPredicateTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"        AppointmentDateTime firstPredicateDateTime \u003d new AppointmentDateTime(\"2021-03-24 10:00AM\");","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"        AppointmentDateTime secondPredicateDateTime \u003d new AppointmentDateTime(\"2021-03-24 12:00PM\");","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate firstPredicate \u003d new DateViewPredicate(firstPredicateDateTime);","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate secondPredicate \u003d new DateViewPredicate(secondPredicateDateTime);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate firstPredicateCopy \u003d new DateViewPredicate(firstPredicateDateTime);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        AppointmentDateTime firstPredicateDateTime \u003d new AppointmentDateTime(\"2021-03-24 10:00AM\");","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate predicate \u003d new DateViewPredicate(firstPredicateDateTime);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withTimeFrom(\"2021-03-24 10:00AM\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"        // Non-matching date","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"        DateViewPredicate predicate \u003d new DateViewPredicate(new AppointmentDateTime(\"2021-03-30 12:00PM\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withTimeFrom(\"2021-03-24 12:00PM\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"        // Non-matching date in different format","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"        predicate \u003d new DateViewPredicate(new AppointmentDateTime(\"2021/03/12 12:00PM\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withTimeFrom(\"2021/03/30 12:00PM\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"glatiuden":54}},{"path":"src/test/java/seedu/address/model/appointment/NamePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"public class NamePredicateTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"        NamePredicate firstPredicate \u003d new NamePredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"        NamePredicate secondPredicate \u003d new NamePredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        NamePredicate firstPredicateCopy \u003d new NamePredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"glatiuden"},"content":"        // One keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"glatiuden"},"content":"        NamePredicate predicate \u003d new NamePredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"        predicate \u003d new NamePredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"glatiuden"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"glatiuden"},"content":"        predicate \u003d new NamePredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"        predicate \u003d new NamePredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"        NamePredicate predicate \u003d new NamePredicate(Collections.emptyList());","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"        predicate \u003d new NamePredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"glatiuden"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"        // Keywords match subject and location, but does not match name","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"        predicate \u003d new NamePredicate(Arrays.asList(\"12345\", \"English\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withName(\"Alice\").withSubject(\"English\")","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"                .withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"glatiuden":75}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Winniehyx"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Winniehyx"},"content":"    private static final String VALID_IS_FAVOURITE \u003d \"false\";","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    private static final List\u003cJsonAdaptedTutorSubject\u003e VALID_TUTOR_SUBJECTS \u003d BENSON.getSubjectList()","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"            .asUnmodifiableObservableList()","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"            .stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Winniehyx"},"content":"            .map(JsonAdaptedTutorSubject::new)","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Winniehyx"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Winniehyx"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Winniehyx"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(null, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Winniehyx"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, INVALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Winniehyx"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Winniehyx"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, null,","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Winniehyx"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Winniehyx"},"content":"                        INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Winniehyx"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Winniehyx"},"content":"                        null, VALID_ADDRESS, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"Winniehyx"},"content":"                        VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"Winniehyx"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"Winniehyx"},"content":"                        VALID_EMAIL, null, VALID_TAGS, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"Winniehyx"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"Winniehyx"},"content":"                        VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_TUTOR_SUBJECTS, VALID_IS_FAVOURITE);","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"Winniehyx":26,"glatiuden":3}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"                new JsonAppointmentBookStorage(getTempFilePath(\"app\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, appointmentBookStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jared98lyj":3,"-":67}},{"path":"src/test/java/seedu/address/testutil/AppointmentBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":" * A utility class to help with building AppointmentBook objects.","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":" *     {@code AppointmentBook ab \u003d new AppointmentBookBuilder().withAppointment(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"public class AppointmentBookBuilder {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"    private AppointmentBook appointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBookBuilder() {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"glatiuden"},"content":"        appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBookBuilder(AppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"glatiuden"},"content":"        this.appointmentBook \u003d appointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBookBuilder withAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"        appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBook build() {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"glatiuden":34}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.subject.SubjectName;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"    public static final String DEFAULT_NAME \u003d \"John Lim\";","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    public static final String DEFAULT_SUBJECT \u003d \"Mathematics\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    public static final String DEFAULT_TIMEFROM \u003d \"2020-02-24 12:00PM\";","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    public static final String DEFAULT_TIMETO \u003d \"2020-02-24 12:30PM\";","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    private Name name;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"    private SubjectName subject;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    private AppointmentDateTime timeFrom;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    private AppointmentDateTime timeTo;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    private Address address;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"     * Creates an {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        subject \u003d new SubjectName(DEFAULT_SUBJECT);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"        timeFrom \u003d new AppointmentDateTime(DEFAULT_TIMEFROM);","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"        timeTo \u003d new AppointmentDateTime(DEFAULT_TIMETO);","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"        name \u003d appointmentToCopy.getName();","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"glatiuden"},"content":"        subject \u003d appointmentToCopy.getSubject();","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"        timeFrom \u003d appointmentToCopy.getTimeFrom();","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"        timeTo \u003d appointmentToCopy.getTimeTo();","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"glatiuden"},"content":"        address \u003d appointmentToCopy.getLocation();","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"glatiuden"},"content":"     * Sets the {@code Name} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"    public AppointmentBuilder withName(String name) {","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"glatiuden"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"glatiuden"},"content":"     * Sets the {@code SubjectName} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBuilder withSubject(String subject) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"glatiuden"},"content":"        this.subject \u003d new SubjectName(subject);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"glatiuden"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"glatiuden"},"content":"     * Parses the {@code timeFrom} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBuilder withTimeFrom(String dateTime) {","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"        this.timeFrom \u003d new AppointmentDateTime(dateTime);","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"glatiuden"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"glatiuden"},"content":"     * Parses the {@code timeTo} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBuilder withTimeTo(String dateTime) {","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"glatiuden"},"content":"        this.timeTo \u003d new AppointmentDateTime(dateTime);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"glatiuden"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"glatiuden"},"content":"     * Sets the {@code Address} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"glatiuden"},"content":"    public AppointmentBuilder withAddress(String address) {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"glatiuden"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"glatiuden"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"glatiuden"},"content":"    public Appointment build() {","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"        return new Appointment(name, subject, timeFrom, timeTo, address);","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"jared98lyj":17,"glatiuden":75}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"kingsleykuan"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"kingsleykuan"},"content":"        descriptor.setSubjectList(person.getSubjectList());","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"kingsleykuan"},"content":"     * Sets the {@code SubjectList} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kingsleykuan"},"content":"    public EditPersonDescriptorBuilder withSubjectList(","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kingsleykuan"},"content":"            String subjectName,","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kingsleykuan"},"content":"            String subjectLevel,","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kingsleykuan"},"content":"            String subjectRate,","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kingsleykuan"},"content":"            String subjectExperience,","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"kingsleykuan"},"content":"            String subjectQualification) {","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kingsleykuan"},"content":"        SubjectList subjects \u003d new SubjectList();","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"kingsleykuan"},"content":"        subjects.add(SampleDataUtil.getSampleTutorSubject(","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kingsleykuan"},"content":"                subjectName,","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"kingsleykuan"},"content":"                subjectLevel,","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":"                subjectRate,","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"                subjectExperience,","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kingsleykuan"},"content":"                subjectQualification));","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"kingsleykuan"},"content":"        descriptor.setSubjectList(subjects);","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"kingsleykuan"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kingsleykuan":33,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.TutorSubject;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"kingsleykuan"},"content":"    public static final String DEFAULT_GENDER \u003d \"Female\";","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"kingsleykuan"},"content":"    private Gender gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    private SubjectList subjectList;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"        subjectList \u003d new SubjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"        subjectList \u003d personToCopy.getSubjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"kingsleykuan"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"        return this;","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"kingsleykuan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"kingsleykuan"},"content":"     * Parses the {@code subject} and add it to the {@code Person} that we are building.","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"kingsleykuan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"kingsleykuan"},"content":"    public PersonBuilder withSubject(","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"kingsleykuan"},"content":"            String subjectName,","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"kingsleykuan"},"content":"            String subjectLevel,","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"kingsleykuan"},"content":"            String subjectRate,","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"kingsleykuan"},"content":"            String subjectExperience,","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"kingsleykuan"},"content":"            String subjectQualification) {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"kingsleykuan"},"content":"        TutorSubject subject \u003d SampleDataUtil.getSampleTutorSubject(","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"kingsleykuan"},"content":"                subjectName,","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"kingsleykuan"},"content":"                subjectLevel,","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"kingsleykuan"},"content":"                subjectRate,","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"kingsleykuan"},"content":"                subjectExperience,","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"kingsleykuan"},"content":"                subjectQualification);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"kingsleykuan"},"content":"        this.subjectList.add(subject);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"kingsleykuan"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"kingsleykuan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":130,"author":{"gitId":"kingsleykuan"},"content":"        return new Person(name, gender, phone, email, address, subjectList, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kingsleykuan":38,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION_LEVEL;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUALIFICATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT_NAME;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"kingsleykuan"},"content":"import seedu.address.model.subject.SubjectList;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"        sb.append(PREFIX_GENDER + person.getGender().personGender + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"        person.getSubjectList().asUnmodifiableObservableList().stream().forEach(","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"            s -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"                sb.append(PREFIX_SUBJECT_NAME + s.getName().name + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"                sb.append(PREFIX_EDUCATION_LEVEL + s.getLevel().level + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"                sb.append(PREFIX_RATE + s.getRate().rate.toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"                sb.append(PREFIX_YEAR + s.getExperience().experience.toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"                sb.append(PREFIX_QUALIFICATION + s.getQualification().qualification + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"            });","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"kingsleykuan"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.personGender).append(\" \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"        if (descriptor.getSubjectList().isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"            SubjectList subjects \u003d descriptor.getSubjectList().get();","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"kingsleykuan"},"content":"            subjects.asUnmodifiableObservableList().stream().forEach(","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"                s -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"                    sb.append(PREFIX_SUBJECT_NAME + s.getName().name + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"                    sb.append(PREFIX_EDUCATION_LEVEL + s.getLevel().level + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"                    sb.append(PREFIX_RATE + s.getRate().rate.toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"                    sb.append(PREFIX_YEAR + s.getExperience().experience.toString() + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"                    sb.append(PREFIX_QUALIFICATION + s.getQualification().qualification + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kingsleykuan"},"content":"                });","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"kingsleykuan"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"kingsleykuan"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kingsleykuan":29,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"glatiuden"},"content":"public class TypicalAppointments {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"glatiuden"},"content":"    public static final Appointment MATHS_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"            .withName(\"Alice Tan\")","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"glatiuden"},"content":"            .withSubject(\"Mathematics\").withTimeFrom(\"2021-03-24 10:00AM\").withTimeTo(\"2021-03-24 12:00PM\")","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"glatiuden"},"content":"            .withAddress(\"Jurong West\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"glatiuden"},"content":"    public static final Appointment SCIENCE_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"            .withName(\"John Doe\")","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"glatiuden"},"content":"            .withSubject(\"Science\").withTimeFrom(\"2021-03-27 12:00PM\").withTimeTo(\"2021-03-27 2:00PM\")","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"glatiuden"},"content":"            .withAddress(\"Clementi\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"glatiuden"},"content":"    private TypicalAppointments() {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"glatiuden"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"glatiuden"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"glatiuden"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"glatiuden"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"glatiuden"},"content":"    public static AppointmentBook getTypicalAppointmentBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"glatiuden"},"content":"        AppointmentBook ab \u003d new AppointmentBook();","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"glatiuden"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"glatiuden"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"glatiuden"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"glatiuden"},"content":"        return ab;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"glatiuden"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"glatiuden"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MATHS_APPOINTMENT, SCIENCE_APPOINTMENT));","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"glatiuden"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"jared98lyj":2,"glatiuden":39}},{"path":"src/test/java/seedu/address/testutil/TypicalDates.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glatiuden"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"glatiuden"},"content":"import seedu.address.model.appointment.AppointmentDateTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"glatiuden"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"glatiuden"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"glatiuden"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"glatiuden"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"glatiuden"},"content":"public class TypicalDates {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"glatiuden"},"content":"    public static final AppointmentDateTime APPOINTMENT_FIRST_DATE \u003d new AppointmentDateTime(\"2021-03-24 12:00AM\");","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"glatiuden"},"content":"    public static final AppointmentDateTime APPOINTMENT_SECOND_DATE \u003d new AppointmentDateTime(\"2021-03-27 12:00AM\");","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"glatiuden"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"glatiuden":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_EXPERIENCE;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_LEVEL;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_QUALIFICATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kingsleykuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_RATE;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withGender(\"Female\")","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"Mathematics\", \"Secondary 4\", \"60\", \"5\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withGender(\"Male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"English\", \"Secondary 4\", \"60\", \"4\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"Geography\", \"Secondary 4\", \"60\", \"4\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withGender(\"Male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kingsleykuan"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"English\", \"Secondary 3\", \"50\", \"5\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"Literature\", \"Secondary 3\", \"50\", \"5\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"kingsleykuan"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withGender(\"Male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"kingsleykuan"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"Physics\", \"Secondary 3\", \"50\", \"6\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"kingsleykuan"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withGender(\"Female\")","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kingsleykuan"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"Geography\", \"Secondary 2\", \"40\", \"3\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"kingsleykuan"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withGender(\"Female\")","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kingsleykuan"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"History\", \"Secondary 2\", \"40\", \"7\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"kingsleykuan"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withGender(\"Male\")","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"kingsleykuan"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(\"Chemistry\", \"Secondary 2\", \"40\", \"4\", \"A-Level\")","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"kingsleykuan"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withGender(\"Female\")","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"kingsleykuan"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withGender(\"Female\")","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"kingsleykuan"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":73,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kingsleykuan"},"content":"            .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"kingsleykuan"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kingsleykuan"},"content":"            .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"kingsleykuan"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"kingsleykuan"},"content":"            .withGender(VALID_GENDER_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"kingsleykuan"},"content":"            .withSubject(","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kingsleykuan"},"content":"                    VALID_SUBJECT_NAME,","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"kingsleykuan"},"content":"                    VALID_SUBJECT_LEVEL,","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"kingsleykuan"},"content":"                    VALID_SUBJECT_RATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"kingsleykuan"},"content":"                    VALID_SUBJECT_EXPERIENCE,","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kingsleykuan"},"content":"                    VALID_SUBJECT_QUALIFICATION)","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kingsleykuan":49,"-":57}}]
