[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# BudgetBaby :baby: :money_with_wings:","lastModifiedDate":"2021-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"yuheem"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W14-2/tp/badge.svg)](https://app.codecov.io/gh/AY2021S2-CS2103T-W14-2/tp)","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"BudgetBaby is a **desktop app for setting monthly budgets and tracking expenses**.  It is optimized for use via a Command Line Interface (CLI) so that entering and editing financial records and budgets can be done faster by typing in commands while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"yuheem"},"content":"BudgetBaby has the following features to enhance your life:","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":"* Set monthly spending budgets","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":"* Track monthly expenses","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"yuheem"},"content":"* and more to come soon...","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"yuheem"},"content":"Hurry and start tracking your expenses now!","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"yuheem"},"content":"## Site Map","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"yuheem"},"content":"* [User Guide](docs/UserGuide.md)","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"yuheem"},"content":"* [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"yuheem"},"content":"* [About Us](docs/AboutUs.md)","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"yuheem"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"yuheem"},"content":"* This project is based on the ADdressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"yuheem"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"yuheem":20,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"mainClassName \u003d \u0027seedu.budgetbaby.Main\u0027","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"    archiveName \u003d \u0027budgetbaby.jar\u0027","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"run {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"eksinyue":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"You can reach us at the email `seer@comp.nus.edu.sg`","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"### He Xinyue","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"\u003cimg src\u003d\"images/eksinyue.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"[[github](https://github.com/eksinyue)]","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"[[portfolio](team/eksinyue.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"- Role: Team Lead","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"- Responsibilities: To be updated","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"### Jaryl Loh","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"\u003cimg src\u003d\"images/jxrrelo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"[[github](http://github.com/jxrrelo)]","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"[[portfolio](team/jxrrelo.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"- Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"- Responsibilities: UI","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"yuheem"},"content":"### Lai Yu Heem","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"yuheem"},"content":"\u003cimg src\u003d\"images/yuheem.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"yuheem"},"content":"[[github](http://github.com/yuheem)] [[portfolio](team/yuheem.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"- Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"- Responsibilities: To be updated","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"natosy"},"content":"### Ong Siying Natasha","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"\u003cimg src\u003d\"images/natosy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"natosy"},"content":"[[github](http://github.com/natosy)]","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"natosy"},"content":"[[portfolio](team/natosy.md)]","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"- Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"- Responsibilities: Dev Ops + Threading","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"### Tan De Yi","lastModifiedDate":"2021-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"\u003cimg src\u003d\"images/deyixtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"[[github](http://github.com/deyixtan)]","lastModifiedDate":"2021-02-25"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"[[portfolio](team/deyixtan.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"- Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"- Responsibilities: UI","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"natosy":3,"yuheem":3,"-":29,"eksinyue":15,"jxrrelo":5,"deyixtan":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"- Table of Contents","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"![Architecture Diagram](images/ArchitectureDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yuheem"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-W14-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"natosy"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103T-W14-2/tp/blob/master/src/main/java/seedu/budgetbaby/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103T-W14-2/tp/blob/master/src/main/java/seedu/budgetbaby/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yuheem"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yuheem"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"yuheem"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yuheem"},"content":"- [**`BudgetBabyLogic`**](#logic-component): The command executor.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yuheem"},"content":"- [**`BudgetBabyModel`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yuheem"},"content":"- [**`BudgetBabyStorage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"yuheem"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yuheem"},"content":"- exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"natosy"},"content":"For example, the `BudgetBabyLogic` component (see the class diagram given below) defines its API in the `BudgetBabyLogic.java` interface and exposes its functionality using the `BudgetBabyLogicManager.java` class which implements the `BudgetBabyLogic` interface.","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"yuheem"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `add-fr d/Lunch a/10`.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"[To be updated]","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"![Class Diagram of the Logic Component](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W14-2/tp/tree/master/src/main/java/seedu/budgetbaby/ui/Ui.java)","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"The UI consists of a `MainWindow` that is made up of parts. It is made up of a `HelpWindow`, `BudgetDisplay`, `FinancialRecordListPanel`, `CommandBox`, `ResultDisplay` and a `StatusBarFooter`. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"yuheem"},"content":"- Executes user commands using the `Logic` component.","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"yuheem"},"content":"- Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"yuheem"},"content":"![Structure of the logic component](images/LogicClassDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"**API**:","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"yuheem"},"content":"[`BudgetBabyLogic.java`](https://github.com/AY2021S2-CS2103T-W14-2/tp/blob/master/src/main/java/seedu/budgetbaby/logic/BudgetBabyLogic.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"yuheem"},"content":"1. `BudgetBabyLogic` uses the `BudgetBabyParser` class to parse the user command.","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"yuheem"},"content":"2. This results in a `BudgetBabyCommand` object which is executed by the `BudgetBabyLogicManager`","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"yuheem"},"content":"3. The command execution can affect the `BudgetBabyModel` (e.g. adding a financial record).","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"yuheem"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"yuheem"},"content":"5. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"yuheem"},"content":"Given below is the sequence diagram for interactions within the `Logic` component for the `execute(\"add-fr d/Lunch a/10\")` API call.","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"yuheem"},"content":"![Interactions Inside the Logic Component for the `add-fr d/Lunch a/10` Command](images/AddFinancialRecordSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"yuheem"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddFrCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"**API** : [`BudgetBabyModel.java`](https://github.com/AY2021S2-CS2103T-W14-2/tp/blob/master/src/main/java/seedu/budgetbaby/model/BudgetBabyModel.java)","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"The `BudgetBabyModel`,","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"yuheem"},"content":"- stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"yuheem"},"content":"- stores the budget tracker data.","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"yuheem"},"content":"- exposes an unmodifiable `ObservableList\u003cMonth\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"yuheem"},"content":"- exposes an unmodifiable `ObservableList\u003cFinancialRecord\u003e` that can be \u0027observed\u0027 (same as above)","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"yuheem"},"content":"- does not depend on any of the other three components.","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"### Storage component [To be updated]","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"jxrrelo"},"content":"**API** : [`BudgetBabyStorage.java`](https://github.com/AY2021S2-CS2103T-W14-2/tp/blob/master/src/main/java/seedu/budgetbaby/storage/BudgetBabyStorage.java)","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"yuheem"},"content":"- can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"yuheem"},"content":"- can save the budget tracker data in json format and read it back.","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"jxrrelo"},"content":"Classes used by multiple components are in the `seedu.budgetbaby.commons` package.","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"yuheem"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"### Month Management Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"#### `view-month` command","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"jxrrelo"},"content":"To be updated by Xinyue","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":"### Financial Record Management Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"jxrrelo"},"content":"To be updated by Xinyue","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"yuheem"},"content":"### Budget Management Feature","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"yuheem"},"content":"#### `set-bg` command","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"yuheem"},"content":"To be updated by Yu Heem","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"jxrrelo"},"content":"### [Completed] Find Financial Record Feature : `find-fr`","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"jxrrelo"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"jxrrelo"},"content":"The proposed `find` mechanism is facilitated by `BudgetBabyModelManager` which contains","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"jxrrelo"},"content":"a filtered list `filteredFinancialRecords` that is to be altered and displayed to the","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"jxrrelo"},"content":"user according to the `find-fr` command.","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"jxrrelo"},"content":"The command is parsed from `BudgetBabyCommandParser` to the `FindFrCommandParser` class,","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"jxrrelo"},"content":"where the input fields will be processed before instantiating a new valid `FindFrCommand`.","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"jxrrelo"},"content":"The `FindFrCommand` calls the `findFinancialRecord` method of the `BudgetBabyModel` that","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"jxrrelo"},"content":"is implemented by `BudgetBabyModelManager`. `BudgetBabyModelManager` then handles the","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"jxrrelo"},"content":"filtering of `filteredFinancialRecords` through the `updateFilteredFinancialRecordList`","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"jxrrelo"},"content":"method. The updated financial records are then displayed to the user on the front end of","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"jxrrelo"},"content":"the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"jxrrelo"},"content":"The `findFinancialRecord` method expects a minimum of 1 and up to 3 of the following arguments:","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"jxrrelo"},"content":"`Description`, `Amount`, `Category`.","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"jxrrelo"},"content":"Given below is an example usage scenario and how the `find` mechanism behaves at each step.","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"jxrrelo"},"content":"Step 1. The user launches the application for the first time. The `filteredFinancialRecords` list","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"jxrrelo"},"content":"presented to the user would be a list of all financial records retrieved from local storage","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"jxrrelo"},"content":"`budgetbaby.json` (if applicable).","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"jxrrelo"},"content":"Step 2. The user executes `find-fr d/Lunch a/10 c/Food` command to find financial records with","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"jxrrelo"},"content":"description `Lunch`, amount `10` and category `Food`. The `find-fr` command indirectly calls the","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"jxrrelo"},"content":"`updateFilteredFinancialRecordList` method, causing `filteredFinancialRecords` to display the matching","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"jxrrelo"},"content":"records without modifying the contents of the original financial records list.","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"jxrrelo"},"content":"- Note: If no matching financial record(s) is/are found,","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"jxrrelo"},"content":"then the list will not be updated and a log message","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"jxrrelo"},"content":"indicating no records found will be shown.","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"jxrrelo"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"jxrrelo"},"content":"![](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"jxrrelo"},"content":"The following activity diagram summarizes what happens when a user executes `find-fr`:","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"jxrrelo"},"content":"![](images/FindActivityDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"jxrrelo"},"content":"#### Extensions Implemented","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"jxrrelo"},"content":"- `c/FR_CATEGORY` field accepts multiple categories","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"jxrrelo"},"content":"- Display an appropriate message if no matching financial records found","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"jxrrelo"},"content":"#### Design Consideration","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"jxrrelo"},"content":"- Alternative 1 (selected choice): A single `find-fr` command that handles all fields","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"jxrrelo"},"content":"    - Pros: Eliminates the need to implement separate search features. Allows","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"jxrrelo"},"content":"      filtering multiple fields in a single command","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"jxrrelo"},"content":"    - Cons: May cause confusion in usage. Some users may find it cumbersome to deal with","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"jxrrelo"},"content":"      `d/` `a/` `c/` tags","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"jxrrelo"},"content":"- Alternative 2: Separate `find-description`, `find-amount`, `find-category` commands","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"jxrrelo"},"content":"    - Pros: May be less confusing to users and eliminates the use of `d/` `a/` `c/` tags","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"jxrrelo"},"content":"    - Cons: Additional implementation and commands. More steps required for user","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"jxrrelo"},"content":"    when filtering multiple fields","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"jxrrelo"},"content":"### [Completed] Reset Filter Feature : `reset-filter`","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"jxrrelo"},"content":"#### Actual Implementation","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"jxrrelo"},"content":"This feature was developed in conjunction with `find-fr`. As the financial records list can","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"jxrrelo"},"content":"be filtered to the flags set by the user, there must be a way for the user to revert this list","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"jxrrelo"},"content":"back to its original state (i.e. displaying all financial records).","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"jxrrelo"},"content":"Similar to the mechanism of the find operation, the `ResetFilterCommand` calls ","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"jxrrelo"},"content":"The `ResetFilterCommand` calls the `resetFilter` method of the `BudgetBabyModel` that","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"jxrrelo"},"content":"is implemented by `BudgetBabyModelManager`. `BudgetBabyModelManager` then handles the","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"jxrrelo"},"content":"resetting of filter on `filteredFinancialRecords` through the `updateFilteredFinancialRecordList`","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"jxrrelo"},"content":"method. The updated original financial records are then displayed to the user on the","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"jxrrelo"},"content":"front end of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"jxrrelo"},"content":"Given below is an example usage scenario and how the `reset` mechanism behaves at each step","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"jxrrelo"},"content":"with the `find-fr` command initially applied","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"jxrrelo"},"content":"Step 1. The user executes `find-fr d/Lunch a/10 c/Food` command which filters and displays","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"jxrrelo"},"content":"the updated financial records list","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"jxrrelo"},"content":"Step 2. The user is satisfied with his query result and wishes to revert the financial records","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"jxrrelo"},"content":"list back to its original state. The `reset-filter` command is executed which indirectly calls the","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"jxrrelo"},"content":"`updateFilteredFinancialRecordList` method, causing `filteredFinancialRecords` to display all","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"jxrrelo"},"content":"available financial records.","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"jxrrelo"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"jxrrelo"},"content":"![](images/ResetSequenceDiagram.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"jxrrelo"},"content":"The following activity diagram summarizes what happens when a user executes `reset-filter`: \u003c/br\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"jxrrelo"},"content":"![](images/ResetActivityDiagram.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"natosy"},"content":"### Statistics Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"jxrrelo"},"content":"To be updated by Nat","lastModifiedDate":"2021-03-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"jxrrelo"},"content":"### Undo Feature","lastModifiedDate":"2021-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":244,"author":{"gitId":"jxrrelo"},"content":"To be updated by De Yi","lastModifiedDate":"2021-03-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"yuheem"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"natosy"},"content":"[comment]: \u003c\u003e (## **Documentation, logging, testing, configuration, dev-ops**)","lastModifiedDate":"2021-02-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"yuheem"},"content":"[comment]: \u003c\u003e (\\* [Documentation guide]\u0026#40;Documentation.md\u0026#41;)","lastModifiedDate":"2021-03-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"yuheem"},"content":"[comment]: \u003c\u003e (\\* [Testing guide]\u0026#40;Testing.md\u0026#41;)","lastModifiedDate":"2021-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"yuheem"},"content":"[comment]: \u003c\u003e (\\* [Logging guide]\u0026#40;Logging.md\u0026#41;)","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"yuheem"},"content":"[comment]: \u003c\u003e (\\* [Configuration guide]\u0026#40;Configuration.md\u0026#41;)","lastModifiedDate":"2021-03-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"yuheem"},"content":"[comment]: \u003c\u003e (\\* [DevOps guide]\u0026#40;DevOps.md\u0026#41;)","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"natosy"},"content":"[comment]: \u003c\u003e (--------------------------------------------------------------------------------------------------------------------)","lastModifiedDate":"2021-02-25"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"natosy"},"content":"University student who needs to manage their finances.","lastModifiedDate":"2021-02-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"natosy"},"content":"**Value proposition**: \u003cbr\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":270,"author":{"gitId":"natosy"},"content":"Most university students have a limited budget every month and are moving towards financial independence.","lastModifiedDate":"2021-02-25"},{"lineNumber":271,"author":{"gitId":"natosy"},"content":"During this transition, university students may seek external tools to manage their finances.","lastModifiedDate":"2021-02-25"},{"lineNumber":272,"author":{"gitId":"natosy"},"content":"Hence, we believe a budget tracker application that records monthly expenses would benefit university","lastModifiedDate":"2021-02-25"},{"lineNumber":273,"author":{"gitId":"natosy"},"content":"students as they adjust themselves, easing into adulthood.","lastModifiedDate":"2021-02-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"yuheem"},"content":"- Optimised for university students by","lastModifiedDate":"2021-03-23"},{"lineNumber":276,"author":{"gitId":"yuheem"},"content":"  - setting monthly psending goals as university students have limited budgets","lastModifiedDate":"2021-03-23"},{"lineNumber":277,"author":{"gitId":"yuheem"},"content":"  - allowing university students to categorize their spendings with custom categories suiting their diverse lifestyles","lastModifiedDate":"2021-03-23"},{"lineNumber":278,"author":{"gitId":"yuheem"},"content":"  - providing statistics to help university students better visualize their spending habits and make future plans","lastModifiedDate":"2021-03-23"},{"lineNumber":279,"author":{"gitId":"natosy"},"content":"    (i.e. to cut down on costs incurred on food next month)","lastModifiedDate":"2021-02-25"},{"lineNumber":280,"author":{"gitId":"yuheem"},"content":"  - sending reminders to keep university students on track (i.e. how much money is left in their budget) as they are often busy with school","lastModifiedDate":"2021-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"natosy"},"content":"[comment]: \u003c\u003e (Priorities: High \u0026#40;must have\u0026#41; - `* * *`, Medium \u0026#40;nice to have\u0026#41; - `* *`, Low \u0026#40;unlikely to have\u0026#41; - `*`)","lastModifiedDate":"2021-02-25"},{"lineNumber":285,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":286,"author":{"gitId":"jxrrelo"},"content":"v1.2","lastModifiedDate":"2021-03-17"},{"lineNumber":287,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"jxrrelo"},"content":"| As a …​                                                               | I want to …​                                    | So that I can…​                                                                       |","lastModifiedDate":"2021-03-17"},{"lineNumber":289,"author":{"gitId":"jxrrelo"},"content":"| --------------------------------------------------------------------- | ----------------------------------------------- | ------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"jxrrelo"},"content":"| university student who wants to manage my finances                    | add an FR                                       | track my spending history easily                                                      |","lastModifiedDate":"2021-03-17"},{"lineNumber":291,"author":{"gitId":"jxrrelo"},"content":"| university student who wants to manage my finances                    | delete an FR                                    | recover from mistakes from adding wrong entries of my spending history                |","lastModifiedDate":"2021-03-17"},{"lineNumber":292,"author":{"gitId":"jxrrelo"},"content":"| university student who wants to manage my finances                    | view all FRs                                    | quickly glance at all my past spendings                                               |","lastModifiedDate":"2021-03-17"},{"lineNumber":293,"author":{"gitId":"jxrrelo"},"content":"| university student who has difficulties in managing expenses          | set a monthly budget                            | keep track of my expenses and reduce chances of overspending                          |","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"jxrrelo"},"content":"| university student who has difficulties in managing expenses          | view my monthly budget                          | quickly glance at budget set for the given month                                      |","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"jxrrelo"},"content":"| university student who wants to know how much money I can still spend | view my remaining budget for a particular month | be aware of my spending and decide whether I need to be more prudent with my spending |","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":297,"author":{"gitId":"jxrrelo"},"content":"v1.3","lastModifiedDate":"2021-03-17"},{"lineNumber":298,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"natosy"},"content":"| As a …​                                                                    | I want to …​                                        | So that I can…​                                                                       |","lastModifiedDate":"2021-02-25"},{"lineNumber":300,"author":{"gitId":"yuheem"},"content":"| -------------------------------------------------------------------------- | --------------------------------------------------- | ------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"natosy"},"content":"| university student who wants to manage my finances                         | add an FR                                           | track my spending history easily                                                      |","lastModifiedDate":"2021-02-25"},{"lineNumber":302,"author":{"gitId":"jxrrelo"},"content":"| university student who wants to manage my finances                         | delete an FR                                        | recover from mistakes from adding wrong entries of my spending history                |","lastModifiedDate":"2021-03-17"},{"lineNumber":303,"author":{"gitId":"natosy"},"content":"| university student who wants to manage my finances                         | view all FRs                                        | quickly glance at all my past spendings                                               |","lastModifiedDate":"2021-02-25"},{"lineNumber":304,"author":{"gitId":"natosy"},"content":"| university student who wants to manage my finances                         | view all FRs in a particular month                  | quickly glance at my spending history of a specific month                             |","lastModifiedDate":"2021-02-25"},{"lineNumber":305,"author":{"gitId":"jxrrelo"},"content":"| university student who wants to manage my finances                         | filter FRs based on category                        | quickly glance at my spending history of a specific category                          |","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"jxrrelo"},"content":"| university student who wants to manage my finances                         | reset filters on FRs                                | quickly glance at the original list of financial records                              |","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"natosy"},"content":"| university student who has difficulties in managing expenses               | set a monthly budget                                | keep track of my expenses and reduce chances of overspending                          |","lastModifiedDate":"2021-02-25"},{"lineNumber":308,"author":{"gitId":"natosy"},"content":"| university student who has difficulties in managing expenses               | view my monthly budget                              | quickly glance at budget set for the given month                                      |","lastModifiedDate":"2021-02-25"},{"lineNumber":309,"author":{"gitId":"natosy"},"content":"| university student who wants to know how much money I can still spend      | view my remaining budget for a particular month     | be aware of my spending and decide whether I need to be more prudent with my spending |","lastModifiedDate":"2021-02-25"},{"lineNumber":310,"author":{"gitId":"natosy"},"content":"| university student who wants to visualise my data in a more concise manner | view the past 6 months\u0027 expenditure and budgets     | quickly glance and gain insight from my spending patterns                             |","lastModifiedDate":"2021-03-23"},{"lineNumber":311,"author":{"gitId":"natosy"},"content":"| university student who wants to visualise my data in a more concise manner | view the total expenses of the current visible list | quickly glance and gain insight from my spending patterns                             |","lastModifiedDate":"2021-03-23"},{"lineNumber":312,"author":{"gitId":"natosy"},"content":"| university student who wants to visualise my data in a more concise manner | view the top 5 categories that I spend the most on  | quickly glance and gain insight from my spending patterns                             |","lastModifiedDate":"2021-03-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"yuheem"},"content":"_{More to be added}_","lastModifiedDate":"2021-03-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"jxrrelo"},"content":"(For all use cases below, the **System** is the `BudgetTracker` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-25"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"jxrrelo"},"content":"**Use case: Add a Financial Record**","lastModifiedDate":"2021-02-25"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"jxrrelo"},"content":"1.  Actor requests to add a financial record","lastModifiedDate":"2021-02-25"},{"lineNumber":325,"author":{"gitId":"jxrrelo"},"content":"2.  Actor inputs description and amount","lastModifiedDate":"2021-02-25"},{"lineNumber":326,"author":{"gitId":"jxrrelo"},"content":"3.  System shows the most recently added financial record","lastModifiedDate":"2021-02-25"},{"lineNumber":327,"author":{"gitId":"jxrrelo"},"content":"4.  Actor acknowledges the addition","lastModifiedDate":"2021-02-25"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"jxrrelo"},"content":"**Use case: Delete a Financial Record**","lastModifiedDate":"2021-02-25"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-25"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":335,"author":{"gitId":"jxrrelo"},"content":"1.  Actor requests to delete a financial record","lastModifiedDate":"2021-02-25"},{"lineNumber":336,"author":{"gitId":"jxrrelo"},"content":"2.  Actor inputs desired index of financial record to be deleted","lastModifiedDate":"2021-02-25"},{"lineNumber":337,"author":{"gitId":"jxrrelo"},"content":"3.  System shows the most recently deleted financial record","lastModifiedDate":"2021-02-25"},{"lineNumber":338,"author":{"gitId":"jxrrelo"},"content":"4.  Actor acknowledges the deletion","lastModifiedDate":"2021-02-25"},{"lineNumber":339,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":340,"author":{"gitId":"jxrrelo"},"content":"    Use case ends","lastModifiedDate":"2021-02-25"},{"lineNumber":341,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":342,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"yuheem"},"content":"- 2a. The given index is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":345,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":346,"author":{"gitId":"yuheem"},"content":"  - 2a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":347,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":348,"author":{"gitId":"jxrrelo"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-25"},{"lineNumber":349,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":350,"author":{"gitId":"jxrrelo"},"content":"**Use case: View a Financial Record**","lastModifiedDate":"2021-02-25"},{"lineNumber":351,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":352,"author":{"gitId":"jxrrelo"},"content":"1.  Actor requests to view a financial record","lastModifiedDate":"2021-02-25"},{"lineNumber":353,"author":{"gitId":"jxrrelo"},"content":"2.  Actor inputs desired index of financial record to view","lastModifiedDate":"2021-02-25"},{"lineNumber":354,"author":{"gitId":"jxrrelo"},"content":"3.  System shows the financial record with corresponding index","lastModifiedDate":"2021-02-25"},{"lineNumber":355,"author":{"gitId":"jxrrelo"},"content":"4.  Actor completes viewing the desired financial record","lastModifiedDate":"2021-02-25"},{"lineNumber":356,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":357,"author":{"gitId":"jxrrelo"},"content":"    Use case ends","lastModifiedDate":"2021-02-25"},{"lineNumber":358,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":359,"author":{"gitId":"jxrrelo"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":360,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":361,"author":{"gitId":"yuheem"},"content":"- 2a. The given index is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":362,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":363,"author":{"gitId":"yuheem"},"content":"  - 2a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":364,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":365,"author":{"gitId":"jxrrelo"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-25"},{"lineNumber":366,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":367,"author":{"gitId":"natosy"},"content":"**Use case: View the current month\u0027s Financial Records**","lastModifiedDate":"2021-03-23"},{"lineNumber":368,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":369,"author":{"gitId":"natosy"},"content":"1.  Actor requests to view the current month\u0027s financial records","lastModifiedDate":"2021-03-23"},{"lineNumber":370,"author":{"gitId":"jxrrelo"},"content":"2.  System shows the current month\u0027s financial records","lastModifiedDate":"2021-02-25"},{"lineNumber":371,"author":{"gitId":"jxrrelo"},"content":"3.  Actor completes viewing the current month\u0027s financial record","lastModifiedDate":"2021-02-25"},{"lineNumber":372,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":373,"author":{"gitId":"jxrrelo"},"content":"    Use case ends","lastModifiedDate":"2021-02-25"},{"lineNumber":374,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":375,"author":{"gitId":"jxrrelo"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":376,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":377,"author":{"gitId":"yuheem"},"content":"- 1a. The current month does not contain any financial records.","lastModifiedDate":"2021-03-23"},{"lineNumber":378,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":379,"author":{"gitId":"yuheem"},"content":"  - 1a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"jxrrelo"},"content":"**Use case: Set a budget**","lastModifiedDate":"2021-02-25"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"jxrrelo"},"content":"1.  Actor requests to set budget","lastModifiedDate":"2021-02-25"},{"lineNumber":386,"author":{"gitId":"jxrrelo"},"content":"2.  Actor inputs desired budget amount","lastModifiedDate":"2021-02-25"},{"lineNumber":387,"author":{"gitId":"jxrrelo"},"content":"3.  System shows newly set monthly budget","lastModifiedDate":"2021-02-25"},{"lineNumber":388,"author":{"gitId":"jxrrelo"},"content":"4.  Actor acknowledges newly set monthly budget","lastModifiedDate":"2021-02-25"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"jxrrelo"},"content":"    Use case ends","lastModifiedDate":"2021-02-25"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":394,"author":{"gitId":"yuheem"},"content":"- 1a. The given budget amount is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":395,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":396,"author":{"gitId":"yuheem"},"content":"  - 1a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":397,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":398,"author":{"gitId":"jxrrelo"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-02-25"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":400,"author":{"gitId":"jxrrelo"},"content":"**Use case: View monthly budget**","lastModifiedDate":"2021-02-25"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":402,"author":{"gitId":"jxrrelo"},"content":"1.  Actor requests to view monthly budget","lastModifiedDate":"2021-02-25"},{"lineNumber":403,"author":{"gitId":"jxrrelo"},"content":"2.  System shows monthly budget","lastModifiedDate":"2021-02-25"},{"lineNumber":404,"author":{"gitId":"jxrrelo"},"content":"3.  Actor completes viewing monthly budget","lastModifiedDate":"2021-02-25"},{"lineNumber":405,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":406,"author":{"gitId":"jxrrelo"},"content":"    Use case ends","lastModifiedDate":"2021-02-25"},{"lineNumber":407,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":408,"author":{"gitId":"jxrrelo"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":410,"author":{"gitId":"yuheem"},"content":"- 1a. Monthly budget is not set.","lastModifiedDate":"2021-03-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":412,"author":{"gitId":"yuheem"},"content":"  - 1a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":413,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":414,"author":{"gitId":"jxrrelo"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":415,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":416,"author":{"gitId":"jxrrelo"},"content":"**Use case: View remaining budget for the current month**","lastModifiedDate":"2021-02-25"},{"lineNumber":417,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":418,"author":{"gitId":"jxrrelo"},"content":"1.  Actor requests to view remaining budget for the current month","lastModifiedDate":"2021-02-25"},{"lineNumber":419,"author":{"gitId":"jxrrelo"},"content":"2.  System shows the remaining budget for the current month","lastModifiedDate":"2021-02-25"},{"lineNumber":420,"author":{"gitId":"jxrrelo"},"content":"3.  Actor completes viewing the remaining budget for the current month","lastModifiedDate":"2021-02-25"},{"lineNumber":421,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":422,"author":{"gitId":"jxrrelo"},"content":"    Use case ends","lastModifiedDate":"2021-02-25"},{"lineNumber":423,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":424,"author":{"gitId":"jxrrelo"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":425,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":426,"author":{"gitId":"yuheem"},"content":"- 1a. Monthly budget is not set.","lastModifiedDate":"2021-03-23"},{"lineNumber":427,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":428,"author":{"gitId":"yuheem"},"content":"  - 1a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":429,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":430,"author":{"gitId":"jxrrelo"},"content":"    Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"jxrrelo"},"content":"**Use case: Filter financial records of the current month by category**","lastModifiedDate":"2021-03-24"},{"lineNumber":433,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":434,"author":{"gitId":"jxrrelo"},"content":"1.  Actor requests to filter by `Food` category","lastModifiedDate":"2021-03-24"},{"lineNumber":435,"author":{"gitId":"jxrrelo"},"content":"2.  System shows all financial records with `Food` tagged as category","lastModifiedDate":"2021-03-24"},{"lineNumber":436,"author":{"gitId":"jxrrelo"},"content":"3.  Actor completes viewing the filtered list for the current month","lastModifiedDate":"2021-03-24"},{"lineNumber":437,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":438,"author":{"gitId":"jxrrelo"},"content":"    Use case ends","lastModifiedDate":"2021-03-24"},{"lineNumber":439,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":440,"author":{"gitId":"jxrrelo"},"content":"**Extensions**","lastModifiedDate":"2021-03-24"},{"lineNumber":441,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":442,"author":{"gitId":"yuheem"},"content":"- 1a. No financial records with `Food` category found","lastModifiedDate":"2021-03-24"},{"lineNumber":443,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":444,"author":{"gitId":"yuheem"},"content":"  - 1a1. System shows an error message.","lastModifiedDate":"2021-03-24"},{"lineNumber":445,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":446,"author":{"gitId":"jxrrelo"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":447,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":448,"author":{"gitId":"yuheem"},"content":"- 2a. Actor wishes to view original list of financial records without filter","lastModifiedDate":"2021-03-24"},{"lineNumber":449,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":450,"author":{"gitId":"yuheem"},"content":"  - 2a1. Actor requests to reset filter","lastModifiedDate":"2021-03-24"},{"lineNumber":451,"author":{"gitId":"yuheem"},"content":"  - 2a2. System shows original list of financial records for the current month","lastModifiedDate":"2021-03-24"},{"lineNumber":452,"author":{"gitId":"yuheem"},"content":"  - 2a3. Actor completes viewing the list of financial records","lastModifiedDate":"2021-03-24"},{"lineNumber":453,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":454,"author":{"gitId":"jxrrelo"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"deyixtan"},"content":"2.  Should work without internet connection.","lastModifiedDate":"2021-03-02"},{"lineNumber":460,"author":{"gitId":"deyixtan"},"content":"3.  Should be _cross-platform_.","lastModifiedDate":"2021-03-02"},{"lineNumber":461,"author":{"gitId":"deyixtan"},"content":"4.  Should be able to hold up to 1000 financial records without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-23"},{"lineNumber":462,"author":{"gitId":"deyixtan"},"content":"5.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"yuheem"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-03-23"},{"lineNumber":467,"author":{"gitId":"yuheem"},"content":"- **Cross-platform**: Able to transfer the software and its data from one OS to another without creating any problem","lastModifiedDate":"2021-03-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":469,"author":{"gitId":"yuheem"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"natosy":27,"yuheem":71,"-":209,"eksinyue":7,"deyixtan":9,"jxrrelo":180}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"   1. Run the `seedu.budgetbaby.Main` and try a few commands.","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":54,"eksinyue":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"   e.g. `seedu.budgetbaby.commons.StringUtilTest`","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"   e.g. `seedu.budgetbaby.abstorage.StorageManagerTest`","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"   e.g. `seedu.budgetbaby.ablogic.LogicManagerTest`","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"-":33,"eksinyue":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"layout: page ","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"# BudgetBaby User Guide :baby: :money_with_wings:","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"**BudgetBaby** is a **budget and expenses tracking desktop app for University students and/or those who are looking to","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"better manage their finances**. It is **optimized for use via a Command Line Interface** (CLI) so that entering and","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"editing financial records and budgets can be done faster by typing in commands while still having the benefits of a","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"Graphical User Interface (GUI).","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"- [Features](#features)","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"    - [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"    - [Adding a financial record : `add-fr`](#adding-a-financial-record--add-fr)","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"    - [Deleting a financial record : `delete-fr`](#deleting-a-financial-record--delete-fr)","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"    - [Setting monthly budget : `set-bg`](#setting-monthly-budget--set-bg)","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"    - [Viewing a specific month : `view-month`](#viewing-a-specific-month--view-month)","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"    - [Finding financial records : `find-fr`](#finding-financial-records--find-fr)","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"    - [Resetting filters on financial records : `reset-filter`](#resetting-filters-on-financial-records--reset-filter)","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"    - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"    - [Viewing top 5 categories spent for the current month](#viewing-top-5-categories-spent-for-the-current-month)","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"    - [Viewing budget for the current month](#viewing-budget-for-the-current-month)","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"    - [Checking remaining budget for the current month](#checking-remaining-budget-for-the-current-month)","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"    - [Archiving data files](#archiving-data-files)","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"- [Credits](#credits)","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"yuheem"},"content":"1. Ensure that you have Java `11` or above installed on your Computer.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yuheem"},"content":"2. You can download the latest `budgetbaby.jar` [here](https://github.com/AY2021S2-CS2103T-W14-2/tp/releases).","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yuheem"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for the BudgetBaby application.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"natosy"},"content":"4. Double-click the file to start the app. You should see a GUI similar to the one below appear in a few seconds. Note","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"natosy"},"content":"   that the app contains some sample data for you when it starts that may differ from what is shown below.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"   \u003cimg src\u003d\"images/Ui.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"natosy"},"content":"5. You can type a command in the command box and press the enter key on your keyboard to execute it. For example, typing","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"natosy"},"content":"   the **`help`** command and pressing the enter key will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"    - **`add-fr`** `d/Lunch a/10` : Add a financial record for `lunch` which cost `10` dollars.","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"    - **`delete-fr`** `3` : Deletes the 3rd financial record shown in the current list.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"    - **`set-bg`** `500` : Sets the current month\u0027s budget at `500` dollars.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"    - **`view-month`** `01-2021` : Displays the financial records and budget of the month `January 2021`.","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    - **`exit`** : Exits the app.","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"yuheem"},"content":"6. You may refer to the [features](#features) below for details of each command.","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"yuheem"},"content":"- Words in `UPPER_CASE` are arguments which must be supplied by you when you type in a command.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"natosy"},"content":"  For example, in the command `add-fr d/FR_DESCRIPTION a/FR_AMOUNT`, `FR_DESCRIPTION` and `FR_AMOUNT` are arguments","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"natosy"},"content":"  which must be supplied by you. An example of supplied arguments look like this `add-fr n/Lunch a/10`.","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"yuheem"},"content":"- You may choose to omit items in square brackets as they are optional.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"natosy"},"content":"  For example, with the command `add-fr d/FR_DESCRIPTION a/FR_AMOUNT [c/FR_CATEGORY]…`, you may omit the category and","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"natosy"},"content":"  use `add-fr n/Lunch a/10 t/food` or `add-fr n/Lunch a/10`.","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"yuheem"},"content":"- For items suffixed with `…`​ you may repeat it multiple times within the command.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"natosy"},"content":"  For example, with the command `add-fr d/FR_DESCRIPTION a/FR_AMOUNT [c/FR_CATEGORY]…`, you may repeat `[c/FR_CATEGORY]…​` multiple","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"natosy"},"content":"  times with `c/food`, `c/transportation`, `c/shopping` etc.","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"yuheem"},"content":"- You may key in arguments in any order.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yuheem"},"content":"  For example, you can use `d/FR_DESCRIPTION a/FR_AMOUNT` or `a/FR_AMOUNT d/FR_DESCRIPTION` as both are acceptable.","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"natosy"},"content":"- If an argument is expected only once in the command, but you specify multiple arguments, only the last occurrence of","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"natosy"},"content":"  the argument is used.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"yuheem"},"content":"  For example, if you specify `d/Lunch d/Dinner`, only `d/Dinner` will be used.","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":89,"author":{"gitId":"natosy"},"content":"- If you key in extraneous arguments for commands that do not take in arguments (such as `help`, `view-bg` and `exit`),","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"natosy"},"content":"  they will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yuheem"},"content":"  For example, if you specify `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jxrrelo"},"content":"[coming in v1.3]","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"natosy"},"content":"If this is your first time opening BudgetBaby, or if you have forgotten what commands you can use, you may utilise the `help` ","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"natosy"},"content":"command to access the help page for a detailed guide on using the application.","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"\u003cimg src\u003d\"images/helpMessage.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"### Adding a financial record : `add-fr`","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"natosy"},"content":"If you just spent some money and want to record it, you may use the `add-fr` command to add this expenditure as a financial record in BudgetBaby.","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"\u003cimg src\u003d\"images/features/add-fr.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"natosy"},"content":"Format: `add-fr d/FR_DESCRIPTION a/FR_AMOUNT`","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"natosy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"natosy"},"content":"**:bulb: Tips:** \u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"natosy"},"content":"- You must replace `FR_DESCRIPTION` with the description of your financial record.","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"natosy"},"content":"- You must replace `FR_AMOUNT` with a **positive number** containing up to **two decimal places**.","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"- `add-fr d/Lunch a/10`","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"- `add-fr d/Dinner a/13.50`","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"### Deleting a financial record : `delete-fr`","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"natosy"},"content":"If you mistyped a financial record or added a financial record incorrectly, you may use the `delete-fr` command to delete a financial record from BudgetBaby.","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"deyixtan"},"content":"\u003cimg src\u003d\"images/features/delete-fr.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"Format: `delete-fr FR_INDEX`","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"natosy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"natosy"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"natosy"},"content":"- You must replace `FR_INDEX` with the index of the finacial record you want to delete.","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"natosy"},"content":"- `FR_INDEX` refers to the index number shown in the displayed financial record list.","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"natosy"},"content":"- `FR_INDEX` must be a **positive integer** (e.g. 1, 2, 3, …​)","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"natosy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"eksinyue"},"content":"- `list 02-2021` followed by `delete-fr 10` deletes the 10th financial record of Feb 2021","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"jxrrelo"},"content":"### Setting monthly budget : `set-bg`","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"natosy"},"content":"If you would like to change your budget to something different from what it currently is in BudgetBaby, you may use the `set-bg` command to set the budget for the current month and the following twelve months.","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"deyixtan"},"content":"\u003cimg src\u003d\"images/features/set-bg.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"eksinyue"},"content":"Format: `set-bg BG_AMOUNT`","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"natosy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"natosy"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"natosy"},"content":"- You must replace `BG_AMOUNT` with a **positive number** containing up to **two decimal places**.","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"natosy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"eksinyue"},"content":"- `set-bg 100`","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"eksinyue"},"content":"- `set-bg 1300.50`","lastModifiedDate":"2021-03-02"},{"lineNumber":168,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"jxrrelo"},"content":"### Viewing a specific month : `view-month`","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"jxrrelo"},"content":"[coming in v1.3 subject to changes]","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"natosy"},"content":"If you would like to take a look at how you managed your budget for a pericular month, you may use the `view-month` command to display the data associated with a specific month.","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"natosy"},"content":"Data associated with a month includes:","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"natosy"},"content":"- The budget set by you for that month","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"natosy"},"content":"- Your remaining budget for that month","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"natosy"},"content":"- Your list of financial records for that month","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"deyixtan"},"content":"\u003cimg src\u003d\"images/features/view-month.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"jxrrelo"},"content":"Format: `view-month MM-YYYY`","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"natosy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":187,"author":{"gitId":"natosy"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"natosy"},"content":"- The month you input must follow the format `MM-YYYY` (e.g. 09-2020)","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"natosy"},"content":"- `MM` is the numeric value of the month and `YYYY` is the numeric value of the year","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"natosy"},"content":"- You must use a month number with 2 digits, and a year number with 4 digits","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"yuheem"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":195,"author":{"gitId":"deyixtan"},"content":"- `view-month 01-2021`","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"jxrrelo"},"content":"### Finding financial records : `find-fr`","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"natosy"},"content":"If you would like to find financial records which fall within a particular category, you may use the `find-fr` command to filter the list of financial records based on that specified category.","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"deyixtan"},"content":"\u003cimg src\u003d\"images/features/find-fr.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"jxrrelo"},"content":"Format: `find-fr d/FR_DESCRIPTION a/FR_AMOUNT c/FR_CATEGORY`","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"jxrrelo"},"content":"**:bulb: Tips:**","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"jxrrelo"},"content":"- `d/FR_DESCRIPTION`, `a/FR_AMOUNT` and `c/FR_CATEGORY` are optional fields, but the command expects at least 1 field present","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"jxrrelo"},"content":"- `c/FR_CATEGORY` accepts multiple categories (i.e. `c/Food c/Picnic c/Family`)","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"jxrrelo"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"jxrrelo"},"content":"- `find-fr d/Lunch a/10 c/Food c/Family`","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"jxrrelo"},"content":"### Resetting filters on financial records : `reset-filter`","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"natosy"},"content":"If you currently have a filter set, such as a particular month or category, and you would like to go back to the original view of the application, you may use the `reset-filter` command to reset all filters on financial records.","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"deyixtan"},"content":"\u003cimg src\u003d\"images/features/reset-filter.png\" width\u003d\"600px\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"jxrrelo"},"content":"Format: `reset-filter`","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"jxrrelo"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"jxrrelo"},"content":"- `reset-filter`","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"natosy"},"content":"After you are done with editing details in BudgetBaby, you may use the `exit` command to exit the program.","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"natosy"},"content":"### Viewing top 5 categories spent for the current month","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"natosy"},"content":"The UI displays the top 5 categories that were spent on a particular month.","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"natosy"},"content":"### Viewing budget for the current month","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"deyixtan"},"content":"The UI displays the current monthly budget that has been set automatically.","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"natosy"},"content":"### Checking remaining budget for the current month","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":242,"author":{"gitId":"deyixtan"},"content":"The UI displays and updates the remaining budget for the current month automatically.","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"natosy"},"content":"You do not have to worry about saving your data manually. It will be saved to your hard disk automatically after any you","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"natosy"},"content":"enter any command that updates data.","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":251,"author":{"gitId":"natosy"},"content":"Data is saved as a JSON file to the following location `[JAR file location]/data/budgetbaby.json`. If you are an","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"natosy"},"content":"advanced user, feel free to update data directly by editing that file.","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":254,"author":{"gitId":"eksinyue"},"content":"**:exclamation: Caution:**","lastModifiedDate":"2021-03-02"},{"lineNumber":255,"author":{"gitId":"natosy"},"content":"If your changes to the data file makes invalidates its format, BudgetBaby will discard all your data and start with an","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"natosy"},"content":"empty data file at the next run.","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":258,"author":{"gitId":"jxrrelo"},"content":"### Archiving data files","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"jxrrelo"},"content":"[coming in v2.0]","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"eksinyue"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"yuheem"},"content":"**A**:","lastModifiedDate":"2021-03-28"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":271,"author":{"gitId":"yuheem"},"content":"1. You can follow the [quick start](#quick-start) guide to install the app to your other computer.","lastModifiedDate":"2021-03-28"},{"lineNumber":272,"author":{"gitId":"natosy"},"content":"2. On your current computer send the data file located at `[JAR file location]/data/budgetbaby.json` to your other","lastModifiedDate":"2021-03-28"},{"lineNumber":273,"author":{"gitId":"natosy"},"content":"   computer.","lastModifiedDate":"2021-03-28"},{"lineNumber":274,"author":{"gitId":"yuheem"},"content":"3. Overwrite the empty data file on your other computer with the data file you sent over.","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"eksinyue"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"eksinyue"},"content":"| Action                              | Format, Examples                                                            |","lastModifiedDate":"2021-03-02"},{"lineNumber":281,"author":{"gitId":"eksinyue"},"content":"| ----------------------------------- | -----------------------------------------------------------------------     |","lastModifiedDate":"2021-03-02"},{"lineNumber":282,"author":{"gitId":"eksinyue"},"content":"| **Add a Financial Record**          | `add-fr d/FR_DESCRIPTION a/FR_AMOUNT​` \u003cbr\u003e e.g., `add-fr d/Lunch a/10`  |","lastModifiedDate":"2021-03-02"},{"lineNumber":283,"author":{"gitId":"eksinyue"},"content":"| **Delete a Financial Record**       | `delete-fr FR_INDEX` \u003cbr\u003e e.g., `delete-fr 10`                              |","lastModifiedDate":"2021-03-02"},{"lineNumber":284,"author":{"gitId":"natosy"},"content":"| **Find a Financial Record**         | `find-fr c/FR_CATEGORY` \u003cbr\u003e e.g., `find-fr c/Food`                         |","lastModifiedDate":"2021-03-28"},{"lineNumber":285,"author":{"gitId":"eksinyue"},"content":"| **Set Monthly Budget**              | `set-bg BG_AMOUNT​` \u003cbr\u003e e.g., `set-bg 100`                              |","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"natosy"},"content":"| **View a Particular Month**         | `view MM-YYYY` \u003cbr\u003e e.g., `view 01-2021`                                    |","lastModifiedDate":"2021-03-28"},{"lineNumber":287,"author":{"gitId":"natosy"},"content":"| **Reset Filter**                    | `reset-filter`                                                              |","lastModifiedDate":"2021-03-28"},{"lineNumber":288,"author":{"gitId":"eksinyue"},"content":"| **Help**                            | `help`                                                                      |","lastModifiedDate":"2021-03-02"},{"lineNumber":289,"author":{"gitId":"eksinyue"},"content":"| **Exit**                            | `exit`                                                                      |","lastModifiedDate":"2021-03-02"},{"lineNumber":290,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":291,"author":{"gitId":"eksinyue"},"content":"## Credits","lastModifiedDate":"2021-03-02"},{"lineNumber":292,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":293,"author":{"gitId":"natosy"},"content":"This user guide format has been adapted","lastModifiedDate":"2021-03-28"},{"lineNumber":294,"author":{"gitId":"natosy"},"content":"from [AddressBook Level 3 User Guide](https://github.com/nus-cs2103-AY1920S2/addressbook-level3/blob/master/docs/UserGuide.adoc)","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"natosy":73,"yuheem":18,"-":104,"eksinyue":36,"jxrrelo":50,"deyixtan":13}},{"path":"docs/diagrams/AddFinancialRecordSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yuheem"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yuheem"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"yuheem"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"yuheem"},"content":"participant \":BudgetBabyLogicManager\" as BudgetBabyLogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"participant \":BudgetBabyParser\" as BudgetBabyParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"yuheem"},"content":"participant \":AddFrCommandParser\" as AddFrCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"yuheem"},"content":"participant \"a:AddFrCommand\" as AddFrCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"yuheem"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"yuheem"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"yuheem"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"yuheem"},"content":"[-\u003e BudgetBabyLogicManager : execute(\"add-fr d/Lunch a/10\")","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"yuheem"},"content":"activate BudgetBabyLogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogicManager -\u003e BudgetBabyParser : parseCommand(\"add-fr d/Lunch a/10\")","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"yuheem"},"content":"activate BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"yuheem"},"content":"create AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"yuheem"},"content":"BudgetBabyParser -\u003e AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"yuheem"},"content":"activate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"yuheem"},"content":"AddFrCommandParser --\u003e BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"yuheem"},"content":"deactivate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"yuheem"},"content":"BudgetBabyParser -\u003e AddFrCommandParser : parse(\"d/Lunch a/10\")","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"yuheem"},"content":"activate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"yuheem"},"content":"create AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"yuheem"},"content":"AddFrCommandParser -\u003e AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"yuheem"},"content":"activate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"yuheem"},"content":"AddFrCommand --\u003e AddFrCommandParser : a","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"yuheem"},"content":"deactivate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"yuheem"},"content":"AddFrCommandParser --\u003e BudgetBabyParser : a","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"yuheem"},"content":"deactivate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"yuheem"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"yuheem"},"content":"AddFrCommandParser -[hidden]-\u003e BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"yuheem"},"content":"destroy AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"yuheem"},"content":"BudgetBabyParser --\u003e BudgetBabyLogicManager : a","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"yuheem"},"content":"deactivate BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogicManager -\u003e AddFrCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"yuheem"},"content":"activate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"yuheem"},"content":"AddFrCommand -\u003e Model : addFinancialRecord(toAdd)","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"yuheem"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"yuheem"},"content":"Model --\u003e AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"yuheem"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"yuheem"},"content":"create CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"yuheem"},"content":"AddFrCommand -\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"yuheem"},"content":"activate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"yuheem"},"content":"CommandResult --\u003e AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"yuheem"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"yuheem"},"content":"AddFrCommand --\u003e BudgetBabyLogicManager : result","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"yuheem"},"content":"deactivate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"yuheem"},"content":"[\u003c--BudgetBabyLogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"yuheem"},"content":"deactivate BudgetBabyLogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"yuheem"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"yuheem":69}},{"path":"docs/diagrams/AddFrSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"box BudgetBabyLogic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"participant \":BudgetBabyLogicManager\" as BudgetBabyLogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"participant \":BudgetBabyParser\" as BudgetBabyParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"participant \":AddFrCommandParser\" as AddFrCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"participant \"c:AddFrCommand\" as AddFrCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"box BudgetBabyModel MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"participant \":BudgetBabyModel\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"[-\u003e BudgetBabyLogicManager : execute(\"add-fr d/desc a/amount c/category\")","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"activate BudgetBabyLogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"BudgetBabyLogicManager -\u003e BudgetBabyParser : parseCommand(\"add-fr d/desc a/amount c/category\")","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"activate BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":"create AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"BudgetBabyParser -\u003e AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"natosy"},"content":"activate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"natosy"},"content":"AddFrCommandParser --\u003e BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"natosy"},"content":"deactivate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"natosy"},"content":"BudgetBabyParser -\u003e AddFrCommandParser : parse(\"d/desc a/amount c/category\")","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"natosy"},"content":"activate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"natosy"},"content":"create AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"natosy"},"content":"AddFrCommandParser -\u003e AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"natosy"},"content":"activate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"natosy"},"content":"AddFrCommand --\u003e AddFrCommandParser : c","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"natosy"},"content":"deactivate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"natosy"},"content":"AddFrCommandParser --\u003e BudgetBabyParser : c","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"natosy"},"content":"deactivate AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"natosy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"natosy"},"content":"AddFrCommandParser -[hidden]-\u003e BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"natosy"},"content":"destroy AddFrCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"natosy"},"content":"BudgetBabyParser --\u003e BudgetBabyLogicManager : c","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"natosy"},"content":"deactivate BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"natosy"},"content":"BudgetBabyLogicManager -\u003e AddFrCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"natosy"},"content":"activate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"natosy"},"content":"AddFrCommand -\u003e Model : addFinancialRecord(fr)","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"natosy"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"natosy"},"content":"Model --\u003e AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"natosy"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"natosy"},"content":"create CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"natosy"},"content":"AddFrCommand -\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"natosy"},"content":"activate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"natosy"},"content":"CommandResult --\u003e AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"natosy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"natosy"},"content":"AddFrCommand --\u003e BudgetBabyLogicManager : result","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"natosy"},"content":"deactivate AddFrCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"natosy"},"content":"[\u003c--BudgetBabyLogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"natosy"},"content":"deactivate BudgetBabyLogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"natosy"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"natosy":69}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"    Class BudgetBabyLogic LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"    Class BudgetBabyStorage STORAGE_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"    Class BudgetBabyModel MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"UI -[#green]\u003e BudgetBabyLogic","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"natosy"},"content":"UI -right[#green]-\u003e BudgetBabyModel","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":"BudgetBabyLogic -[#blue]-\u003e BudgetBabyStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"BudgetBabyLogic -down[#blue]-\u003e BudgetBabyModel","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":"Main -[#grey]-\u003e BudgetBabyLogic","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"natosy"},"content":"Main -[#grey]-\u003e BudgetBabyStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"natosy"},"content":"Main -up[#grey]-\u003e BudgetBabyModel","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"natosy"},"content":"BudgetBabyStorage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"natosy":11,"-":20}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"Participant \":BudgetBabyLogic\" as logic LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"Participant \":BudgetBabyModel\" as model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"Participant \":BudgetBabyStorage\" as storage STORAGE_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"user -[USER_COLOR]\u003e ui : \"add-fr d/Lunch a/10\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"add-fr d/Lunch a/10\")","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"logic -[LOGIC_COLOR]\u003e model : addFinancialRecord(fr)","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveBudgetTracker(budgetTracker)","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"natosy":7,"-":31}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"@startuml","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"start","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":":User executes find-fr","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"        command;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"if () then ([valid command])","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"    :System attempts to find","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"        matching records;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"if () then ([found matching record(s)])","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"    :Update financial","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"        records list;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"    :Display query results;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"    :Output successfully","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"       filtered message;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"else ([else])","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"    :Output no matching","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"      records message;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"endif","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"else ([else])","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"    :Output invalid command","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"             format error;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"endif","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"stop","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"@enduml","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"jxrrelo":27}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"@startuml","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"!include style.puml","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"box BudgetBabyCommandParser LOGIC_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"participant \":BudgetBabyCommand\" as BudgetBabyCommand LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"participant \":BudgetBabyParser\" as BudgetBabyParser LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"participant \":FindFrCommandParser\" as FindFrCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"participant \"c:FindFrCommand\" as FindFrCommand LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"box BudgetBabyModel MODEL_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"participant \":BudgetBabyModel\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"[-\u003e BudgetBabyCommand : execute(model)","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"activate BudgetBabyCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyCommand -\u003e BudgetBabyParser : parseCommand(\"find-fr d/Lunch a/10 c/Food\")","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"activate BudgetBabyParser","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"create FindFrCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyParser -\u003e FindFrCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"activate FindFrCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"FindFrCommandParser --\u003e BudgetBabyParser","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"deactivate FindFrCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyParser -\u003e FindFrCommandParser : parse(\"find-fr d/Lunch a/10 c/Food\")","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"activate FindFrCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"create FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"FindFrCommandParser -\u003e FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"activate FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"FindFrCommand --\u003e FindFrCommandParser : c","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"deactivate FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"FindFrCommandParser --\u003e BudgetBabyParser : c","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"deactivate FindFrCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"FindFrCommandParser -[hidden]-\u003e BudgetBabyParser","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"destroy FindFrCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyParser --\u003e BudgetBabyCommand : c","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"deactivate BudgetBabyParser","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyCommand -\u003e FindFrCommand : execute()","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"activate FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"FindFrCommand -\u003e Model : findFinancialRecord(description, amount, category)","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"activate Model","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"Model --\u003e FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"deactivate Model","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":"create CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"FindFrCommand -\u003e CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"activate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"CommandResult --\u003e FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"jxrrelo"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"jxrrelo"},"content":"FindFrCommand --\u003e BudgetBabyCommand : result","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"jxrrelo"},"content":"deactivate FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"jxrrelo"},"content":"[\u003c--BudgetBabyCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"jxrrelo"},"content":"deactivate BudgetBabyCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"jxrrelo"},"content":"@enduml","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"jxrrelo":69}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yuheem"},"content":"@startuml BudgetBabyLogicClassDiagram","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":"Interface BudgetBabyCommandParser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":"Class BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"yuheem"},"content":"Class YearMonthParser","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"yuheem"},"content":"Class \"{abstract}\\nBudgetBabyCommand\" as BudgetBabyCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"yuheem"},"content":"Interface BudgetBabyLogic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"yuheem"},"content":"Class BudgetBabyLogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"yuheem"},"content":"HiddenOutside ..\u003e BudgetBabyLogic","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogicManager .up.|\u003e BudgetBabyLogic","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogicManager --\u003e\"1\" BudgetBabyParser","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"yuheem"},"content":"BudgetBabyParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"yuheem"},"content":"XYZCommandParser ..|\u003e BudgetBabyCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"yuheem"},"content":"ParserUtil ..\u003e YearMonthParser","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"yuheem"},"content":"XYZCommand -up-|\u003e BudgetBabyCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogicManager .left.\u003e BudgetBabyCommand : executes \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogicManager --\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"yuheem"},"content":"BudgetBabyCommand .right.\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"yuheem"},"content":"note right of XYZCommand: XYZCommand \u003d AddFrCommand, \\nDeleteFrCommand, etc","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogic ..\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"yuheem"},"content":"BudgetBabyLogicManager .down.\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"yuheem"},"content":"BudgetBabyCommand .up.\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"yuheem"},"content":"CommandResult -[hidden]-\u003e BudgetBabyCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"yuheem":22,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"Interface ReadOnlyBudgetTracker \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"Interface BudgetBabyModel \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"Class BudgetTracker","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"Class ReadOnlyBudgetTracker","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"Class BudgetBabyModel","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"Class BudgetBabyModelManager","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"Package Month {","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"Class Month","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"Class UniqueMonthList","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"Package Record {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"Class FinancialRecord","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"Class Description","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"Class Amount","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"Class Category","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"Class FinancialRecordList","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"Package Budget {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"Class Budget","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"BudgetTracker .up.|\u003e ReadOnlyBudgetTracker","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"BudgetBabyModelManager .up.|\u003e BudgetBabyModel","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"BudgetBabyModel .right.\u003e ObservableList","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"BudgetBabyModelManager o--\u003e \"1\" BudgetTracker","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"BudgetBabyModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"BudgetTracker *--\u003e \"1\" UniqueMonthList","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"UniqueMonthList o--\u003e \"*\" Month","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"Month *--\u003e \"1\" FinancialRecordList","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"Month *--\u003e Budget","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"FinancialRecordList o--\u003e \"*\" FinancialRecord","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"FinancialRecord *--\u003e Description","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"FinancialRecord *--\u003e Amount","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"FinancialRecord *--\u003e \"*\" Category","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"BudgetBabyModelManager -----\u003e\" ~* filtered list\" Month","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"BudgetBabyModelManager -----\u003e\" ~* filtered list\" FinancialRecord","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":23,"eksinyue":35}},{"path":"docs/diagrams/ResetActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"@startuml","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"start","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":":User executes reset-filter","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"           command;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"if () then ([valid command])","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"    :Update financial","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"        records list;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"    :Display updated list;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"    :Output successfully","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"       reset message;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"else ([else])","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"    :Output unknown","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"    command error;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"endif","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"stop","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"@enduml","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jxrrelo":19}},{"path":"docs/diagrams/ResetSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"@startuml","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"!include style.puml","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"box BudgetBabyCommandParser LOGIC_COLOR_T1","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"participant \":BudgetBabyCommand\" as BudgetBabyCommand LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"participant \":BudgetBabyParser\" as BudgetBabyParser LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"participant \":ResetFilterCommandParser\" as ResetFilterCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"participant \"c:ResetFilterCommand\" as ResetFilterCommand LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"end box","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"box BudgetBabyModel MODEL_COLOR_T1","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"participant \":BudgetBabyModel\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"end box","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"[-\u003e BudgetBabyCommand : execute(model)","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"activate BudgetBabyCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyCommand -\u003e BudgetBabyParser : parseCommand(\"reset-filter\")","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"activate BudgetBabyParser","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"create ResetFilterCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyParser -\u003e ResetFilterCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"activate ResetFilterCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommandParser --\u003e BudgetBabyParser","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"deactivate ResetFilterCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyParser -\u003e ResetFilterCommandParser : parse(\"reset-filter\")","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"activate ResetFilterCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"create ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommandParser -\u003e ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"activate ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommand --\u003e ResetFilterCommandParser : c","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"deactivate ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommandParser --\u003e BudgetBabyParser : c","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"deactivate ResetFilterCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommandParser -[hidden]-\u003e BudgetBabyParser","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"destroy ResetFilterCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyParser --\u003e BudgetBabyCommand : c","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"deactivate BudgetBabyParser","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"BudgetBabyCommand -\u003e ResetFilterCommand : execute()","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"activate ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommand -\u003e Model : resetFilter()","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"activate Model","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"Model --\u003e ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"deactivate Model","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":"create CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommand -\u003e CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"activate CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"CommandResult --\u003e ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"jxrrelo"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"jxrrelo"},"content":"ResetFilterCommand --\u003e BudgetBabyCommand : result","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"jxrrelo"},"content":"deactivate ResetFilterCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"jxrrelo"},"content":"[\u003c--BudgetBabyCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"jxrrelo"},"content":"deactivate BudgetBabyCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"jxrrelo"},"content":"@enduml","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"jxrrelo":69}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"Interface BudgetBabyStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"Interface BudgetTrackerStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"Class BudgetBabyStorageManager","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"Class JsonBudgetTrackerStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"StorageManager o--\u003e BudgetTrackerStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"JsonBudgetTrackerStorage .left.|\u003e BudgetTrackerStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"JsonBudgetTrackerStorage .down.\u003e JsonSerializableBudgetTracker","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"JsonSerializableBudgetTracker .right.\u003e JsonAdaptedMonth","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"JsonAdaptedMonth .right.\u003e JsonAdaptedFinancialRecord","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":15,"jxrrelo":9}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"Class BudgetDisplay","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"Class FinancialRecordListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"Class FinancialRecordCard","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"Class CommandBox","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"MainWindow *-down-\u003e BudgetDisplay","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"MainWindow *-down-\u003e FinancialRecordListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"FinancialRecordListPanel -down-\u003e FinancialRecordCard","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"BudgetDisplay --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"FinancialRecordListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"FinancialRecordCard --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"FinancialRecordCard ..\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"FinancialRecordListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"StatusBarFooter -[hidden]left- BudgetDisplay","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":49,"deyixtan":15}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yuheem"},"content":"title: BudgetBaby","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"# BudgetBaby :baby: :money_with_wings:","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W14-2/tp/badge.svg)](https://app.codecov.io/gh/AY2021S2-CS2103T-W14-2/tp)","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":"BudgetBaby is a **desktop app for setting monthly budgets and tracking expenses**. It is optimized for use via a Command Line Interface (CLI) so that entering and editing financial records and budgets can be done faster by typing in commands while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"yuheem"},"content":"BudgetBaby has the following features to enhance your life:","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"- Set monthly spending budgets","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"- Track monthly expenses","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"- and more to come soon...","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yuheem"},"content":"Hurry and start tracking your expenses now!","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yuheem"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yuheem"},"content":"## Site Map","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"- [User Guide](https://ay2021s2-cs2103t-w14-2.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"- [Developer Guide](https://ay2021s2-cs2103t-w14-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"- [About Us](https://ay2021s2-cs2103t-w14-2.github.io/tp/AboutUs.html)","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yuheem"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"- This project is based on the ADdressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yuheem":11,"-":13,"eksinyue":8}},{"path":"docs/team/deyixtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"title: Tan De Yi\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":45,"deyixtan":1}},{"path":"docs/team/eksinyue.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"title: He Xinyue\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"## Project: BudgetBaby","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"BudgetBaby is a desktop budget tracking application used to manage finances. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"* **New Feature**: Added list command that allows users to view the current month\u0027s financial records.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"* **Project management**:","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    * User Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        * Added documentation for the features `list` and `find` [\\#72]()","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    * Developer Guide:","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        * Added implementation details of the `list` feature.","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"* **Community**:","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"* **Tools**:","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"eksinyue":42}},{"path":"docs/team/jxrrelo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"title: Jaryl Loh\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"## Project: BudgetBaby","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"BudgetBaby is a desktop budget tracking application used to manage finances. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"* **New Feature**: Added list command that allows users to view the current month\u0027s financial records.","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"* **Project management**:","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-25"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-25"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-25"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"  * User Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"    * Added documentation for the features `list` and `find` [\\#72]()","lastModifiedDate":"2021-02-25"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-25"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"    * Added implementation details of the `list` feature.","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"* **Community**:","lastModifiedDate":"2021-02-25"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-25"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-25"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-25"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-25"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"* **Tools**:","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-25"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"jxrrelo":42}},{"path":"docs/team/natosy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"title: Ong Siying Natasha\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"## Project: BudgetBaby","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"BudgetBaby is a desktop budget tracking application used to manage finances. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"* **New Feature**: Added list command that allows users to view the current month\u0027s financial records.","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"* **Project management**:","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"natosy"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"natosy"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"natosy"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"natosy"},"content":"    * User Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"natosy"},"content":"        * Added documentation for the features `list` and `find` [\\#72]()","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"natosy"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"natosy"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"natosy"},"content":"        * Added implementation details of the `list` feature.","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"natosy"},"content":"* **Community**:","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"natosy"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"natosy"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"natosy"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"natosy"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"natosy"},"content":"* **Tools**:","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"natosy"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"natosy"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"natosy":42}},{"path":"docs/team/yuheem.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"yuheem"},"content":"title: Yu Heem\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2021-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2021-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"yuheem":1,"-":45}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"eksinyue"},"content":"Create a `RemarkCommandParser` class in the `seedu.budgetbaby.ablogic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"eksinyue"},"content":"Create a new `Remark` in `seedu.budgetbaby.abmodel.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"eksinyue"},"content":"Simply add the following to [`seedu.budgetbaby.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":388,"eksinyue":6}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"The `address` field in `Person` is actually an instance of the `seedu.budgetbaby.abmodel.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":102,"eksinyue":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.budgetbaby.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":249,"eksinyue":1}},{"path":"src/main/java/seedu/budgetbaby/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.FileUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"eksinyue":3,"-":61}},{"path":"src/main/java/seedu/budgetbaby/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"eksinyue":5,"-":20}},{"path":"src/main/java/seedu/budgetbaby/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Config;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Version;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.BudgetBabyLogic;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.BudgetBabyLogicManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.BudgetBabyStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.BudgetBabyStorageManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.BudgetTrackerStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.JsonBudgetTrackerStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ui.Ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ui.UiManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    protected BudgetBabyLogic logic;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    protected BudgetBabyStorage storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    protected BudgetBabyModel model;","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing BudgetBaby ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"        BudgetTrackerStorage budgetTrackerStorage \u003d new JsonBudgetTrackerStorage(userPrefs.getBudgetBabyFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        storage \u003d new BudgetBabyStorageManager(budgetTrackerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"        logic \u003d new BudgetBabyLogicManager(model, storage);","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"    private BudgetBabyModel initModelManager(BudgetBabyStorage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"        Optional\u003cReadOnlyBudgetTracker\u003e budgetTrackerOptional;","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"        ReadOnlyBudgetTracker initialData;","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"            budgetTrackerOptional \u003d storage.readBudgetTracker();","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"            if (!budgetTrackerOptional.isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"                logger.info(\"Data file not found. Will be starting with a sample BudgetTracker\");","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"            initialData \u003d budgetTrackerOptional.orElseGet(SampleDataUtil::getSampleBudgetTracker);","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty BudgetTracker\");","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"            initialData \u003d new BudgetTracker();","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty BudgetTracker\");","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"            initialData \u003d new BudgetTracker();","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"        return new BudgetBabyModelManager(initialData, userPrefs);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"eksinyue"},"content":"        logger.info(\"Starting BudgetBaby \" + MainApp.VERSION);","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":45,"-":138}},{"path":"src/main/java/seedu/budgetbaby/MainAppAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.Logic;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.LogicManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abstorage.AddressBookStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abstorage.JsonAddressBookStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abstorage.Storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abstorage.StorageManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Config;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Version;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.StringUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ui.Ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"public class MainAppAddressBook extends Application {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getBudgetBabyFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"        //        ui \u003d new UiManager(logic);","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"eksinyue"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2021-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"eksinyue":28,"-":154}},{"path":"src/main/java/seedu/budgetbaby/ablogic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"     * @see seedu.budgetbaby.abmodel.Model#getAddressBook()","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"eksinyue":13,"-":41}},{"path":"src/main/java/seedu/budgetbaby/ablogic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.parser.AddressBookParser;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abstorage.Storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eksinyue":13,"-":69}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"        + \"[\" + PREFIX_CATEGORY + \"TAG]...\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"        + PREFIX_CATEGORY + \"friends \"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"        + PREFIX_CATEGORY + \"owesMoney\";","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":5,"-":55,"jxrrelo":8}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":4,"-":20}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":4,"-":17}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Messages;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":7,"-":47}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.abmodel.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"        + \"[\" + PREFIX_CATEGORY + \"TAG]...\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e updatedCategories \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"jxrrelo"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedCategories);","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"jxrrelo"},"content":"        private Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"jxrrelo"},"content":"         * A defensive copy of {@code categories} is used internally.","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"jxrrelo"},"content":"            setTags(toCopy.categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"jxrrelo"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"jxrrelo"},"content":"         * Sets {@code categories} to this object\u0027s {@code categories}.","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"jxrrelo"},"content":"         * A defensive copy of {@code categories} is used internally.","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"jxrrelo"},"content":"        public void setTags(Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"jxrrelo"},"content":"            this.categories \u003d (categories !\u003d null) ? new HashSet\u003c\u003e(categories) : null;","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"jxrrelo"},"content":"         * Returns {@code Optional#empty()} if {@code categories} is null.","lastModifiedDate":"2021-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"jxrrelo"},"content":"        public Optional\u003cSet\u003cCategory\u003e\u003e getTags() {","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"jxrrelo"},"content":"            return (categories !\u003d null) ? Optional.of(Collections.unmodifiableSet(categories)) : Optional.empty();","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"eksinyue":15,"-":193,"jxrrelo":20}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"eksinyue":3,"-":17}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"eksinyue":5,"-":38}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":3,"-":19}},{"path":"src/main/java/seedu/budgetbaby/ablogic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.abmodel.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":4,"-":21}},{"path":"src/main/java/seedu/budgetbaby/ablogic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.AddCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.Prefix;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_CATEGORY);","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e categoryList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_CATEGORY));","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":"        Person person \u003d new Person(name, phone, email, address, categoryList);","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"eksinyue":15,"-":42,"jxrrelo":9}},{"path":"src/main/java/seedu/budgetbaby/ablogic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.AddCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.ClearCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.DeleteCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.ExitCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.FindCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.HelpCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.ListCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":13,"-":63}},{"path":"src/main/java/seedu/budgetbaby/ablogic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.DeleteCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"eksinyue":8,"-":24}},{"path":"src/main/java/seedu/budgetbaby/ablogic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_CATEGORY);","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_CATEGORY)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"jxrrelo"},"content":"    private Optional\u003cSet\u003cCategory\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"eksinyue":11,"-":67,"jxrrelo":9}},{"path":"src/main/java/seedu/budgetbaby/ablogic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.FindCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"eksinyue":7,"-":28}},{"path":"src/main/java/seedu/budgetbaby/abmodel/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.UniquePersonList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":3,"-":117}},{"path":"src/main/java/seedu/budgetbaby/abmodel/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"     * Replaces budget tracker data with the data in {@code budgetTracker}.","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"     * Returns the BudgetTracker","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"eksinyue":18,"-":80}},{"path":"src/main/java/seedu/budgetbaby/abmodel/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        return userPrefs.getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"        userPrefs.setBudgetBabyFilePath(addressBookFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":9,"-":144}},{"path":"src/main/java/seedu/budgetbaby/abmodel/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":2,"-":15}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":2,"-":55}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":2,"-":65}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":2,"-":57}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eksinyue":2,"-":29}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"    private final Set\u003cCategory\u003e categories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"        requireAllNonNull(name, phone, email, address, categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"        this.categories.addAll(categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"    public Set\u003cCategory\u003e getTags() {","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"jxrrelo"},"content":"        return Collections.unmodifiableSet(categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"jxrrelo"},"content":"        return Objects.hash(name, phone, email, address, categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e categories \u003d getTags();","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"jxrrelo"},"content":"        if (!categories.isEmpty()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"jxrrelo"},"content":"            categories.forEach(builder::append);","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":2,"-":110,"jxrrelo":11}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":2,"-":51}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":4,"-":133}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person.exceptions;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"eksinyue":1,"-":10}},{"path":"src/main/java/seedu/budgetbaby/abmodel/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person.exceptions;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"eksinyue":1,"-":5}},{"path":"src/main/java/seedu/budgetbaby/abstorage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":" * Represents a storage for {@link seedu.budgetbaby.abmodel.AddressBook}.","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"eksinyue":6,"-":41}},{"path":"src/main/java/seedu/budgetbaby/abstorage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"jxrrelo"},"content":"        final List\u003cCategory\u003e personCategories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jxrrelo"},"content":"            personCategories.add(tag.toModelType());","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"jxrrelo"},"content":"        final Set\u003cCategory\u003e modelCategories \u003d new HashSet\u003c\u003e(personCategories);","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"jxrrelo"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelCategories);","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eksinyue":7,"-":97,"jxrrelo":5}},{"path":"src/main/java/seedu/budgetbaby/abstorage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":" * Jackson-friendly version of {@link Category}.","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"    public JsonAdaptedTag(Category source) {","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"        tagName \u003d source.category;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"    public Category toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"        if (!Category.isValidTagName(tagName)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"            throw new IllegalValueException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"        return new Category(tagName);","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eksinyue":2,"-":37,"jxrrelo":9}},{"path":"src/main/java/seedu/budgetbaby/abstorage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.FileUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.JsonUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eksinyue":7,"-":73}},{"path":"src/main/java/seedu/budgetbaby/abstorage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eksinyue":5,"-":55}},{"path":"src/main/java/seedu/budgetbaby/abstorage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"eksinyue":6,"-":27}},{"path":"src/main/java/seedu/budgetbaby/abstorage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":7,"-":73}},{"path":"src/main/java/seedu/budgetbaby/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":62}},{"path":"src/main/java/seedu/budgetbaby/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    private static final double DEFAULT_HEIGHT \u003d 800;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    private static final boolean DEFAULT_CLI_VISIBILITY \u003d true;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    private final boolean cliVisibility;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        cliVisibility \u003d DEFAULT_CLI_VISIBILITY;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, boolean cliVisibility) {","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"        this.cliVisibility \u003d cliVisibility;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"    public boolean getCliVisibility() {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        return cliVisibility;","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates)","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"                \u0026\u0026 cliVisibility \u003d\u003d o.cliVisibility;","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, cliVisibility);","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"        sb.append(\"CLI Visibility : \" + cliVisibility);","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":73,"deyixtan":16}},{"path":"src/main/java/seedu/budgetbaby/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":111}},{"path":"src/main/java/seedu/budgetbaby/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_INVALID_FINANCIAL_RECORD_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"        \"The financial record index provided is invalid\";","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":3,"-":12}},{"path":"src/main/java/seedu/budgetbaby/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":115}},{"path":"src/main/java/seedu/budgetbaby/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core.index;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eksinyue":1,"-":53}},{"path":"src/main/java/seedu/budgetbaby/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":10}},{"path":"src/main/java/seedu/budgetbaby/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":1,"-":20}},{"path":"src/main/java/seedu/budgetbaby/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eksinyue":2,"-":40}},{"path":"src/main/java/seedu/budgetbaby/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":1,"-":34}},{"path":"src/main/java/seedu/budgetbaby/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Config;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"eksinyue":3,"-":20}},{"path":"src/main/java/seedu/budgetbaby/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":82}},{"path":"src/main/java/seedu/budgetbaby/commons/util/InvalidationListenerManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" * Manages a list of {@link InvalidationListener}.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"public class InvalidationListenerManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"    private final ArrayList\u003cInvalidationListener\u003e listeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * Calls {@link InvalidationListener#invalidated(Observable)} on all added listeners.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     * Any modifications to the listeners list during the invocation of this method","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * will only take effect on the next invocation of this method.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"     * @param observable The {@code Observable} that became invalid.","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    public void callListeners(Observable observable) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        // Make a copy of listeners such that any modifications to the listeners list during","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        // the invocation of this method will only take effect on the next invocation of this method.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        ArrayList\u003cInvalidationListener\u003e listenersCopy \u003d new ArrayList\u003c\u003e(listeners);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        for (InvalidationListener listener : listenersCopy) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"            listener.invalidated(observable);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     * Adds {@code listener} to the list of listeners.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * If the same listener is added more that once, then it will be notified more than once.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        requireNonNull(listener);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"        listeners.add(listener);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"     * Removes {@code listener} from the list of listeners.","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"     * If the given listener was not previously added, then this method call is a no-op.","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"     * If the given listener was added more than once, then only the first occurrence in the list will be removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"        requireNonNull(listener);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        listeners.remove(listener);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"deyixtan":51}},{"path":"src/main/java/seedu/budgetbaby/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":3,"-":140}},{"path":"src/main/java/seedu/budgetbaby/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":2,"-":66}},{"path":"src/main/java/seedu/budgetbaby/logic/BudgetBabyLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.logic.statistics.CategoryStatistics;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.logic.statistics.MonthStatistics;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":" * API of the Logic component","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"public interface BudgetBabyLogic {","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * Sets the current display month to the given {@code month}.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    void setCurrentDisplayMonth(YearMonth month);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     * Returns the BudgetTracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    ReadOnlyBudgetTracker getBudgetTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the filtered list of months","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    ObservableList\u003cMonth\u003e getFilteredMonthList();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the filtered list of financial records","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"     * Default showing all financial records of the current month.","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    ObservableList\u003cFinancialRecord\u003e getFilteredFinancialRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"natosy"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"natosy"},"content":"     * Returns a String containing information on past 6 months of budget and expenditure.","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"natosy"},"content":"     * @return MonthStatistics objects of past 6 months.","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"natosy"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"natosy"},"content":"    List\u003cMonthStatistics\u003e getPastMonthStatistics();","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"natosy"},"content":"    List\u003cCategoryStatistics\u003e getTopCategories();","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"     * Returns the user prefs\u0027 budget baby file path.","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    Path getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"natosy":10,"eksinyue":58,"deyixtan":6}},{"path":"src/main/java/seedu/budgetbaby/logic/BudgetBabyLogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.BudgetBabyCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.BudgetBabyParser;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.logic.statistics.CategoryStatistics;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.logic.statistics.MonthStatistics;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.logic.statistics.Statistics;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.BudgetBabyStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"public class BudgetBabyLogicManager implements BudgetBabyLogic {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BudgetBabyLogicManager.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    private final BudgetBabyModel model;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    private final BudgetBabyStorage storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    private final BudgetBabyParser budgetBabyParser;","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"natosy"},"content":"    private final Statistics statistics;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    public BudgetBabyLogicManager(BudgetBabyModel model, BudgetBabyStorage storage) {","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"        budgetBabyParser \u003d new BudgetBabyParser();","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"natosy"},"content":"        statistics \u003d new Statistics(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        BudgetBabyCommand command \u003d budgetBabyParser.parseCommand(commandText);","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"            storage.saveBudgetTracker(model.getBudgetTracker());","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"        getBudgetTracker().notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"        return commandResult;","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"    public void setCurrentDisplayMonth(YearMonth month) {","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"        model.setCurrentDisplayMonth(month);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    public ReadOnlyBudgetTracker getBudgetTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"        return model.getBudgetTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cMonth\u003e getFilteredMonthList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"        return model.getFilteredMonthList();","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cFinancialRecord\u003e getFilteredFinancialRecordList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"        return model.getFilteredFinancialRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"natosy"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"natosy"},"content":"    public List\u003cMonthStatistics\u003e getPastMonthStatistics() {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"natosy"},"content":"        return statistics.getPastMonthStatistics();","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"natosy"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"natosy"},"content":"    public List\u003cCategoryStatistics\u003e getTopCategories() {","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"natosy"},"content":"        return statistics.getTopCategories();","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"    public Path getBudgetBabyFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"        return model.getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"natosy":16,"eksinyue":87,"deyixtan":8}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/AddFrCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":" * Adds a financial record to the budget tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"public class AddFrCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    public static final String COMMAND_WORD \u003d \"add-fr\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a financial record. \"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        + \"Parameters: \"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        + PREFIX_DESCRIPTION + \"FR_DESCRIPTION \"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        + PREFIX_AMOUNT + \"FR_AMOUNT \"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        + \"[\" + PREFIX_TIME + \"DATE]...\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"        + \"[\" + PREFIX_CATEGORY + \"CATEGORY]...\\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        + PREFIX_DESCRIPTION + \"Lunch \"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"        + PREFIX_AMOUNT + \"10 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        + PREFIX_TIME + \"31-12-2020 \"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"        + PREFIX_CATEGORY + \"Food\";","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New financial record added: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    private final FinancialRecord toAdd;","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     * Creates an AddFrCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    public AddFrCommand(FinancialRecord record) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(record);","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        toAdd \u003d record;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        model.addFinancialRecord(toAdd);","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        model.commitBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof AddFrCommand // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 toAdd.equals(((AddFrCommand) other).toAdd));","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":51,"jxrrelo":6,"deyixtan":2}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/BudgetBabyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"public abstract class BudgetBabyCommand {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    public abstract CommandResult execute(BudgetBabyModel model) throws CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":20}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     * The application should exit.","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eksinyue":7,"-":68}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/DeleteFrCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":" * Deletes a financial record using it\u0027s displayed index from the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"public class DeleteFrCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    public static final String COMMAND_WORD \u003d \"delete-fr\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        + \": Deletes the financial record identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_DELETE_FINANCIAL_RECORD_SUCCESS \u003d \"Deleted Financial Record: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    public DeleteFrCommand(Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        List\u003cFinancialRecord\u003e lastShownList \u003d model.getFilteredFinancialRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FINANCIAL_RECORD_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        FinancialRecord toDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        model.deleteFinancialRecord(toDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"        model.commitBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FINANCIAL_RECORD_SUCCESS, toDelete));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof DeleteFrCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteFrCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"eksinyue":53,"deyixtan":1}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/EditFrCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":" * Edits the details of an existing financial record in the budget tracker.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"public class EditFrCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    public static final String COMMAND_WORD \u003d \"edit-fr\";","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the financial record identified \"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"        + \"by the index number used in the displayed financial record list. \"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"FR_DESCRIPTION] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        + \"[\" + PREFIX_AMOUNT + \"FR_AMOUNT] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        + \"[\" + PREFIX_TIME + \"DATE] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        + \"[\" + PREFIX_CATEGORY + \"CATEGORY]...\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        + PREFIX_DESCRIPTION + \"Lunch \"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        + PREFIX_AMOUNT + \"20.0\";","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_EDIT_FR_SUCCESS \u003d \"Edited Financial Record: %1$s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    private final Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    private final EditFrDescriptor editFrDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"     * @param index            of the financial record in the filtered financial record list to edit","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"     * @param editFrDescriptor details to edit the person with","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    public EditFrCommand(Index index, EditFrDescriptor editFrDescriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(editFrDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        this.editFrDescriptor \u003d new EditFrDescriptor(editFrDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"        List\u003cFinancialRecord\u003e lastShownList \u003d model.getFilteredFinancialRecordList();","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        FinancialRecord frToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        FinancialRecord editedFr \u003d createEditedFr(frToEdit, editFrDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"        model.setFinancialRecord(frToEdit, editedFr);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FR_SUCCESS, editedFr), false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"     * Creates and returns a {@code FinancialRecord} with the details of {@code frToEdit}","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"     * edited with {@code editFrDescriptor}.","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"    private static FinancialRecord createEditedFr(FinancialRecord frToEdit, EditFrDescriptor editFrDescriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"        assert frToEdit !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"        Description updatedDescription \u003d editFrDescriptor.getDescription().orElse(frToEdit.getDescription());","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"        Amount updatedAmount \u003d editFrDescriptor.getAmount().orElse(frToEdit.getAmount());","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"        Date updatedTimestamp \u003d editFrDescriptor.getDate().orElse(frToEdit.getTimestamp());","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"        Set\u003cCategory\u003e updatedCategories \u003d editFrDescriptor.getCategories().orElse(frToEdit.getCategories());","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"        return new FinancialRecord(updatedDescription, updatedAmount, updatedTimestamp, updatedCategories);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"        if (!(other instanceof EditFrCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"        EditFrCommand e \u003d (EditFrCommand) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 editFrDescriptor.equals(e.editFrDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"     * Stores the details to edit the financial record with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"eksinyue"},"content":"    public static class EditFrDescriptor {","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"        private Description description;","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"        private Amount amount;","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"        private Date timestamp;","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"        private Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"        public EditFrDescriptor() {","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"         * A defensive copy of {@code categories} is used internally.","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"eksinyue"},"content":"        public EditFrDescriptor(EditFrDescriptor toCopy) {","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"            setAmount(toCopy.amount);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"            setDate(toCopy.timestamp);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"eksinyue"},"content":"            setCategories(toCopy.categories);","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"eksinyue"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"eksinyue"},"content":"            return CollectionUtil.isAnyNonNull(description, amount, timestamp, categories);","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"eksinyue"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"eksinyue"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"eksinyue"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"eksinyue"},"content":"        public void setAmount(Amount amount) {","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"eksinyue"},"content":"            this.amount \u003d amount;","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"eksinyue"},"content":"        public Optional\u003cAmount\u003e getAmount() {","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"eksinyue"},"content":"            return Optional.ofNullable(amount);","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"eksinyue"},"content":"        public void setDate(Date timestamp) {","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"eksinyue"},"content":"            this.timestamp \u003d timestamp;","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"eksinyue"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"eksinyue"},"content":"            return Optional.ofNullable(timestamp);","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"eksinyue"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"eksinyue"},"content":"         * Sets {@code categories} to this object\u0027s {@code categories}.","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"eksinyue"},"content":"         * A defensive copy of {@code categories} is used internally.","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"eksinyue"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"eksinyue"},"content":"        public void setCategories(Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"eksinyue"},"content":"            this.categories \u003d (categories !\u003d null) ? new HashSet\u003c\u003e(categories) : null;","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"eksinyue"},"content":"        /**","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"eksinyue"},"content":"         * Returns an unmodifiable category set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"eksinyue"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"eksinyue"},"content":"         * Returns {@code Optional#empty()} if {@code categories} is null.","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"eksinyue"},"content":"         */","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"eksinyue"},"content":"        public Optional\u003cSet\u003cCategory\u003e\u003e getCategories() {","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"eksinyue"},"content":"            return (categories !\u003d null) ? Optional.of(Collections.unmodifiableSet(categories)) : Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"eksinyue"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"eksinyue"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"eksinyue"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"eksinyue"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"eksinyue"},"content":"                return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"eksinyue"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"eksinyue"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"eksinyue"},"content":"            if (!(other instanceof EditFrDescriptor)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"eksinyue"},"content":"                return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"eksinyue"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"eksinyue"},"content":"            // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"eksinyue"},"content":"            EditFrDescriptor e \u003d (EditFrDescriptor) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"eksinyue"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"eksinyue"},"content":"                \u0026\u0026 getAmount().equals(e.getAmount())","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"eksinyue"},"content":"                \u0026\u0026 getCategories().equals(e.getCategories());","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"eksinyue":203,"deyixtan":1}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":" * Terminates the program.","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"public class ExitCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting BudgetBaby...\";","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"    public CommandResult execute(BudgetBabyModel model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"natosy":18,"deyixtan":1}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/FindFrCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":" * Finds financial records by description, amount and/or category.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"public class FindFrCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"    public static final String COMMAND_WORD \u003d \"find-fr\";","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds financial records\"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"            + \"by description, amount and/or category.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"            + PREFIX_DESCRIPTION + \"FR_DESCRIPTION \"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"            + PREFIX_AMOUNT + \"FR_AMOUNT \"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"            + PREFIX_CATEGORY + \"FR_CATEGORY\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"            + PREFIX_DESCRIPTION + \"Shoes \"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"            + PREFIX_AMOUNT + \"40 \"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"            + PREFIX_CATEGORY + \"Apparel\";","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Financial Records list is now filtered. \"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"            + \"Use reset-filter to revert to original list.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"    public static final String MESSAGE_FAIL \u003d \"Unable to find financial Records matching given inputs.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"    private final Description description;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"    private final Amount amount;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"    private final Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"     * Creates a FindFrCommand to update the FR list","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"    public FindFrCommand(Description description, Amount amount, Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"jxrrelo"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"        this.categories \u003d categories;","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"        boolean result \u003d model.findFinancialRecord(description, amount, categories);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"        if (result) {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, description, amount, categories));","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"            return new CommandResult(String.format(MESSAGE_FAIL));","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"jxrrelo":61}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" * Reverts the {@code model}\u0027s budget tracker to its previously undone state.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"public class RedoCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Redo most recent action. \"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"            + \"No Parameters\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully redid last action.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public static final String MESSAGE_FAILURE \u003d \"There isn\u0027t any recent action to redo.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        if (!model.canRedoBudgetTracker()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        model.redoBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"deyixtan":34}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/ResetFilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.BudgetBabyLogicManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":" * Filters financial records by category.","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"public class ResetFilterCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"    public static final String COMMAND_WORD \u003d \"reset-filter\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Resets filters set to Financial Records. \"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"            + \"No Parameters\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Filters on Financial Records list have been reset\";","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BudgetBabyLogicManager.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"        model.resetFilter();","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"        logger.info(\"Executing reset...\");","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"jxrrelo":35}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/SetBudgetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuheem"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"yuheem"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":" * Sets a budget for the following months.","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"yuheem"},"content":"public class SetBudgetCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"yuheem"},"content":"    public static final String COMMAND_WORD \u003d \"set-bg\";","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"yuheem"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the budget for the following months.\"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"yuheem"},"content":"        + \"Parameters: BG_AMOUNT\";","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"yuheem"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New budget set: %s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"yuheem"},"content":"    private final Budget toSet;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"yuheem"},"content":"     * Creates a SetBudgetCommand to set the specified {@code Budget}","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"yuheem"},"content":"     * @param budget The specified Budget.","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"yuheem"},"content":"    public SetBudgetCommand(Budget budget) {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"yuheem"},"content":"        requireNonNull(budget);","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"yuheem"},"content":"        toSet \u003d budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"yuheem"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"yuheem"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"yuheem"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"yuheem"},"content":"        model.setBudget(toSet);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toSet), false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"yuheem"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"yuheem"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"yuheem"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"yuheem"},"content":"            || (other instanceof SetBudgetCommand // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"yuheem"},"content":"            \u0026\u0026 toSet.equals(((SetBudgetCommand) other).toSet));","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"yuheem"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"yuheem":41,"eksinyue":1,"deyixtan":1}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" * Reverts the {@code model}\u0027s budget tracker to its previous state.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"public class UndoCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undo most recent action. \"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"            + \"No Parameters\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully undid last action.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public static final String MESSAGE_FAILURE \u003d \"There isn\u0027t any recent action to undo.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        if (!model.canUndoBudgetTracker()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"        model.undoBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"deyixtan":34}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/ViewMonthCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":" * Changes the current display month of the budget tracker.","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"public class ViewMonthCommand extends BudgetBabyCommand {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    public static final String COMMAND_WORD \u003d \"view-month\";","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views a month. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        + \"Parameters: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        + \"mm-yyyy\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        + \"01-2021\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying month: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    private final YearMonth toView;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     * Creates an ViewMonthCommand to view the specified {@code month}","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    public ViewMonthCommand(YearMonth month) {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(month);","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"        toView \u003d month;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    public CommandResult execute(BudgetBabyModel model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        model.setCurrentDisplayMonth(toView);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, new Month(toView)), false, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof ViewMonthCommand // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 toView.equals(((ViewMonthCommand) other).toView));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"eksinyue":49,"deyixtan":1}},{"path":"src/main/java/seedu/budgetbaby/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.commands.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"eksinyue":1,"-":16}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/AddFrCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.AddFrCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"public class AddFrCommandParser implements BudgetBabyCommandParser\u003cAddFrCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    public AddFrCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_AMOUNT, PREFIX_CATEGORY, PREFIX_TIME);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_AMOUNT)","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFrCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        Amount amount \u003d ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get());","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        Date timestamp \u003d new Date();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"            timestamp \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e categoryList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_CATEGORY));","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        FinancialRecord record \u003d new FinancialRecord(description, amount, timestamp, categoryList);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        return new AddFrCommand(record);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":57,"jxrrelo":6}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     **/","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"eksinyue":4,"-":58}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"     * Tokenizes an arguments string and returns a {@code List\u003cString\u003e} object that represents the arguments","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"     * in the argument string. Command word and each argument is separated by whitespaces.","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     * @param argsString Arguments string of the form: {@code preamble value value ...}","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * @return {@code List\u003cString\u003e} object that represents the arguments","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    public static List\u003cString\u003e tokenizeWithoutPrefix(String argsString) {","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        return Arrays.stream(argsString.split(\" \"))","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"            .map(arg -\u003e arg.trim())","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"            .filter(arg -\u003e !arg.isBlank())","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"eksinyue":16,"-":146}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/BudgetBabyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.BudgetBabyCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":" * Represents a Parser that is able to parse user input into a {@code BudgetBabyCommand} of type {@code T}.","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"public interface BudgetBabyCommandParser\u003cT extends BudgetBabyCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"eksinyue":17}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/BudgetBabyParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.HelpCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.AddFrCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.BudgetBabyCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.DeleteFrCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.EditFrCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.FindFrCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.commands.RedoCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.ResetFilterCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.SetBudgetCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.commands.UndoCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.ViewMonthCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":" * Parses user input.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"public class BudgetBabyParser {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    public BudgetBabyCommand parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"        case AddFrCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"            return new AddFrCommandParser().parse(arguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        case DeleteFrCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"            return new DeleteFrCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        case EditFrCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"            return new EditFrCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"yuheem"},"content":"        case SetBudgetCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"yuheem"},"content":"            return new SetBudgetCommandParser().parse(arguments);","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"        case FindFrCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"jxrrelo"},"content":"            return new FindFrCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jxrrelo"},"content":"        case ResetFilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"jxrrelo"},"content":"            return new ResetFilterCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"        case ViewMonthCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"            return new ViewMonthCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"            return new UndoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"            return new RedoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"natosy"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"natosy"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"natosy":4,"yuheem":3,"eksinyue":58,"jxrrelo":13,"deyixtan":8}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    public static final Prefix PREFIX_AMOUNT \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"eksinyue":4,"-":13,"jxrrelo":1}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/DeleteFrCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.DeleteFrCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"public class DeleteFrCommandParser implements BudgetBabyCommandParser\u003cDeleteFrCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteFrCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     * and returns a DeleteFrCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public DeleteFrCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"            return new DeleteFrCommand(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteFrCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"eksinyue":30}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/EditFrCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.EditFrCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.EditFrCommand.EditFrDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":" * Parses input arguments and creates a new EditFrCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"public class EditFrCommandParser implements BudgetBabyCommandParser\u003cEditFrCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * Parses the given {@code String} of arguments in the context of the EditFrCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     * and returns an EditFrCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    public EditFrCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_AMOUNT, PREFIX_TIME, PREFIX_CATEGORY);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        Index index;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditFrCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"        EditFrDescriptor editedFrDescriptor \u003d new EditFrDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"            editedFrDescriptor.setDescription(","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"                ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        if (argMultimap.getValue(PREFIX_AMOUNT).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"            editedFrDescriptor.setAmount(ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"            editedFrDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        parseCategoriesForEdit(argMultimap.getAllValues(PREFIX_CATEGORY)).ifPresent(editedFrDescriptor::setCategories);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        if (!editedFrDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(EditFrCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"        return new EditFrCommand(index, editedFrDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cCategory\u003e} if {@code categories} is non-empty.","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"     * If {@code categories} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"     * {@code Set\u003cCategory\u003e} containing zero categories.","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"    private Optional\u003cSet\u003cCategory\u003e\u003e parseCategoriesForEdit(Collection\u003cString\u003e categories) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        assert categories !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        if (categories.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        Collection\u003cString\u003e tagSet \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"            categories.size() \u003d\u003d 1 \u0026\u0026 categories.contains(\"\") ? Collections.emptySet() : categories;","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"eksinyue":82}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/FindFrCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.FindFrCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":" * Parses input arguments and creates a new FindFrCommand object","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"public class FindFrCommandParser implements BudgetBabyCommandParser\u003cFindFrCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"     * Parses the given {@code String} of arguments in the context of the FindFrCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"     * and returns a FindFrCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"    public FindFrCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_AMOUNT, PREFIX_CATEGORY);","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_AMOUNT)","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_CATEGORY))","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"                    FindFrCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"        Description description;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"        Amount amount;","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"            description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"jxrrelo"},"content":"            description \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_AMOUNT)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"            amount \u003d ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get());","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":"            amount \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_CATEGORY)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":"            categories \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_CATEGORY));","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"            categories \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"jxrrelo"},"content":"        return new FindFrCommand(description, amount, categories);","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"jxrrelo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"jxrrelo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"jxrrelo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"jxrrelo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"jxrrelo"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"jxrrelo":73}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"eksinyue":3,"-":13}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.StringUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"     * Parses a {@code String monthStr} into a {@code YearMonth}.","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the given {@code monthStr} is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    public static YearMonth parseYearMonth(String yearMonthStr) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(yearMonthStr);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        String trimmedMonthStr \u003d yearMonthStr.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        if (!Month.isValidMonthStr(trimmedMonthStr)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(Month.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        return YearMonthParser.getYearMonth(trimmedMonthStr);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"     * Parses a {@code String dateStr} into a {@code Date}.","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the given {@code monthStr} is invalid.","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    public static Date parseDate(String dateStr) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(dateStr);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"        String trimmedDateStr \u003d dateStr.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"        if (!FinancialRecord.isValidTimestamp(dateStr)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(FinancialRecord.TIMESTAMP_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        return FinancialRecord.getValidTimeStamp(trimmedDateStr);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"     * Parses a {@code String name} into a {@code Description}.","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"     * Parses a {@code String amount} into a {@code Amount}.","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the given {@code amount} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"    public static Amount parseAmount(String amount) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(amount);","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"        String trimmedAmount \u003d amount.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"        if (!Amount.isValidAmount(amount)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"        return new Amount(trimmedAmount);","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"yuheem"},"content":"     * Parses a String representation of a budget amount to a double.","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"yuheem"},"content":"     * Leading and trailing whitespaces will be trimmed","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"yuheem"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"yuheem"},"content":"     * @throws ParseException if the given budget amount is negative.","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"yuheem"},"content":"    public static double parseBudgetAmount(String amount) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"yuheem"},"content":"        requireNonNull(amount);","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"yuheem"},"content":"        String trimmedAmount \u003d amount.trim();","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"yuheem"},"content":"        double budgetAmount \u003d Double.parseDouble(trimmedAmount);","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"yuheem"},"content":"        if (budgetAmount \u003c 0) {","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"yuheem"},"content":"            throw new ParseException(\"Budget amount cannot be negative!\");","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"yuheem"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"yuheem"},"content":"        return budgetAmount;","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"jxrrelo"},"content":"    public static Category parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"jxrrelo"},"content":"        if (!Category.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"jxrrelo"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"jxrrelo"},"content":"        return new Category(trimmedTag);","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"jxrrelo"},"content":"    public static Set\u003cCategory\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":201,"author":{"gitId":"jxrrelo"},"content":"        final Set\u003cCategory\u003e categorySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"jxrrelo"},"content":"            categorySet.add(parseTag(tagName));","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"jxrrelo"},"content":"        return categorySet;","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yuheem":16,"eksinyue":75,"-":107,"jxrrelo":9}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"eksinyue":1,"-":38}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/RedoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.commands.RedoCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" * Parses input arguments and creates a new RedoCommand object","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"public class RedoCommandParser implements BudgetBabyCommandParser\u003cRedoCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     * Parses the given {@code String} of arguments in the context of the RedoCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * and returns an RedoCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public RedoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        if (!arePrefixesPresent(argMultimap)","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        return new RedoCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"deyixtan":40}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/ResetFilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.commands.ResetFilterCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":" * Parses input arguments and creates a new ResetFilterCommand object","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"public class ResetFilterCommandParser implements BudgetBabyCommandParser\u003cResetFilterCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"     * Parses the given {@code String} of arguments in the context of the ResetFiltercommand","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"     * and returns an ResetFilterCommand object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":"    public ResetFilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"        if (!arePrefixesPresent(argMultimap)","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ResetFilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"        return new ResetFilterCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"jxrrelo":41}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/SetBudgetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuheem"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.logic.commands.SetBudgetCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"yuheem"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"yuheem"},"content":" * Parses input arguments and creates a new SetBudgetCommand object.","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":"public class SetBudgetCommandParser implements BudgetBabyCommandParser\u003cSetBudgetCommand\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"yuheem"},"content":"    public SetBudgetCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"yuheem"},"content":"        double amount \u003d ParserUtil.parseBudgetAmount(args);","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"yuheem"},"content":"        Budget budget \u003d new Budget(amount);","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"yuheem"},"content":"        return new SetBudgetCommand(budget);","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"yuheem"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"yuheem":17}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.commands.UndoCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":" * Parses input arguments and creates a new UndoCommand object","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"public class UndoCommandParser implements BudgetBabyCommandParser\u003cUndoCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     * and returns an UndoCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    public UndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        if (!arePrefixesPresent(argMultimap)","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"        return new UndoCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"deyixtan":40}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/ViewMonthCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.ViewMonthCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":" * Parses input arguments and creates a new ViewMonthCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"public class ViewMonthCommandParser implements BudgetBabyCommandParser\u003cViewMonthCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewMonthCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     * and returns an ViewMonthCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    public ViewMonthCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        List\u003cString\u003e arguments \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"            ArgumentTokenizer.tokenizeWithoutPrefix(args);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"        if (arguments.size() !\u003d 1) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewMonthCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"        YearMonth month \u003d ParserUtil.parseYearMonth(arguments.get(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        return new ViewMonthCommand(month);","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"eksinyue":32}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/YearMonthParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":" * Contains utility methods used for parsing between Date, YearMonth and string representation of YearMonth.","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"public class YearMonthParser {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"     * Parses {@code timestamp} into an {@code YearMonth} and returns it.","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    public static YearMonth getYearMonth(Date timestamp) {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"        return YearMonth.from(timestamp.toInstant()","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"            .atZone(ZoneId.systemDefault())","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"            .toLocalDate());","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"     * Parses {@code yearMonthStr} into an {@code YearMonth} and returns it.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    public static YearMonth getYearMonth(String yearMonthStr) {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"M-yyyy\");","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"        return YearMonth.parse(yearMonthStr, f);","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"eksinyue":28}},{"path":"src/main/java/seedu/budgetbaby/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.logic.parser.exceptions;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"eksinyue":2,"-":15}},{"path":"src/main/java/seedu/budgetbaby/logic/statistics/CategoryStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"package seedu.budgetbaby.logic.statistics;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"public class CategoryStatistics implements Comparable\u003cCategoryStatistics\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"    private final Category category;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"    private final double amount;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"    CategoryStatistics(Category category, double amount) {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"    public double getAmount() {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"        return amount;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"    public Category getCategory() {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"        return category;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"natosy"},"content":"    public int compareTo(CategoryStatistics cs) {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":"        return (int) (cs.getAmount() - this.getAmount());","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"natosy"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"natosy":27}},{"path":"src/main/java/seedu/budgetbaby/logic/statistics/MonthStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"package seedu.budgetbaby.logic.statistics;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"public class MonthStatistics {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"    private final Month month;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"    MonthStatistics(Month month) {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"    public String toString() {","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM\");","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"natosy"},"content":"        return String.format(\"%s: %.2f/%.2f\\n\", month.getMonth().format(formatter), month.getTotalExpenses(),","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"                    month.getBudget().getAmount());","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"natosy":20}},{"path":"src/main/java/seedu/budgetbaby/logic/statistics/Statistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"natosy"},"content":"package seedu.budgetbaby.logic.statistics;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"natosy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"natosy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"natosy"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"natosy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"natosy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"natosy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"natosy"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"natosy"},"content":"public class Statistics {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    private final ObservableList\u003cMonth\u003e monthList;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"natosy"},"content":"    private BudgetBabyModel model;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"natosy"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"natosy"},"content":"     * Instantiates the Statistics object by taking in a BudgetBabyModel during initialisation.","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"natosy"},"content":"     * @param model BudgetBabyModel object.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"natosy"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"natosy"},"content":"    public Statistics(BudgetBabyModel model) {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"natosy"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        monthList \u003d model.getFilteredMonthList();","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"natosy"},"content":"    //    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"natosy"},"content":"    //     * Checks if a {@code Month} falls within the past 6 months of the currently displayed month.","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"natosy"},"content":"    //     * @param month {@code Month} that is being checked.","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"natosy"},"content":"    //     * @return True if it falls within the past 6 months, and False otherwise.","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"natosy"},"content":"    //     */","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"natosy"},"content":"    //    private boolean withinSixMonths(Month month) {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"natosy"},"content":"    //        assert month !\u003d null;","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"natosy"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"natosy"},"content":"    //        YearMonth curr \u003d month.getMonth();","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"natosy"},"content":"    //        YearMonth end \u003d currMonth.getMonth();","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"natosy"},"content":"    //        YearMonth start \u003d end.minusMonths(6);","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"natosy"},"content":"    //        return (curr.equals(end) || curr.equals(start) || (curr.isBefore(end) \u0026\u0026 curr.isAfter(start)));","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"natosy"},"content":"    //    }","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"natosy"},"content":"    private List\u003cMonth\u003e getPastMonths() {","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"natosy"},"content":"        List\u003cMonth\u003e monthList \u003d model.getFilteredMonthList();","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"natosy"},"content":"        return monthList.stream().limit(6).collect(Collectors.toList());","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"natosy"},"content":"        //        return monthList.stream().filter(this::withinSixMonths).collect(Collectors.toList());","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"natosy"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"natosy"},"content":"     * Obtains statistics of past 6 {@code Month}s as a list and returns it.","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"natosy"},"content":"     * @return List of MonthStatistics of past 6 months.","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"natosy"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"natosy"},"content":"    public List\u003cMonthStatistics\u003e getPastMonthStatistics() {","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"natosy"},"content":"        assert monthList.size() \u003d\u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"natosy"},"content":"        List\u003cMonthStatistics\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"natosy"},"content":"        for (Month m : getPastMonths()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"natosy"},"content":"            list.add(new MonthStatistics(m));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"natosy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"natosy"},"content":"        return list;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"natosy"},"content":"    private List\u003cCategoryStatistics\u003e allCategories() {","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"        assert monthList.size() \u003d\u003d 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"        Month currMonth \u003d monthList.get(0);","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"natosy"},"content":"        ObservableList\u003cFinancialRecord\u003e list \u003d currMonth.getFinancialRecordList();","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"natosy"},"content":"        HashMap\u003cCategory, CategoryStatistics\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"natosy"},"content":"        for (FinancialRecord fr : list) {","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"            for (Category c : fr.getCategories()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"natosy"},"content":"                if (map.containsKey(c)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"natosy"},"content":"                    map.put(c, new CategoryStatistics(c, map.get(c).getAmount() + fr.getAmount().getValue()));","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"natosy"},"content":"                } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"natosy"},"content":"                    map.put(c, new CategoryStatistics(c, fr.getAmount().getValue()));","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"natosy"},"content":"                }","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"natosy"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"natosy"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"natosy"},"content":"        return new ArrayList\u003c\u003e(map.values());","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"natosy"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"natosy"},"content":"     * Obtains top 5 categories which the user spends on","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"natosy"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"natosy"},"content":"    public List\u003cCategoryStatistics\u003e getTopCategories() {","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"natosy"},"content":"        List\u003cCategoryStatistics\u003e list \u003d allCategories();","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"natosy"},"content":"        Collections.sort(list);","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"natosy"},"content":"        return list.stream().limit(5).collect(Collectors.toList());","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"natosy"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"natosy"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"natosy":82,"eksinyue":1,"deyixtan":5}},{"path":"src/main/java/seedu/budgetbaby/model/BudgetBabyModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":" * The API of the Model component.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"public interface BudgetBabyModel {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    Predicate\u003cMonth\u003e PREDICATE_SHOW_ALL_RECORDS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     * Returns the user prefs\u0027 budget tracker file path.","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    Path getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"     * Sets the user prefs\u0027 budget tracker file path.","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    void setBudgetBabyFilePath(Path budgetBabyFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BudgetTracker \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"     * Replaces budget tracker data with the data in {@code budgetTracker}.","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"    void setBudgetTracker(ReadOnlyBudgetTracker budgetTracker);","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"     * Returns the BudgetTracker","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    ReadOnlyBudgetTracker getBudgetTracker();","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"     * Adds the given month.","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"    void addMonth(Month month);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"     * Deletes the given month.","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"     * The month must exist in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"    void deleteMonth(Month target);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"     * Replaces the given month{@code target} with {@code editedMonth}.","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"     * {@code target} must exist in the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"    void setMonth(Month target, Month editedMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"     * Sets the current display month to the given month{@code month}.","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"     * If the month does not exist in the budget tracker,","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"     * create a month representing the given month{@code month} and add to the","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"     * budget tracker.","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"    void setCurrentDisplayMonth(YearMonth month);","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the filtered month list","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"    ObservableList\u003cMonth\u003e getFilteredMonthList();","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"     * Updates the filter of the filtered month list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"    void updateFilteredMonthList(Predicate\u003cMonth\u003e predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the filtered financial record list","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"    ObservableList\u003cFinancialRecord\u003e getFilteredFinancialRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"     * Updates the filter of the filtered financial record list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"jxrrelo"},"content":"    boolean updateFilteredFinancialRecordList(Predicate\u003cFinancialRecord\u003e predicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"     * Deletes the given financial record.","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"     * The financial record must exist in the budegt tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"    void deleteFinancialRecord(FinancialRecord target);","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":"     * Adds the given financial record.","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"    void addFinancialRecord(FinancialRecord record);","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"eksinyue"},"content":"     * Replaces the given financial record {@code target} with {@code editedRecord}.","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"    void setFinancialRecord(FinancialRecord target, FinancialRecord editedRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"jxrrelo"},"content":"     * Iterates through the financial records and searches for the {@code description} {@code amount} {@code category}.","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"jxrrelo"},"content":"     * {@code description} {@code amount} {@code category} must exist in the budget tracker.","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"jxrrelo"},"content":"    boolean findFinancialRecord(Description description, Amount amount, Set\u003cCategory\u003e categories);","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"jxrrelo"},"content":"     * Resets filters on financial records to display original list","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"jxrrelo"},"content":"    void resetFilter();","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"yuheem"},"content":"     * Sets the budget for the following months.","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"yuheem"},"content":"     * @param budget The specified budget to be set.","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"yuheem"},"content":"    void setBudget(Budget budget);","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"natosy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"deyixtan"},"content":"     * Returns true if the model has previous budget tracker states to restore.","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"deyixtan"},"content":"    boolean canUndoBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"deyixtan"},"content":"     * Returns true if the model has undone budget tracker states to restore.","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"deyixtan"},"content":"    boolean canRedoBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"deyixtan"},"content":"     * Restores the model\u0027s budget tracker to its previous state.","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"deyixtan"},"content":"    void undoBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"deyixtan"},"content":"     * Restores the model\u0027s budget tracker to its previously undone state.","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"deyixtan"},"content":"    void redoBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"deyixtan"},"content":"     * Saves the current budget tracker state for undo/redo.","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"deyixtan"},"content":"    void commitBudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"natosy":1,"yuheem":7,"eksinyue":128,"jxrrelo":16,"deyixtan":24}},{"path":"src/main/java/seedu/budgetbaby/model/BudgetBabyModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":" * Represents the in-memory model of the budget tracker data.","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"public class BudgetBabyModelManager implements BudgetBabyModel {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BudgetBabyModelManager.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    private final VersionedBudgetTracker versionedBudgetTracker;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    private final FilteredList\u003cMonth\u003e filteredMonths;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    private FilteredList\u003cFinancialRecord\u003e filteredFinancialRecords;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     * Initializes a ModelManager with the given budgetTracker and userPrefs.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    public BudgetBabyModelManager(ReadOnlyBudgetTracker budgetTracker, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        super();","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(budgetTracker, userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        logger.fine(\"Initializing with budget tracker: \" + budgetTracker + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        this.versionedBudgetTracker \u003d new VersionedBudgetTracker(budgetTracker);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        filteredMonths \u003d new FilteredList\u003c\u003e(this.versionedBudgetTracker.getMonthList());","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        updateFilteredMonthList(month -\u003e month.isSameMonth(YearMonth.now()));","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"        filteredFinancialRecords \u003d new FilteredList\u003c\u003e(","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"            this.versionedBudgetTracker.getFinancialRecordListOfMonth(YearMonth.now()));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    public BudgetBabyModelManager() {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        this(new BudgetTracker(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"        return userPrefs;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"    public Path getBudgetBabyFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"        return userPrefs.getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"    public void setBudgetBabyFilePath(Path budgetBabyFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(budgetBabyFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"        userPrefs.setBudgetBabyFilePath(budgetBabyFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BudgetTracker \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"    public void setBudgetTracker(ReadOnlyBudgetTracker budgetTracker) {","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"        this.versionedBudgetTracker.resetData(budgetTracker);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"    public ReadOnlyBudgetTracker getBudgetTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"        return versionedBudgetTracker;","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"    public void deleteMonth(Month target) {","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.removeMonth(target);","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"    public void addMonth(Month month) {","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.addMonth(month);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"        updateFilteredMonthList(PREDICATE_SHOW_ALL_RECORDS);","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"    public void setMonth(Month target, Month editedMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(target, editedMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.setMonth(target, editedMonth);","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"    public void setCurrentDisplayMonth(YearMonth month) {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.setCurrentDisplayMonth(month);","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"        updateFilteredMonthList(m -\u003e m.isSameMonth(month));","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"        filteredFinancialRecords \u003d new FilteredList\u003c\u003e(","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"            this.versionedBudgetTracker.getFinancialRecordListOfMonth(month));","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"    public void deleteFinancialRecord(FinancialRecord target) {","lastModifiedDate":"2021-03-09"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.removeFinancialRecord(target);","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"eksinyue"},"content":"    public void addFinancialRecord(FinancialRecord record) {","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"        FinancialRecord toAdd \u003d record;","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.addFinancialRecord(record);","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"        if (!record.getMonth().equals(filteredMonths.get(0))) {","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"            setCurrentDisplayMonth(record.getMonth());","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"eksinyue"},"content":"    public void setFinancialRecord(FinancialRecord target, FinancialRecord editedRecord) {","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(target, editedRecord);","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.setFinancialRecord(target, editedRecord);","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"        if (!editedRecord.getMonth().equals(filteredMonths.get(0))) {","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"eksinyue"},"content":"            setCurrentDisplayMonth(editedRecord.getMonth());","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"jxrrelo"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"jxrrelo"},"content":"    public boolean findFinancialRecord(Description description, Amount amount, Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"jxrrelo"},"content":"        assert true;","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"jxrrelo"},"content":"        boolean result;","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"jxrrelo"},"content":"        Predicate\u003cFinancialRecord\u003e findD \u003d fr -\u003e fr.getDescription().description.equals(description.description);","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"jxrrelo"},"content":"        Predicate\u003cFinancialRecord\u003e findA \u003d fr -\u003e fr.getAmount().getValue().equals(amount.getValue());","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"eksinyue"},"content":"        Predicate\u003cFinancialRecord\u003e findC \u003d fr -\u003e fr.getCategories().containsAll(categories);","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"jxrrelo"},"content":"        Predicate\u003cFinancialRecord\u003e findDA \u003d fr -\u003e fr.getDescription().description.equals(description.description)","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"jxrrelo"},"content":"            \u0026\u0026 fr.getAmount().getValue().equals(amount.getValue());","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"jxrrelo"},"content":"        Predicate\u003cFinancialRecord\u003e findDC \u003d fr -\u003e fr.getDescription().description.equals(description.description)","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 fr.getCategories().containsAll(categories);","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"jxrrelo"},"content":"        Predicate\u003cFinancialRecord\u003e findAC \u003d fr -\u003e fr.getAmount().getValue().equals(amount.getValue())","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 fr.getCategories().containsAll(categories);","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"jxrrelo"},"content":"        Predicate\u003cFinancialRecord\u003e findAll \u003d fr -\u003e fr.getDescription().description.equals(description.description)","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"jxrrelo"},"content":"            \u0026\u0026 fr.getAmount().getValue().equals(amount.getValue())","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 fr.getCategories().containsAll(categories);","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"jxrrelo"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"jxrrelo"},"content":"            if (amount \u003d\u003d null \u0026\u0026 categories !\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"jxrrelo"},"content":"                result \u003d updateFilteredFinancialRecordList(findC);","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"jxrrelo"},"content":"            } else if (amount !\u003d null \u0026\u0026 categories \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"jxrrelo"},"content":"                result \u003d updateFilteredFinancialRecordList(findA);","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"jxrrelo"},"content":"            } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"jxrrelo"},"content":"                result \u003d updateFilteredFinancialRecordList(findAC);","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"jxrrelo"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"jxrrelo"},"content":"        } else if (amount \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"jxrrelo"},"content":"            if (categories \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"jxrrelo"},"content":"                result \u003d updateFilteredFinancialRecordList(findD);","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"jxrrelo"},"content":"            } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"jxrrelo"},"content":"                result \u003d updateFilteredFinancialRecordList(findDC);","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"jxrrelo"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"jxrrelo"},"content":"        } else if (categories \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"jxrrelo"},"content":"            result \u003d updateFilteredFinancialRecordList(findDA);","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"jxrrelo"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"jxrrelo"},"content":"            result \u003d updateFilteredFinancialRecordList(findAll);","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"jxrrelo"},"content":"        return result;","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"jxrrelo"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"jxrrelo"},"content":"    public void resetFilter() {","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"jxrrelo"},"content":"        assert true;","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"jxrrelo"},"content":"        updateFilteredFinancialRecordList(fr -\u003e true);","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"yuheem"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"yuheem"},"content":"    public void setBudget(Budget budget) {","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.setBudget(budget);","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":208,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":209,"author":{"gitId":"eksinyue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":211,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":212,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cMonth\u003e getFilteredMonthList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":213,"author":{"gitId":"eksinyue"},"content":"        return filteredMonths;","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":215,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":216,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":217,"author":{"gitId":"eksinyue"},"content":"    public void updateFilteredMonthList(Predicate\u003cMonth\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":218,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-09"},{"lineNumber":219,"author":{"gitId":"eksinyue"},"content":"        filteredMonths.setPredicate(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":220,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":221,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":222,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":223,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cFinancialRecord\u003e getFilteredFinancialRecordList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"eksinyue"},"content":"        return filteredFinancialRecords;","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":226,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":228,"author":{"gitId":"jxrrelo"},"content":"    public boolean updateFilteredFinancialRecordList(Predicate\u003cFinancialRecord\u003e predicate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":230,"author":{"gitId":"jxrrelo"},"content":"        FilteredList\u003cFinancialRecord\u003e tempFilteredList \u003d new FilteredList\u003c\u003e(filteredFinancialRecords);","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"jxrrelo"},"content":"        tempFilteredList.setPredicate(predicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"jxrrelo"},"content":"        if (!tempFilteredList.isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"eksinyue"},"content":"            filteredFinancialRecords.setPredicate(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":234,"author":{"gitId":"jxrrelo"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":235,"author":{"gitId":"jxrrelo"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"jxrrelo"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":239,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":240,"author":{"gitId":"deyixtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"deyixtan"},"content":"    public boolean canUndoBudgetTracker() {","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"deyixtan"},"content":"        return versionedBudgetTracker.canUndo();","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"deyixtan"},"content":"    public boolean canRedoBudgetTracker() {","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"deyixtan"},"content":"        return versionedBudgetTracker.canRedo();","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"deyixtan"},"content":"    public void undoBudgetTracker() {","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.undo();","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"deyixtan"},"content":"        setCurrentDisplayMonth(getBudgetTracker().getCurrentDisplayMonth().getMonth());","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"deyixtan"},"content":"    public void redoBudgetTracker() {","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.redo();","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"deyixtan"},"content":"        setCurrentDisplayMonth(getBudgetTracker().getCurrentDisplayMonth().getMonth());","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"deyixtan"},"content":"    public void commitBudgetTracker() {","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"deyixtan"},"content":"        versionedBudgetTracker.commit();","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"deyixtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Util methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":272,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-03-09"},{"lineNumber":273,"author":{"gitId":"eksinyue"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":274,"author":{"gitId":"eksinyue"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":275,"author":{"gitId":"eksinyue"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":276,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":277,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":278,"author":{"gitId":"eksinyue"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":279,"author":{"gitId":"eksinyue"},"content":"        if (!(obj instanceof BudgetBabyModelManager)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":280,"author":{"gitId":"eksinyue"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":281,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":282,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":283,"author":{"gitId":"eksinyue"},"content":"        // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":284,"author":{"gitId":"eksinyue"},"content":"        BudgetBabyModelManager other \u003d (BudgetBabyModelManager) obj;","lastModifiedDate":"2021-03-09"},{"lineNumber":285,"author":{"gitId":"deyixtan"},"content":"        return versionedBudgetTracker.equals(other.versionedBudgetTracker)","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2021-03-09"},{"lineNumber":287,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 filteredMonths.equals(other.filteredMonths);","lastModifiedDate":"2021-03-15"},{"lineNumber":288,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":289,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":290,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"yuheem":5,"eksinyue":176,"jxrrelo":62,"deyixtan":47}},{"path":"src/main/java/seedu/budgetbaby/model/BudgetTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.commons.util.InvalidationListenerManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.UniqueMonthList;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":" * Wraps all data at the budget-tracker level","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"public class BudgetTracker implements ReadOnlyBudgetTracker {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    private final InvalidationListenerManager invalidationListenerManager \u003d new InvalidationListenerManager();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    private final UniqueMonthList monthList;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    private Month currentDisplayMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"        monthList \u003d new UniqueMonthList();","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        currentDisplayMonth \u003d monthList.find(YearMonth.now());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    public BudgetTracker() {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * Creates an BudgetTracker using the Months in the {@code toBeCopied}","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    public BudgetTracker(ReadOnlyBudgetTracker toBeCopied) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        this();","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     * Replaces the contents of the month list with {@code months}.","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"     * {@code months} must not contain duplicate months.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    public void setMonthList(List\u003cMonth\u003e months) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        this.monthList.setMonths(months);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"     * Replaces the current display month with {@code month}.","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    public void setCurrentDisplayMonth(YearMonth month) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        this.currentDisplayMonth \u003d monthList.find(month);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    public void resetData(ReadOnlyBudgetTracker newData) {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"        setMonthList(newData.getMonthList());","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"        setCurrentDisplayMonth(newData.getCurrentDisplayMonth().getMonth());","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"    //// month-level operations","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"     * Adds a month to the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"    public void addMonth(Month month) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        monthList.add(month);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"     * Returns a boolean value showing if the month exists.","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"    public boolean hasMonth(Month month) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"        return monthList.contains(month);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"     * Returns a month representing the given YearMonth.","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"    public Month findMonth(YearMonth month) {","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"        return monthList.find(month);","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"     * Replaces the given month {@code target} in the list with {@code editedMonth}.","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"     * {@code target} must exist in the budegt tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"     * The month identity of {@code editedRecord} must not be the same as another existing month in the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"    public void setMonth(Month target, Month editedMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(editedMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"        monthList.setMonth(target, editedMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"     * Removes {@code key} from this {@code BudgetTracker}.","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"     * {@code key} must exist in the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"    public void removeMonth(Month key) {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"        monthList.remove(key);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"    //// financial-record-level operations","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"     * Adds a financial record to the budget tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"     * Adds a month to the budget tracker.","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"    public void addFinancialRecord(FinancialRecord r) {","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"        monthList.addFinancialRecord(r);","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"     * Replaces the given financial record {@code target} in the list with {@code editedRecord}.","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"     * {@code target} must exist in the budegt tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"    public void setFinancialRecord(FinancialRecord target, FinancialRecord editedRecord) {","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(editedRecord);","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"        monthList.setFinancialRecord(target, editedRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"     * Removes {@code key} from this {@code BudgetTracker}.","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":"     * {@code key} must exist in the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"eksinyue"},"content":"    public void removeFinancialRecord(FinancialRecord key) {","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"eksinyue"},"content":"        monthList.removeFinancialRecord(key);","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the financial record list of the given month.","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"eksinyue"},"content":"    ObservableList\u003cFinancialRecord\u003e getFinancialRecordListOfMonth(YearMonth month) {","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"eksinyue"},"content":"        currentDisplayMonth \u003d monthList.find(month);","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"eksinyue"},"content":"        return this.monthList.getFinancialRecordOfMonth(month);","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"eksinyue"},"content":"    //// budget-level operations","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"yuheem"},"content":"     * Sets the budget for the following months.","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"yuheem"},"content":"     * @param budget The specified budget to be set.","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"yuheem"},"content":"    public void setBudget(Budget budget) {","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"eksinyue"},"content":"        monthList.setBudget(budget);","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"deyixtan"},"content":"        notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"deyixtan"},"content":"    //// dependency notification methods","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"deyixtan"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"deyixtan"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"deyixtan"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"deyixtan"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"deyixtan"},"content":"     * Notifies listeners that the budget tracker has been modified.","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"deyixtan"},"content":"    public void notifyObservers() {","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"deyixtan"},"content":"        invalidationListenerManager.callListeners(this);","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":184,"author":{"gitId":"eksinyue"},"content":"    //// util methods","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"deyixtan"},"content":"    public ObservableList\u003cMonth\u003e getMonthList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"deyixtan"},"content":"        return monthList.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"deyixtan"},"content":"    public Month getCurrentDisplayMonth() {","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"deyixtan"},"content":"        return this.currentDisplayMonth;","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"deyixtan"},"content":"    public BudgetTracker getDeepClone() {","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"deyixtan"},"content":"        BudgetTracker clone \u003d new BudgetTracker();","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"deyixtan"},"content":"        List\u003cMonth\u003e cloneMthList \u003d monthList.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"deyixtan"},"content":"        clone.setMonthList(cloneMthList);","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"deyixtan"},"content":"        boolean foundCurrentMonth \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"deyixtan"},"content":"        for (Month cloneMth : cloneMthList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"deyixtan"},"content":"            Month tmpMth \u003d new Month(cloneMth.getFinancialRecords().getDeepClone(),","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"deyixtan"},"content":"                    cloneMth.getBudget(), cloneMth.getMonth());","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"deyixtan"},"content":"            clone.setMonth(cloneMth, tmpMth);","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"deyixtan"},"content":"            if (!foundCurrentMonth \u0026\u0026 tmpMth.equals(currentDisplayMonth)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"deyixtan"},"content":"                clone.currentDisplayMonth \u003d tmpMth;","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"deyixtan"},"content":"                foundCurrentMonth \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"deyixtan"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"deyixtan"},"content":"        if (!foundCurrentMonth) {","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"deyixtan"},"content":"            clone.currentDisplayMonth \u003d currentDisplayMonth;","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"deyixtan"},"content":"        return clone;","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":222,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":223,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":224,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":225,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof BudgetTracker // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":226,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 monthList.equals(((BudgetTracker) other).monthList));","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":228,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":229,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":230,"author":{"gitId":"eksinyue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":231,"author":{"gitId":"eksinyue"},"content":"        return monthList.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":232,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":233,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"deyixtan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"deyixtan"},"content":"        return monthList.asUnmodifiableObservableList().size() + \" months\";","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"deyixtan"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"},{"lineNumber":240,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"yuheem":8,"eksinyue":155,"deyixtan":77}},{"path":"src/main/java/seedu/budgetbaby/model/ReadOnlyBudgetTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":" * Unmodifiable view of a budget tracker","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public interface ReadOnlyBudgetTracker extends Observable {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"     * Returns an unmodifiable view of the month list.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    ObservableList\u003cMonth\u003e getMonthList();","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"     *  Returns the current display month.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    Month getCurrentDisplayMonth();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"     * Notifies all observers","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    void notifyObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"     * Returns a read-only, deep copy of BudgetTracker.","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    ReadOnlyBudgetTracker getDeepClone();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":15,"deyixtan":16}},{"path":"src/main/java/seedu/budgetbaby/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    Path getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"eksinyue":3,"-":13}},{"path":"src/main/java/seedu/budgetbaby/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    private Path budgetBabyFilePath \u003d Paths.get(\"data\", \"budgetbaby.json\");","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    public UserPrefs() {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        setBudgetBabyFilePath(newUserPrefs.getBudgetBabyFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    public Path getBudgetBabyFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        return budgetBabyFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    public void setBudgetBabyFilePath(Path budgetBabyFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(budgetBabyFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        this.budgetBabyFilePath \u003d budgetBabyFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 budgetBabyFilePath.equals(o.budgetBabyFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"        return Objects.hash(guiSettings, budgetBabyFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"        sb.append(\"\\nLocal data file location : \" + budgetBabyFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":14,"-":74}},{"path":"src/main/java/seedu/budgetbaby/model/VersionedBudgetTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.model;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":" * {@code BudgetTracker} that keeps track of its own history.","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"public class VersionedBudgetTracker extends BudgetTracker {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"    private final List\u003cReadOnlyBudgetTracker\u003e budgetTrackerStateList;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    private int currentStatePointer;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"     * Initializes a VersionedBudgetTracker with the given {@code initialState}.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    public VersionedBudgetTracker(ReadOnlyBudgetTracker initialState) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"        super(initialState);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"        BudgetTracker firstState \u003d new BudgetTracker(initialState);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"        firstState.setCurrentDisplayMonth(YearMonth.now());","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"        budgetTrackerStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"        budgetTrackerStateList.add(firstState.getDeepClone());","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     * Saves a copy of the current {@code BudgetTracker} state at the end of the state list.","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"     * Undone states are removed from the state list.","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    public void commit() {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"        budgetTrackerStateList.subList(currentStatePointer + 1, budgetTrackerStateList.size()).clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"        budgetTrackerStateList.add(this.getDeepClone());","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        currentStatePointer++;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"     * Restores the budget tracker to its previous state.","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    public void undo() {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"        if (!canUndo()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"            throw new NoUndoableStateException();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"        currentStatePointer--;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        resetData(budgetTrackerStateList.get(currentStatePointer).getDeepClone());","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"     * Restores the budget tracker to its previously undone state.","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"    public void redo() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"        if (!canRedo()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"deyixtan"},"content":"            throw new NoRedoableStateException();","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"        currentStatePointer++;","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"        resetData(budgetTrackerStateList.get(currentStatePointer).getDeepClone());","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"     * Returns true if {@code undo()} has budget tracker states to undo.","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"    public boolean canUndo() {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"     * Returns true if {@code redo()} has budget tracker states to redo.","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"    public boolean canRedo() {","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"        return currentStatePointer \u003c budgetTrackerStateList.size() - 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"        if (!(other instanceof VersionedBudgetTracker)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"        VersionedBudgetTracker otherVersionedBudgetTracker \u003d (VersionedBudgetTracker) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"        // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"        return super.equals(otherVersionedBudgetTracker)","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"                \u0026\u0026 budgetTrackerStateList.equals(otherVersionedBudgetTracker.budgetTrackerStateList)","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"                \u0026\u0026 currentStatePointer \u003d\u003d otherVersionedBudgetTracker.currentStatePointer;","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"     * Thrown when trying to {@code undo()} but can\u0027t.","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"    public static class NoUndoableStateException extends RuntimeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"        private NoUndoableStateException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"            super(\"Current state pointer at start of budgetTrackerState list, unable to undo.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"     * Thrown when trying to {@code redo()} but can\u0027t.","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"    public static class NoRedoableStateException extends RuntimeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"        private NoRedoableStateException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"deyixtan"},"content":"            super(\"Current state pointer at end of budgetTrackerState list, unable to redo.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"deyixtan":112}},{"path":"src/main/java/seedu/budgetbaby/model/budget/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yuheem"},"content":"package seedu.budgetbaby.model.budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"yuheem"},"content":" * Represents the abstraction of a budget set by the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"yuheem"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":"public class Budget {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":"    public static final Double DEFAULT_BUDGET \u003d 1000.0;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"yuheem"},"content":"        \"Budget amount should be a positive number, and it should not be blank\";","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    protected Double amount;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"yuheem"},"content":"     * Default constructor.","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    public Budget() {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        this.amount \u003d DEFAULT_BUDGET;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"yuheem"},"content":"     * Initializes a Budget with a specified amount.","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"yuheem"},"content":"     * @param amount The amount specified by the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    public Budget(Double amount) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"yuheem"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code Budget}.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     * @param amount A valid budget.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    public Budget(String amount) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(amount);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        checkArgument(isValidBudget(amount), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        this.amount \u003d Double.parseDouble(amount);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     * Returns true if a given string is a valid budget.","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    public static boolean isValidBudget(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"yuheem"},"content":"        double amount;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"yuheem"},"content":"            amount \u003d Double.parseDouble(test);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"yuheem"},"content":"        return Double.compare(amount, 0.0) \u003e\u003d 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"yuheem"},"content":"     * @return The budget amount set by the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    public Double getAmount() {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"yuheem"},"content":"        return amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"yuheem"},"content":"     * Sets the budget to a specified amount.","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"yuheem"},"content":"     * @param amount The amount specified by the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    public void setAmount(Double amount) {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"yuheem"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"yuheem"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"yuheem"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"yuheem"},"content":"        if (Double.compare(amount, 0.0) \u003d\u003d 0) {","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"yuheem"},"content":"            return \"No budget set\";","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"yuheem"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"yuheem"},"content":"        return String.format(\"$%.2f\", amount);","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"yuheem"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"yuheem"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"yuheem"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"yuheem"},"content":"            || (other instanceof Budget","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"yuheem"},"content":"            \u0026\u0026 Double.compare(amount, ((Budget) other).amount) \u003d\u003d 0);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"yuheem"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"yuheem":51,"eksinyue":35}},{"path":"src/main/java/seedu/budgetbaby/model/month/Month.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.month;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.exception.MonthMismatchException;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":" * Represents a Month in the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"public class Month {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    // Data fields","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"        \"Month should follow the format of mm-yyyy. Example: 01-2021.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"MM-uuuu\");","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"MMMM yyyy\");","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM yyyy\");","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"natosy"},"content":"    private final YearMonth month;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    private FinancialRecordList records;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    private Budget budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code Month}.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     * @param records   A list of financial records.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     * @param budget    A valid budget.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"     * @param yearMonth A valid year month.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    public Month(FinancialRecordList records, Budget budget, YearMonth yearMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"        this.records \u003d records;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        this.month \u003d yearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     * Constructs a new {@code Month} with no records and default budget.","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"     * @param yearMonth A valid year month.","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    public Month(YearMonth yearMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        this.records \u003d new FinancialRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        this.budget \u003d new Budget();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        this.month \u003d yearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    public FinancialRecordList getFinancialRecords() {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"        return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cFinancialRecord\u003e getFinancialRecordList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"        return records.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    public Budget getBudget() {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"        return budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"    public YearMonth getMonth() {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        return month;","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"     * Adds a financial record to the month.","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"     * The timestamp of the financial record must match the month.","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"    public void addFinancialRecord(FinancialRecord toAdd) {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"        if (!toAdd.getMonth().equals(this.month)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"            throw new MonthMismatchException();","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"        records.add(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"    public void deleteFinancialRecord(FinancialRecord target) {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"        records.remove(target);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"    public void setFinancialRecord(FinancialRecord target, FinancialRecord editedRecord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(target, editedRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"        records.setFinancialRecord(target, editedRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"jxrrelo"},"content":"     * Filters the financial records to a specified category.","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"jxrrelo"},"content":"    public void filterByCategory(Category category) {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"jxrrelo"},"content":"        requireNonNull(category);","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"jxrrelo"},"content":"        records.filterByCategory(category);","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"     * Sets the budget for the following months.","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"     * @param budget The specified budget to be set.","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"    public void setBudget(Budget budget) {","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"natosy"},"content":"     * Returns total expenses of the month.","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"natosy"},"content":"     * @return total expenses","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"natosy"},"content":"    public Double getTotalExpenses() {","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"natosy"},"content":"        return records.getTotalExpenses();","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"     * Check if {@code yearMonthStr} is of the valid format.","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"     * Valid format example: 01-2020","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"    public static boolean isValidMonthStr(String test) {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"eksinyue"},"content":"        boolean isValid;","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"            // ResolverStyle.STRICT for 30, 31 days checking, and also leap year.","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"            YearMonth.parse(test,","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"eksinyue"},"content":"                inputFormatter.withResolverStyle(ResolverStyle.STRICT)","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"            );","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"            isValid \u003d true;","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"eksinyue"},"content":"        return isValid;","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"eksinyue"},"content":"     * Returns true if both months have the same.","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"eksinyue"},"content":"     * This defines a weaker notion of equality between two months.","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"eksinyue"},"content":"    public boolean isSameMonth(Month otherMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"        if (otherMonth \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"eksinyue"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"eksinyue"},"content":"        return otherMonth !\u003d null","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 otherMonth.getMonth().equals(getMonth());","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"eksinyue"},"content":"     * Returns true if the month object is representing the YearMonth object.","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"eksinyue"},"content":"    public boolean isSameMonth(YearMonth yearMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"eksinyue"},"content":"        return getMonth().equals(yearMonth);","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"eksinyue"},"content":"     * Returns true if both months have the same identity and data fields.","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"eksinyue"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"eksinyue"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"eksinyue"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"eksinyue"},"content":"        if (!(other instanceof Month)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"eksinyue"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"eksinyue"},"content":"        Month otherMonth \u003d (Month) other;","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"eksinyue"},"content":"        return otherMonth.getFinancialRecords().equals(getFinancialRecords())","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 otherMonth.getBudget().equals(getBudget())","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 otherMonth.getMonth().equals(getMonth());","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"eksinyue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"eksinyue"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"eksinyue"},"content":"        return Objects.hash(records, budget, month);","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"eksinyue"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"eksinyue"},"content":"        return month.format(displayFormatter);","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"natosy":5,"yuheem":4,"eksinyue":173,"deyixtan":2,"jxrrelo":9}},{"path":"src/main/java/seedu/budgetbaby/model/month/UniqueMonthList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.month;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.YearMonthParser;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.exception.DuplicateMonthException;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.exception.MonthNotFoundException;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":" * A list of months that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":" * A month is considered unique by comparing using {@code Month#isSameMonth(Month)}. As such, adding and updating of","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":" * months uses Month#isSameMonth(Month) for equality so as to ensure that the month being added or updated is","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":" * unique in terms of identity in the UniqueMonthList. However, the removal of a month uses Month#equals(Object) so","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":" * as to ensure that the month with exactly the same fields will be removed.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":" *","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":" * @see Month#isSameMonth(Month) (Month)","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"public class UniqueMonthList implements Iterable\u003cMonth\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    private final ObservableList\u003cMonth\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    private final ObservableList\u003cMonth\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * Returns true if the list contains an equivalent month as the given argument.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    public boolean contains(Month toCheck) {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     * Returns true if the list contains a month representing the given YearMonth.","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    public boolean contains(YearMonth yearMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(yearMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        return internalList.stream().anyMatch(m -\u003e m.isSameMonth(yearMonth));","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"     * Finds the month representing the given YearMonth in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    public Month find(YearMonth yearMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(yearMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        if (!contains(yearMonth)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"            add(yearMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"        return internalList.stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"            .filter(m -\u003e m.isSameMonth(yearMonth))","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"            .findFirst().get();","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"     * Adds a month to the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"     * The month must not already exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    public void add(Month toAdd) {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"            throw new DuplicateMonthException();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"yuheem"},"content":"        YearMonth prevYearMonth \u003d toAdd.getMonth().minusMonths(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"yuheem"},"content":"        if (contains(prevYearMonth)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"yuheem"},"content":"            Month prevMonth \u003d find(prevYearMonth);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"yuheem"},"content":"            toAdd.setBudget(prevMonth.getBudget());","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"yuheem"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"     * Adds a month representing the given YearMonth to the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"     * The month must not already exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"    public void add(YearMonth yearMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(yearMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"        if (contains(yearMonth)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"            throw new DuplicateMonthException();","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"yuheem"},"content":"        Month toAdd \u003d new Month(yearMonth);","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"yuheem"},"content":"        YearMonth prevYearMonth \u003d yearMonth.minusMonths(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"yuheem"},"content":"        if (contains(prevYearMonth)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"yuheem"},"content":"            Month prevMonth \u003d find(prevYearMonth);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"yuheem"},"content":"            toAdd.setBudget(prevMonth.getBudget());","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"yuheem"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"yuheem"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"     * Replaces the month {@code target} in the list with {@code editedMonth}.","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"     * The month identity of {@code editedMonth} must not be the same as another existing month in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"    public void setMonth(Month target, Month editedMonth) {","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(target, editedMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"            throw new MonthNotFoundException();","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"        if (!target.isSameMonth(editedMonth) \u0026\u0026 contains(editedMonth)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"            throw new DuplicateMonthException();","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"eksinyue"},"content":"        internalList.set(index, editedMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"     * Removes the equivalent month from the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"     * The month must exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"    public void remove(Month toRemove) {","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"            throw new MonthNotFoundException();","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"     * {@code months} must not contain duplicate persons.","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"    public void setMonths(UniqueMonthList replacement) {","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"eksinyue"},"content":"     * Replaces the contents of this list with {@code months}.","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"eksinyue"},"content":"     * {@code months} must not contain duplicate persons.","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"eksinyue"},"content":"    public void setMonths(List\u003cMonth\u003e months) {","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(months);","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"        if (!monthsAreUnique(months)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"eksinyue"},"content":"            throw new DuplicateMonthException();","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"eksinyue"},"content":"        internalList.setAll(months);","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"eksinyue"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cMonth\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"eksinyue"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"eksinyue"},"content":"    /// financial-record","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"eksinyue"},"content":"     * Finds the month which the given financial record belongs to.","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"eksinyue"},"content":"     * If the month does not exit in the list, a new month will be added.","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"eksinyue"},"content":"    public Month findFinancialRecordMonth(FinancialRecord r) {","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(r);","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"eksinyue"},"content":"        YearMonth yearMonth \u003d YearMonthParser.getYearMonth(r.getTimestamp());","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"eksinyue"},"content":"        if (!contains(yearMonth)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"eksinyue"},"content":"            add(yearMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"eksinyue"},"content":"        return find(yearMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"eksinyue"},"content":"     * Adds a financial record to the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"eksinyue"},"content":"    public void addFinancialRecord(FinancialRecord r) {","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(r);","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"eksinyue"},"content":"        Month month \u003d findFinancialRecordMonth(r);","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"eksinyue"},"content":"        month.addFinancialRecord(r);","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"eksinyue"},"content":"     * Replaces the given financial record {@code target} in the list with {@code editedRecord}.","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"yuheem"},"content":"     * {@code target} must exist in the budget tracker.","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"eksinyue"},"content":"    public void setFinancialRecord(FinancialRecord target, FinancialRecord editedRecord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(editedRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"eksinyue"},"content":"        Month targetMonth \u003d findFinancialRecordMonth(target);","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"eksinyue"},"content":"        Month editedMonth \u003d findFinancialRecordMonth(editedRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"eksinyue"},"content":"        targetMonth.deleteFinancialRecord(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"eksinyue"},"content":"        editedMonth.addFinancialRecord(editedRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"eksinyue"},"content":"     * Removes {@code key} from this {@code BudgetTracker}.","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"eksinyue"},"content":"     * {@code key} must exist in the budget tracker.","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"eksinyue"},"content":"    public void removeFinancialRecord(FinancialRecord key) {","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(key);","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"eksinyue"},"content":"        Month month \u003d findFinancialRecordMonth(key);","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"eksinyue"},"content":"        month.deleteFinancialRecord(key);","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"eksinyue"},"content":"     * Returns a specific month\u0027s financial record list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cFinancialRecord\u003e getFinancialRecordOfMonth(YearMonth month) {","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"eksinyue"},"content":"        return find(month).getFinancialRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"eksinyue"},"content":"    /// budget","lastModifiedDate":"2021-03-15"},{"lineNumber":213,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"eksinyue"},"content":"     * Sets the budget for the following months.","lastModifiedDate":"2021-03-15"},{"lineNumber":216,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":217,"author":{"gitId":"eksinyue"},"content":"     * @param budget The specified budget to be set.","lastModifiedDate":"2021-03-15"},{"lineNumber":218,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":219,"author":{"gitId":"eksinyue"},"content":"    public void setBudget(Budget budget) {","lastModifiedDate":"2021-03-15"},{"lineNumber":220,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(budget);","lastModifiedDate":"2021-03-15"},{"lineNumber":221,"author":{"gitId":"yuheem"},"content":"        YearMonth currYearMonth \u003d YearMonth.now();","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"yuheem"},"content":"        Month currentMonth \u003d find(currYearMonth);","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"yuheem"},"content":"        currentMonth.setBudget(budget);","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"yuheem"},"content":"        for (int i \u003d 1; i \u003c\u003d 12; i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"yuheem"},"content":"            Month month \u003d find(currYearMonth.plusMonths(i));","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"yuheem"},"content":"            month.setBudget(budget);","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"yuheem"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":229,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":230,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":231,"author":{"gitId":"eksinyue"},"content":"    public Iterator\u003cMonth\u003e iterator() {","lastModifiedDate":"2021-03-15"},{"lineNumber":232,"author":{"gitId":"eksinyue"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-15"},{"lineNumber":233,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":234,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":235,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":236,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":237,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":238,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof UniqueMonthList // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":239,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 internalList.equals(((UniqueMonthList) other).internalList));","lastModifiedDate":"2021-03-15"},{"lineNumber":240,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":241,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":242,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":243,"author":{"gitId":"eksinyue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":244,"author":{"gitId":"eksinyue"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":245,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":246,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":247,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":248,"author":{"gitId":"eksinyue"},"content":"     * Returns true if {@code months} contains only unique months.","lastModifiedDate":"2021-03-15"},{"lineNumber":249,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":250,"author":{"gitId":"eksinyue"},"content":"    private boolean monthsAreUnique(List\u003cMonth\u003e months) {","lastModifiedDate":"2021-03-15"},{"lineNumber":251,"author":{"gitId":"eksinyue"},"content":"        for (int i \u003d 0; i \u003c months.size() - 1; i++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":252,"author":{"gitId":"eksinyue"},"content":"            for (int j \u003d i + 1; j \u003c months.size(); j++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":253,"author":{"gitId":"eksinyue"},"content":"                if (months.get(i).isSameMonth(months.get(j))) {","lastModifiedDate":"2021-03-15"},{"lineNumber":254,"author":{"gitId":"eksinyue"},"content":"                    return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":255,"author":{"gitId":"eksinyue"},"content":"                }","lastModifiedDate":"2021-03-15"},{"lineNumber":256,"author":{"gitId":"eksinyue"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":257,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":258,"author":{"gitId":"eksinyue"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":259,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":260,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"yuheem":20,"eksinyue":240}},{"path":"src/main/java/seedu/budgetbaby/model/month/exception/DuplicateMonthException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.month.exception;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":" * Signals that the operation will result in duplicate Months (Months are considered duplicates if they have the same","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":" * identity).","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"public class DuplicateMonthException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"    public DuplicateMonthException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"        super(\"Operaton would result in duplicate months\");","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"eksinyue":12}},{"path":"src/main/java/seedu/budgetbaby/model/month/exception/MonthMismatchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.month.exception;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":" * Signals that the operation is unable to find the specified month.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"public class MonthMismatchException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"eksinyue":7}},{"path":"src/main/java/seedu/budgetbaby/model/month/exception/MonthNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.month.exception;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":" * Signals that the operation is unable to find the specified month.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"public class MonthNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"eksinyue":7}},{"path":"src/main/java/seedu/budgetbaby/model/record/Amount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.record;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":" * Represents a Financial record\u0027s amount in the budget tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAmount(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"public class Amount {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"        \"Amount should be a number, and it should not be blank\";","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    public final Double value;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     * @param value A valid phone number.","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    public Amount(String value) {","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        checkArgument(isValidAmount(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        this.value \u003d parseValue(Double.parseDouble(value));","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    public static boolean isValidAmount(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"            Double.parseDouble(test);","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     * Returns an amount that has exactly 2 decimal places.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    public static Double parseValue(Double value) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        return (double) (Math.round(value * 100.0) / 100.0);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"yuheem"},"content":"     * Returns the value of the amount.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"yuheem"},"content":"    public Double getValue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"yuheem"},"content":"        return value;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        return value.toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof Amount // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 value.equals(((Amount) other).value)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"yuheem":7,"eksinyue":63}},{"path":"src/main/java/seedu/budgetbaby/model/record/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"package seedu.budgetbaby.model.record;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":" * Represents a Category in the budget tracker.","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"public class Category {","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Categories should be alphanumeric\";","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"    public final String category;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"    public Category(String tagName) {","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"        this.category \u003d tagName;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"     * Returns the tag name.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    public String getCategory() {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"        return this.category;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"                || (other instanceof Category // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"                \u0026\u0026 category.equals(((Category) other).category)); // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"        return category.hashCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"        return \u0027[\u0027 + category + \u0027]\u0027;","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"-":42,"jxrrelo":14,"deyixtan":5}},{"path":"src/main/java/seedu/budgetbaby/model/record/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.record;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":" * Represents a Financial record\u0027s description in the budget tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":" * Guarantees: is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"public class Description {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"        \"Financial record description should not be blank\";","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    public final String description;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    public Description(String description) {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     * Returns true if a given string is a valid description (not blank).","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        return !test.isBlank();","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        return description;","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        return description.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":53}},{"path":"src/main/java/seedu/budgetbaby/model/record/FinancialRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.record;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.YearMonthParser;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":" * Represents a Financial Record in the budget tracker.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"public class FinancialRecord {","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public static final String TIMESTAMP_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        \"Timestamp should follow the format of dd-mm-yyyy. Example: 31-12-2020.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    private static final String FINANCIAL_RECORD_DETAILS_DELIMITER \u003d \" | \";","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    private static final SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    // Data fields","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    private final Description description;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    private final Amount amount;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    private final Date timestamp;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"    private final Set\u003cCategory\u003e categories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code FinancialRecord}.","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     * @param amount      A valid amount.","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"     * @param categories  A valid category.","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"    public FinancialRecord(Description description, Amount amount, Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        this.timestamp \u003d new Date();","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"        this.categories.addAll(categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code FinancialRecord}.","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"     * @param amount      A valid amount.","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     * @param timestamp   A valid timestamp.","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    public FinancialRecord(Description description, Amount amount, Date timestamp, Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"        this.categories.addAll(categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        return description;","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    public Amount getAmount() {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"        return amount;","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"    public Date getTimestamp() {","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"        return timestamp;","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"    public String getTimestampStr() {","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        return formatter.format(timestamp);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"    public YearMonth getMonth() {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        return YearMonthParser.getYearMonth(this.timestamp);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"    public Set\u003cCategory\u003e getCategories() {","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"jxrrelo"},"content":"        return Collections.unmodifiableSet(categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"     * Check if {@code test} is of the valid format.","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"     * Valid format example: 01-01-2021","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"    public static boolean isValidTimestamp(String test) {","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"        boolean isValid;","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"            formatter.parse(test);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"            isValid \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"        return isValid;","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"     * Converts a valid dateStr string to Date.","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"    public static Date getValidTimeStamp(String dateStr) {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"            return formatter.parse(dateStr);","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"            return null;","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"eksinyue"},"content":"        return Objects.hash(description, amount, timestamp);","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"        builder.append(getTimestampStr())","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"            .append(FINANCIAL_RECORD_DETAILS_DELIMITER)","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":"            .append(getDescription())","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"            .append(FINANCIAL_RECORD_DETAILS_DELIMITER)","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"            .append(getAmount());","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"        Set\u003cCategory\u003e categories \u003d getCategories();","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"jxrrelo"},"content":"        if (!categories.isEmpty()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"jxrrelo"},"content":"            builder.append(\"; Categories: \");","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"jxrrelo"},"content":"            categories.forEach(builder::append);","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"eksinyue"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"eksinyue":118,"jxrrelo":17,"deyixtan":1}},{"path":"src/main/java/seedu/budgetbaby/model/record/FinancialRecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.record;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.exception.FinancialRecordNotFoundException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":" * A list of financial records.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"public class FinancialRecordList implements Iterable\u003cFinancialRecord\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    private final ObservableList\u003cFinancialRecord\u003e internalList;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    private final ObservableList\u003cFinancialRecord\u003e internalUnmodifiableList;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     * Initializes a FinancialRecordList.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    public FinancialRecordList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        this.internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        this.internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"     * Initializes a FinancialRecordList with the given {@code frList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"    public FinancialRecordList(List\u003cFinancialRecord\u003e frList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"        this.internalList \u003d FXCollections.observableArrayList(frList);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"        this.internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"     * Adds a financial record to the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    public void add(FinancialRecord toAdd) {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        sort();","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     * Replaces the financial record {@code target} in the list with {@code editedFinancialRecord}.","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    public void setFinancialRecord(FinancialRecord target, FinancialRecord editedFinancialRecord) {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(target, editedFinancialRecord);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"            throw new FinancialRecordNotFoundException();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"        internalList.set(index, editedFinancialRecord);","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"        sort();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"     * Removes the financial record from the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"     * The financial record must exist in the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"    public void remove(FinancialRecord toRemove) {","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"            throw new FinancialRecordNotFoundException();","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"     * Sorts the financial record list.","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"    public void sort() {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"        FXCollections.sort(internalList, Comparator.comparing(FinancialRecord::getTimestamp));","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"    public void setFinancialRecords(FinancialRecordList replacement) {","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"        sort();","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"     * Replaces the contents of this list with {@code records}.","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"    public void setFinancialRecords(List\u003cFinancialRecord\u003e records) {","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"        requireAllNonNull(records);","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"        internalList.setAll(records);","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"        sort();","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"jxrrelo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"jxrrelo"},"content":"     * Filters financial records according to category.","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"jxrrelo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"jxrrelo"},"content":"    public void filterByCategory(Category category) {","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"jxrrelo"},"content":"        requireAllNonNull(category);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"        internalList.removeIf(fr -\u003e !fr.getCategories().isEmpty());","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"yuheem"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"yuheem"},"content":"     * Returns total expenses incurred by financial records in the internal list.","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"yuheem"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"yuheem"},"content":"    public Double getTotalExpenses() {","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"yuheem"},"content":"        return internalList.stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"yuheem"},"content":"            .mapToDouble(fr -\u003e fr.getAmount().getValue())","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"yuheem"},"content":"            .reduce(0.0, Double::sum);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"    public ObservableList\u003cFinancialRecord\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"     * Returns a deep copy of the FinancialRecordList object","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"    public FinancialRecordList getDeepClone() {","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"deyixtan"},"content":"        return new FinancialRecordList(this.internalUnmodifiableList);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"    public Iterator\u003cFinancialRecord\u003e iterator() {","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"eksinyue"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"eksinyue"},"content":"            || (other instanceof FinancialRecordList// instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"eksinyue"},"content":"            \u0026\u0026 internalList.equals(((FinancialRecordList) other).internalList));","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"eksinyue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"yuheem":9,"eksinyue":106,"deyixtan":25,"jxrrelo":7}},{"path":"src/main/java/seedu/budgetbaby/model/record/exception/FinancialRecordNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.record.exception;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":" * Signals that the operation is unable to find the specified financial record.","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"public class FinancialRecordNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":7}},{"path":"src/main/java/seedu/budgetbaby/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.model.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"    public static Set\u003cCategory\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"            .map(Category::new)","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"    public static FinancialRecord[] getSampleFinancialRecords() {","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"        return new FinancialRecord[]{","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"            new FinancialRecord(new Description(\"[Sample Financial Record] Lunch\"),","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"                new Amount(\"10\"), getTagSet(\"Food\")),","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"            new FinancialRecord(new Description(\"[Sample Financial Record] Dinner\"),","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"                new Amount(\"10.50\"), getTagSet(\"Food\")),","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        };","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"    public static ReadOnlyBudgetTracker getSampleBudgetTracker() {","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"        BudgetTracker sample \u003d new BudgetTracker();","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        for (FinancialRecord sampleRecord : getSampleFinancialRecords()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"            sample.addFinancialRecord(sampleRecord);","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"        return sample;","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"eksinyue":29,"-":49,"jxrrelo":3}},{"path":"src/main/java/seedu/budgetbaby/storage/BudgetBabyStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":" * API of the Storage component","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"public interface BudgetBabyStorage extends BudgetTrackerStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    Path getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    Optional\u003cReadOnlyBudgetTracker\u003e readBudgetTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    void saveBudgetTracker(ReadOnlyBudgetTracker budgetTracker) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":32}},{"path":"src/main/java/seedu/budgetbaby/storage/BudgetBabyStorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":" * Manages storage of BudgetBaby data in local storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"public class BudgetBabyStorageManager implements BudgetBabyStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BudgetBabyStorageManager.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    private BudgetTrackerStorage budgetTrackerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"     * Creates a {@code StorageManager} with the given {@code BudgetTrackerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    public BudgetBabyStorageManager(BudgetTrackerStorage budgetTrackerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        super();","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"        this.budgetTrackerStorage \u003d budgetTrackerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    public Path getBudgetBabyFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        return budgetTrackerStorage.getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    public Optional\u003cReadOnlyBudgetTracker\u003e readBudgetTracker() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"        return readBudgetTracker(budgetTrackerStorage.getBudgetBabyFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    public Optional\u003cReadOnlyBudgetTracker\u003e readBudgetTracker(Path filePath)","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"        throws DataConversionException, IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"        return budgetTrackerStorage.readBudgetTracker(filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"    public void saveBudgetTracker(ReadOnlyBudgetTracker budgetTracker) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        saveBudgetTracker(budgetTracker, budgetTrackerStorage.getBudgetBabyFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"    public void saveBudgetTracker(ReadOnlyBudgetTracker budgetTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"        budgetTrackerStorage.saveBudgetTracker(budgetTracker, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":80}},{"path":"src/main/java/seedu/budgetbaby/storage/BudgetTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":" * Represents a storage for {@link BudgetTracker}.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"public interface BudgetTrackerStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    Path getBudgetBabyFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"     * Returns BudgetTracker data as a {@link ReadOnlyBudgetTracker}.","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    Optional\u003cReadOnlyBudgetTracker\u003e readBudgetTracker() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"     * @see #getBudgetBabyFilePath()","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    Optional\u003cReadOnlyBudgetTracker\u003e readBudgetTracker(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * Saves the given {@link ReadOnlyBudgetTracker} to the storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     * @param budgetTracker cannot be null.","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    void saveBudgetTracker(ReadOnlyBudgetTracker budgetTracker) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     * @see #saveBudgetTracker(ReadOnlyBudgetTracker)","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    void saveBudgetTracker(ReadOnlyBudgetTracker budgetTracker, Path filePath) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"eksinyue":48}},{"path":"src/main/java/seedu/budgetbaby/storage/JsonAdaptedFinancialRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.abstorage.JsonAdaptedTag;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Amount;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.Description;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":" * Jackson-friendly version of {@link FinancialRecord}.","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"class JsonAdaptedFinancialRecord {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Financial Record\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    private final String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    private final String amount;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    private final Date timestamp;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code JsonAdaptedFinancialRecord} with the given financial record details.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    public JsonAdaptedFinancialRecord(@JsonProperty(\"description\") String description,","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"                                      @JsonProperty(\"amount\") String amount,","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"                                      @JsonProperty(\"timestamp\") Date timestamp,","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"                                      @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     * Converts a given {@code FinancialRecord} into this class for Jackson use.","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"    public JsonAdaptedFinancialRecord(FinancialRecord source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        amount \u003d source.getAmount().value.toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        timestamp \u003d source.getTimestamp();","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        tagged.addAll(source.getCategories().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"     * Converts this Jackson-friendly adapted financial record object into the model\u0027s {@code FinancialRecord} object.","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    public FinancialRecord toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"                Description.class.getSimpleName()));","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        if (amount \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Amount.class.getSimpleName()));","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"        if (!Amount.isValidAmount(amount)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"            throw new IllegalValueException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"        final Amount modelAmount \u003d new Amount(amount);","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"        final List\u003cCategory\u003e modelCategories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"        for (JsonAdaptedTag category : tagged) {","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"            modelCategories.add(category.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"        final Set\u003cCategory\u003e modelUniqueCategories \u003d new HashSet\u003c\u003e(modelCategories);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"        return new FinancialRecord(modelDescription, modelAmount, timestamp, modelUniqueCategories);","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"eksinyue":72,"jxrrelo":12,"deyixtan":9}},{"path":"src/main/java/seedu/budgetbaby/storage/JsonAdaptedMonth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.budget.Budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.record.FinancialRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":" * Jackson-friendly version of {@link Month}.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"class JsonAdaptedMonth {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Month\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    private final List\u003cJsonAdaptedFinancialRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    private final String budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    private final String month;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code JsonAdaptedMonth} with the given details.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    public JsonAdaptedMonth(@JsonProperty(\"records\") List\u003cJsonAdaptedFinancialRecord\u003e records,","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"                            @JsonProperty(\"budget\") String budget,","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"                            @JsonProperty(\"month\") String month) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        if (records !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"            this.records.addAll(records);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"     * Converts a given {@code Month} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    public JsonAdaptedMonth(Month source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        budget \u003d source.getBudget().getAmount().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"        month \u003d source.getMonth().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        records.addAll(source.getFinancialRecords().asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"            .map(JsonAdaptedFinancialRecord::new)","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"     * Converts this Jackson-friendly adapted financial record object into the model\u0027s {@code Month} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    public Month toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"        final List\u003cFinancialRecord\u003e financialRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        for (JsonAdaptedFinancialRecord record : records) {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"            financialRecords.add(record.toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"        FinancialRecordList modelFinancialRecordList \u003d new FinancialRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"        modelFinancialRecordList.setFinancialRecords(financialRecords);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"        if (budget \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"                Budget.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"        if (!Budget.isValidBudget(budget)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"            throw new IllegalValueException(Budget.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        final Budget modelBudget \u003d new Budget(budget);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"        if (month \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"                YearMonth.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"        final YearMonth modelYearMonth \u003d YearMonth.parse(month);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"        return new Month(modelFinancialRecordList, modelBudget, modelYearMonth);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"eksinyue":84}},{"path":"src/main/java/seedu/budgetbaby/storage/JsonBudgetTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.FileUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.JsonUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":" * A class to access BudgetTracker data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"public class JsonBudgetTrackerStorage implements BudgetTrackerStorage {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonBudgetTrackerStorage.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    public JsonBudgetTrackerStorage(Path filePath) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    public Path getBudgetBabyFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        return filePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    public Optional\u003cReadOnlyBudgetTracker\u003e readBudgetTracker() throws DataConversionException {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        return readBudgetTracker(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     * Similar to {@link #readBudgetTracker()}.","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    public Optional\u003cReadOnlyBudgetTracker\u003e readBudgetTracker(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        Optional\u003cJsonSerializableBudgetTracker\u003e jsonBudgetTracker \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"            filePath, JsonSerializableBudgetTracker.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        if (!jsonBudgetTracker.isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"            return Optional.of(jsonBudgetTracker.get().toModelType());","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"    public void saveBudgetTracker(ReadOnlyBudgetTracker budgetTracker) throws IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"        saveBudgetTracker(budgetTracker, filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"     * Similar to {@link #saveBudgetTracker(ReadOnlyBudgetTracker)}.","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"    public void saveBudgetTracker(ReadOnlyBudgetTracker budgetTracker, Path filePath) throws IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(budgetTracker);","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableBudgetTracker(budgetTracker), filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"eksinyue":80}},{"path":"src/main/java/seedu/budgetbaby/storage/JsonSerializableBudgetTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.BudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":" * An Immutable BudgetTracker that is serializable to JSON format.","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"@JsonRootName(value \u003d \"budgetbaby\")","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"class JsonSerializableBudgetTracker {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    private final List\u003cJsonAdaptedMonth\u003e months \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    public JsonSerializableBudgetTracker(@JsonProperty(\"months\") List\u003cJsonAdaptedMonth\u003e months) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        this.months.addAll(months);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    public JsonSerializableBudgetTracker(ReadOnlyBudgetTracker source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        months.addAll(source.getMonthList().stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"            .map(JsonAdaptedMonth::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     * Converts this budget tracker into the model\u0027s {@code BudgetTracker} object.","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    public BudgetTracker toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"        BudgetTracker budgetTracker \u003d new BudgetTracker();","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        for (JsonAdaptedMonth jsonAdaptedMonth : months) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"            Month month \u003d jsonAdaptedMonth.toModelType();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"            if (budgetTracker.hasMonth(month)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"                budgetTracker.setMonth(budgetTracker.findMonth(month.getMonth()), month);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"                budgetTracker.addMonth(month);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        return budgetTracker;","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"eksinyue":61}},{"path":"src/main/java/seedu/budgetbaby/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.JsonUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"eksinyue":5,"-":42}},{"path":"src/main/java/seedu/budgetbaby/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.storage;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"eksinyue":6,"-":30}},{"path":"src/main/java/seedu/budgetbaby/ui/BudgetDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.ProgressBar;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.logic.statistics.CategoryStatistics;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.model.month.Month;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":" * A ui for the budget information that is displayed on the application.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"public class BudgetDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    private static final String FXML \u003d \"BudgetDisplay.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"    private static final String PROGRESSBAR_ACCENT_NORMAL \u003d \"-fx-accent: #557571;\";","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    private static final String PROGRESSBAR_ACCENT_WARNING \u003d \"-fx-accent: #f0cf85;\";","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"    private static final String PROGRESSBAR_ACCENT_DANGER \u003d \"-fx-accent: #bd574e;\";","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"    private static final double PROGRESSBAR_LEVEL_WARNING \u003d 0.6;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    private static final double PROGRESSBAR_LEVEL_DANGER \u003d 0.9;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BudgetDisplay.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"    private Label budgetMonth;","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"    private Label budgetAmount;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    private ProgressBar budgetProgressBar;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    private Label budgetPercentage;","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"    private ListView\u003cString\u003e topCategories;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"     * Creates a {@code BudgetDisplay} with the given {@code Month}.","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"    public BudgetDisplay(ObservableList\u003cMonth\u003e budgetMonthList, List\u003cCategoryStatistics\u003e topCategoriesList) {","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"        addProgressBarListener();","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"        updateBudgetUi(budgetMonthList);","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"        updateTopCategoriesUi(topCategoriesList);","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"     * Adds a progressProperty listener to update budget","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"     * progress bar in real time.","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"    public void addProgressBarListener() {","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"        this.budgetProgressBar.progressProperty().addListener((args, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"            if (newValue.doubleValue() \u003e\u003d PROGRESSBAR_LEVEL_DANGER) {","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"                this.budgetProgressBar.setStyle(PROGRESSBAR_ACCENT_DANGER);","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"            } else if (newValue.doubleValue() \u003e\u003d PROGRESSBAR_LEVEL_WARNING) {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"                this.budgetProgressBar.setStyle(PROGRESSBAR_ACCENT_WARNING);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"            } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"                this.budgetProgressBar.setStyle(PROGRESSBAR_ACCENT_NORMAL);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"        });","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"     * Updates a {@code BudgetDisplay} with {@code Month}.","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"deyixtan"},"content":"    public void updateBudgetUi(ObservableList\u003cMonth\u003e budgetMonthList) {","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"        assert budgetMonthList.size() \u003d\u003d 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"deyixtan"},"content":"        Month month \u003d budgetMonthList.get(0);","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"deyixtan"},"content":"        double totalBudget \u003d month.getBudget().getAmount();","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"        double totalExpenses \u003d month.getTotalExpenses();","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"deyixtan"},"content":"        double expensesRatio \u003d totalExpenses / totalBudget;","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"deyixtan"},"content":"        double expensesPercentage \u003d totalExpenses / totalBudget * 100;","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"deyixtan"},"content":"        String monthStr \u003d month.toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"deyixtan"},"content":"        String totalBudgetStr \u003d String.format(\"%.2f\", totalBudget);","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"        String totalExpensesStr \u003d String.format(\"%.2f\", totalExpenses);","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"deyixtan"},"content":"        String expensesPercentageStr \u003d String.format(\"%.1f%%\", expensesPercentage);","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"deyixtan"},"content":"        this.budgetMonth.setText(monthStr);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"deyixtan"},"content":"        this.budgetAmount.setText(\"Budget($): \" + totalExpensesStr + \"/\" + totalBudgetStr);","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"deyixtan"},"content":"        this.budgetProgressBar.setProgress(expensesRatio);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"deyixtan"},"content":"        this.budgetPercentage.setText(expensesPercentageStr);","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"     * Updates a {@code BudgetDisplay} with the top categories list.","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"deyixtan"},"content":"    public void updateTopCategoriesUi(List\u003cCategoryStatistics\u003e topCategoriesList) {","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"deyixtan"},"content":"        this.topCategories.getItems().clear();","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"        for (CategoryStatistics item : topCategoriesList) {","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"deyixtan"},"content":"            String itemName \u003d item.getCategory().toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"deyixtan"},"content":"            itemName \u003d itemName.substring(1, itemName.length() - 1); // category name with [ and ] stripped","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"deyixtan"},"content":"            String itemValue \u003d String.format(\"$%.2f\", item.getAmount());","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"            String topCategoryItem \u003d itemName + \": \" + itemValue;","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"deyixtan"},"content":"            this.topCategories.getItems().add(topCategoryItem);","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"eksinyue":5,"deyixtan":103}},{"path":"src/main/java/seedu/budgetbaby/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"         * @see seedu.budgetbaby.ablogic.Logic#execute(String)","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"eksinyue":5,"-":80}},{"path":"src/main/java/seedu/budgetbaby/ui/FinancialRecordCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":" * An UI component that displays information of a {@code FinancialRecord}.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"public class FinancialRecordCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    private static final String FXML \u003d \"FinancialRecordListCard.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"    public final FinancialRecord financialRecord;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"    private Label description;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    private Label amount;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    private Label timestamp;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"    private FlowPane categories;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"     * Creates a {@code FinancialRecordCard} with the given {@code FinancialRecord} and index to display.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"    public FinancialRecordCard(FinancialRecord financialRecord, int displayedIndex) {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"        this.financialRecord \u003d financialRecord;","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"        description.setText(financialRecord.getDescription().toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"        amount.setText(\"$\" + financialRecord.getAmount().toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"        timestamp.setText(financialRecord.getTimestampStr());","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        financialRecord.getCategories().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.getCategory()))","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"            .forEach(tag -\u003e categories.getChildren().add(new Label(tag.getCategory())));","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"        if (!(other instanceof FinancialRecordCard)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"        FinancialRecordCard card \u003d (FinancialRecordCard) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"            \u0026\u0026 financialRecord.equals(card.financialRecord);","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eksinyue":3,"-":49,"deyixtan":21,"jxrrelo":1}},{"path":"src/main/java/seedu/budgetbaby/ui/FinancialRecordListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"import seedu.budgetbaby.model.record.FinancialRecord;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":" * Panel containing the list of financial records.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"public class FinancialRecordListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"    private static final String FXML \u003d \"FinancialRecordListPanel.fxml\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FinancialRecordListPanel.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"    private ListView\u003cFinancialRecord\u003e financialRecordListView;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"     * Creates a {@code FinancialRecordListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"    public FinancialRecordListPanel(ObservableList\u003cFinancialRecord\u003e financialRecordList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"        super(FXML);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"        financialRecordListView.setItems(financialRecordList);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        financialRecordListView.setCellFactory(listView -\u003e new FinancialRecordListViewCell());","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    public void updateObservableList(ObservableList\u003cFinancialRecord\u003e financialRecordList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"        financialRecordListView.setItems(financialRecordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code FinancialRecord}","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"     * using a {@code FinancialRecordCard}.","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    class FinancialRecordListViewCell extends ListCell\u003cFinancialRecord\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"        protected void updateItem(FinancialRecord financialRecord, boolean empty) {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"            super.updateItem(financialRecord, empty);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"            if (empty || financialRecord \u003d\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"                setText(null);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"                setGraphic(new FinancialRecordCard(financialRecord, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"deyixtan"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"eksinyue":4,"deyixtan":50}},{"path":"src/main/java/seedu/budgetbaby/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eksinyue":2,"-":99,"deyixtan":1}},{"path":"src/main/java/seedu/budgetbaby/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"import javafx.scene.control.CheckMenuItem;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.BudgetBabyLogic;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    private BudgetBabyLogic logic;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    private BudgetDisplay budgetDisplay;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    private FinancialRecordListPanel financialRecordListPanel;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"    private StackPane budgetDisplayPlaceHolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"    private CheckMenuItem cliVisibilityCheckMenuItem;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"deyixtan"},"content":"    private StackPane financialRecordListPanelPlaceholder;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    public MainWindow(Stage primaryStage, BudgetBabyLogic logic) {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"        setCliDefaultVisibility(logic.getGuiSettings());","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"deyixtan"},"content":"        budgetDisplay \u003d new BudgetDisplay(logic.getFilteredMonthList(), logic.getTopCategories());","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"deyixtan"},"content":"        budgetDisplayPlaceHolder.getChildren().add(budgetDisplay.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"deyixtan"},"content":"        financialRecordListPanel \u003d new FinancialRecordListPanel(logic.getFilteredFinancialRecordList());","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"deyixtan"},"content":"        financialRecordListPanelPlaceholder.getChildren().add(financialRecordListPanel.getRoot());","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"deyixtan"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"deyixtan"},"content":"        commandBoxPlaceholder.managedProperty().bind(commandBoxPlaceholder.visibleProperty());","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"deyixtan"},"content":"        resultDisplayPlaceholder.managedProperty().bind(resultDisplayPlaceholder.visibleProperty());","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getBudgetBabyFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"deyixtan"},"content":"     * Initialise listener to handle UI behaviour","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"deyixtan"},"content":"    void initEventHandlers() {","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"deyixtan"},"content":"        // Automatically updates UI when changes are made to BudgetTracker","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"        logic.getBudgetTracker().addListener(observable -\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"deyixtan"},"content":"            budgetDisplay.updateBudgetUi(logic.getFilteredMonthList());","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"deyixtan"},"content":"            budgetDisplay.updateTopCategoriesUi(logic.getTopCategories());","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"deyixtan"},"content":"            financialRecordListPanel.updateObservableList(logic.getFilteredFinancialRecordList());","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"        });","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"deyixtan"},"content":"     * Sets the default CLI visibility on {@code guiSettings}","lastModifiedDate":"2021-03-11"},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"deyixtan"},"content":"    private void setCliDefaultVisibility(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-11"},{"lineNumber":169,"author":{"gitId":"deyixtan"},"content":"        cliVisibilityCheckMenuItem.setSelected(guiSettings.getCliVisibility());","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"deyixtan"},"content":"        cliVisibilityCheckMenuItem.fire();","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"deyixtan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":186,"author":{"gitId":"deyixtan"},"content":"     * Toggles CLI visibility.","lastModifiedDate":"2021-03-11"},{"lineNumber":187,"author":{"gitId":"deyixtan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":188,"author":{"gitId":"deyixtan"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":189,"author":{"gitId":"deyixtan"},"content":"    public void handleCliVisibility() {","lastModifiedDate":"2021-03-11"},{"lineNumber":190,"author":{"gitId":"deyixtan"},"content":"        commandBoxPlaceholder.setVisible(cliVisibilityCheckMenuItem.isSelected());","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"deyixtan"},"content":"        resultDisplayPlaceholder.setVisible(cliVisibilityCheckMenuItem.isSelected());","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"deyixtan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"deyixtan"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY(), cliVisibilityCheckMenuItem.isSelected());","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"eksinyue"},"content":"     * @see seedu.budgetbaby.ablogic.Logic#execute(String)","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"deyixtan"},"content":"            logger.info(\"Invalid command: \" + commandText + \". Reason: \" + e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eksinyue":13,"-":175,"deyixtan":48}},{"path":"src/main/java/seedu/budgetbaby/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eksinyue":1,"-":27}},{"path":"src/main/java/seedu/budgetbaby/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":27}},{"path":"src/main/java/seedu/budgetbaby/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"eksinyue":1,"-":12}},{"path":"src/main/java/seedu/budgetbaby/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.LogsCenter;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.StringUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.BudgetBabyLogic;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/budgetbaby.png\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    //    private Logic logic;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    private BudgetBabyLogic logic;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    public UiManager(BudgetBabyLogic logic) {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"            mainWindow.initEventHandlers();","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eksinyue":8,"-":80,"deyixtan":2}},{"path":"src/main/java/seedu/budgetbaby/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eksinyue":2,"-":86}},{"path":"src/main/resources/view/BudgetDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deyixtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.ProgressBar?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"\u003cHBox prefWidth\u003d\"219.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"      \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"deyixtan"},"content":"         \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"deyixtan"},"content":"         \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"         \u003crowConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"deyixtan"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"deyixtan"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"deyixtan"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"deyixtan"},"content":"         \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"                  \u003cLabel fx:id\u003d\"budgetMonth\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" textAlignment\u003d\"CENTER\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"deyixtan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"            \u003cLabel fx:id\u003d\"budgetAmount\" styleClass\u003d\"label\" text\u003d\"Budget: \" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"            \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"                  \u003cProgressBar fx:id\u003d\"budgetProgressBar\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" progress\u003d\"0.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"                        \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"deyixtan"},"content":"                  \u003c/ProgressBar\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"deyixtan"},"content":"                  \u003cLabel fx:id\u003d\"budgetPercentage\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"00.00%\" textAlignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"            \u003cLabel text\u003d\"Top Categories:\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"            \u003cListView fx:id\u003d\"topCategories\" GridPane.rowIndex\u003d\"5\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"deyixtan"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"deyixtan"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"deyixtan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"deyixtan":51}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"    background-color: #daded4; /* Used in the default.html file */","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"    -fx-base: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"    -fx-control-inner-background: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #a3bcb6;","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #adc6c0;","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #758e88;","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"deyixtan"},"content":"    -fx-border-color: #758e88;","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":129,"author":{"gitId":"deyixtan"},"content":"     -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":133,"author":{"gitId":"deyixtan"},"content":"     -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"deyixtan"},"content":"     -fx-border-color: derive(#daded4, 10%);","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 30%);","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d !important;","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 30%);","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"deyixtan"},"content":"    -fx-border-color: derive(#daded4, 25%);","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 30%);","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"deyixtan"},"content":"    -fx-border-color: derive(#daded4, 30%);","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":177,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 30%);","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 30%);","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 30%);","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 50%);","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"deyixtan"},"content":"    -fx-border-color: #94ada7;","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #94ada7;","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"deyixtan"},"content":"  -fx-background-color: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"deyixtan"},"content":"  -fx-text-fill: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"deyixtan"},"content":"    -fx-border-color: #3c403d, #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #daded4;","lastModifiedDate":"2021-03-16"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 25%);","lastModifiedDate":"2021-03-16"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"deyixtan"},"content":"    -fx-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":274,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":278,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 50%);","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: transparent #94ada7 transparent #94ada7;","lastModifiedDate":"2021-03-16"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"deyixtan"},"content":"    -fx-border-color: #94ada7 #94ada7 #3c403d #94ada7;","lastModifiedDate":"2021-03-16"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"deyixtan"},"content":"    -fx-effect: innershadow(gaussian, #daded4, 10, 0, 0, 0);","lastModifiedDate":"2021-03-16"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: transparent, #94ada7, transparent, #94ada7;","lastModifiedDate":"2021-03-16"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"deyixtan"},"content":"#categories {","lastModifiedDate":"2021-03-16"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":338,"author":{"gitId":"deyixtan"},"content":"#categories .label {","lastModifiedDate":"2021-03-16"},{"lineNumber":339,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":340,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: #d5deb5;","lastModifiedDate":"2021-03-16"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":281,"deyixtan":64}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"deyixtan"},"content":"    -fx-background-color: derive(#daded4, 20%);","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"deyixtan"},"content":"    -fx-border-color: #94ada7;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"deyixtan"},"content":"    -fx-text-fill: #3c403d;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":16,"deyixtan":4}},{"path":"src/main/resources/view/FinancialRecordListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"deyixtan"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"deyixtan"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"deyixtan"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"deyixtan"},"content":"      \u003cLabel fx:id\u003d\"amount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$amount\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"         \u003cLabel fx:id\u003d\"timestamp\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timestamp\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"      \u003cFlowPane id\u003d\"categories\" fx:id\u003d\"categories\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"deyixtan"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":28,"deyixtan":11}},{"path":"src/main/resources/view/FinancialRecordListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"  \u003cListView fx:id\u003d\"financialRecordListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"deyixtan":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.control.CheckMenuItem?\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"deyixtan"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"deyixtan"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"BudgetBaby\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"deyixtan"},"content":"    \u003cImage url\u003d\"@/images/budgetbaby.png\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"deyixtan"},"content":"         \u003cBorderPane\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"deyixtan"},"content":"            \u003ctop\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"deyixtan"},"content":"           \u003cMenuBar fx:id\u003d\"menuBar\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"             \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"               \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"             \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"deyixtan"},"content":"                  \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"View\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"deyixtan"},"content":"                    \u003citems\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"deyixtan"},"content":"                        \u003cCheckMenuItem fx:id\u003d\"cliVisibilityCheckMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCliVisibility\" selected\u003d\"true\" text\u003d\"Show CLI\" /\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"deyixtan"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"deyixtan"},"content":"                  \u003c/Menu\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"             \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"               \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"             \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"           \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"deyixtan"},"content":"            \u003c/top\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"            \u003cbottom\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"deyixtan"},"content":"            \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"deyixtan"},"content":"                             \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"deyixtan"},"content":"                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"deyixtan"},"content":"                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"100.0\" prefHeight\u003d\"100.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"deyixtan"},"content":"                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"deyixtan"},"content":"            \u003c/bottom\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"deyixtan"},"content":"            \u003cleft\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"deyixtan"},"content":"               \u003cStackPane fx:id\u003d\"budgetDisplayPlaceHolder\" styleClass\u003d\"pane-with-border\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"deyixtan"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"deyixtan"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"deyixtan"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"deyixtan"},"content":"            \u003c/left\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"deyixtan"},"content":"            \u003ccenter\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"deyixtan"},"content":"                \u003cVBox fx:id\u003d\"financialRecordList\" styleClass\u003d\"pane-with-border\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"deyixtan"},"content":"             \u003cpadding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"deyixtan"},"content":"               \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"deyixtan"},"content":"             \u003c/padding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"deyixtan"},"content":"             \u003cStackPane fx:id\u003d\"financialRecordListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"deyixtan"},"content":"           \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"deyixtan"},"content":"            \u003c/center\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"deyixtan"},"content":"         \u003c/BorderPane\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":38,"deyixtan":37}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"deyixtan"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"deyixtan"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"deyixtan":2}},{"path":"src/test/java/seedu/budgetbaby/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"eksinyue":1,"-":57}},{"path":"src/test/java/seedu/budgetbaby/ablogic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.AddCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.ListCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abstorage.JsonAddressBookStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abstorage.StorageManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eksinyue":28,"-":139}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"eksinyue":9,"-":36}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"eksinyue":11,"-":184}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"eksinyue":7,"-":25}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"eksinyue":2,"-":54}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_CATEGORY + VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_CATEGORY + VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_CATEGORY + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"eksinyue":11,"-":111,"jxrrelo":8}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"eksinyue":13,"-":96}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Messages;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"eksinyue":22,"-":151}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"eksinyue":10,"-":48}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"eksinyue":6,"-":15}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eksinyue":11,"-":72}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"eksinyue":6,"-":15}},{"path":"src/test/java/seedu/budgetbaby/ablogic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ModelManager;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eksinyue":8,"-":31}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.AddCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"jxrrelo"},"content":"            + INVALID_TAG_DESC + VALID_TAG_FRIEND, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"eksinyue":37,"-":102,"jxrrelo":2}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.AddCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.ClearCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.DeleteCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.ExitCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.FindCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.HelpCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.ListCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eksinyue":20,"-":81}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.Prefix;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"eksinyue":4,"-":150}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"eksinyue":4,"-":35}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.DeleteCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"eksinyue":6,"-":26}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"jxrrelo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Category.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"jxrrelo"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"jxrrelo"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"jxrrelo"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"eksinyue":38,"-":166,"jxrrelo":7}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.FindCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"eksinyue":6,"-":28}},{"path":"src/test/java/seedu/budgetbaby/ablogic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ablogic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"jxrrelo"},"content":"        Category expectedCategory \u003d new Category(VALID_TAG_1);","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"jxrrelo"},"content":"        assertEquals(expectedCategory, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"jxrrelo"},"content":"        Category expectedCategory \u003d new Category(VALID_TAG_1);","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"jxrrelo"},"content":"        assertEquals(expectedCategory, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e actualCategorySet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e expectedCategorySet \u003d new HashSet\u003cCategory\u003e(Arrays.asList(new Category(VALID_TAG_1),","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"jxrrelo"},"content":"                new Category(VALID_TAG_2)));","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"jxrrelo"},"content":"        assertEquals(expectedCategorySet, actualCategorySet);","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"eksinyue":10,"-":179,"jxrrelo":9}},{"path":"src/test/java/seedu/budgetbaby/abmodel/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"eksinyue":9,"-":93}},{"path":"src/test/java/seedu/budgetbaby/abmodel/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.abmodel.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.AddressBookBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        userPrefs.setBudgetBabyFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"deyixtan"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, true));","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        userPrefs.setBudgetBabyFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"deyixtan"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, true);","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"        differentUserPrefs.setBudgetBabyFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"eksinyue":12,"-":119,"deyixtan":2}},{"path":"src/test/java/seedu/budgetbaby/abmodel/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setBudgetBabyFilePath(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"eksinyue":4,"-":19}},{"path":"src/test/java/seedu/budgetbaby/abmodel/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"eksinyue":2,"-":34}},{"path":"src/test/java/seedu/budgetbaby/abmodel/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"eksinyue":2,"-":59}},{"path":"src/test/java/seedu/budgetbaby/abmodel/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eksinyue":2,"-":73}},{"path":"src/test/java/seedu/budgetbaby/abmodel/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"eksinyue":2,"-":38}},{"path":"src/test/java/seedu/budgetbaby/abmodel/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"eksinyue":10,"-":81}},{"path":"src/test/java/seedu/budgetbaby/abmodel/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"eksinyue":2,"-":38}},{"path":"src/test/java/seedu/budgetbaby/abmodel/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.person;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.PersonBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"eksinyue":9,"-":161}},{"path":"src/test/java/seedu/budgetbaby/abmodel/tag/CategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abmodel.tag;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"public class CategoryTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Category(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Category(invalidTagName));","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Category.isValidTagName(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"eksinyue":2,"-":20,"jxrrelo":6}},{"path":"src/test/java/seedu/budgetbaby/abstorage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.abstorage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eksinyue":9,"-":101}},{"path":"src/test/java/seedu/budgetbaby/abstorage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eksinyue":9,"-":101}},{"path":"src/test/java/seedu/budgetbaby/abstorage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.util.JsonUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.TypicalPersons;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eksinyue":6,"-":41}},{"path":"src/test/java/seedu/budgetbaby/abstorage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        //        assertEquals(expected, actual);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        //        assertEquals(expected, actual);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"deyixtan"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, true));","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"        userPrefs.setBudgetBabyFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"deyixtan"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, true));","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"deyixtan"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, true));","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"eksinyue":9,"-":112,"deyixtan":3}},{"path":"src/test/java/seedu/budgetbaby/abstorage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.abstorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.GuiSettings;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"deyixtan"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, true));","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":7,"-":61,"deyixtan":1}},{"path":"src/test/java/seedu/budgetbaby/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"eksinyue":1,"-":26}},{"path":"src/test/java/seedu/budgetbaby/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":2,"-":133}},{"path":"src/test/java/seedu/budgetbaby/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.core.index;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eksinyue":2,"-":58}},{"path":"src/test/java/seedu/budgetbaby/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"deyixtan"},"content":"        assertNotNull(AppUtil.getImage(\"/images/budgetbaby.png\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"eksinyue":2,"-":33,"deyixtan":1}},{"path":"src/test/java/seedu/budgetbaby/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"eksinyue":3,"-":105}},{"path":"src/test/java/seedu/budgetbaby/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.Config;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"eksinyue":4,"-":112}},{"path":"src/test/java/seedu/budgetbaby/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":2,"-":21}},{"path":"src/test/java/seedu/budgetbaby/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.testutil.TestUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":3,"-":42}},{"path":"src/test/java/seedu/budgetbaby/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.commons.util;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"eksinyue":2,"-":141}},{"path":"src/test/java/seedu/budgetbaby/logic/commands/ResetFilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jxrrelo"},"content":"package seedu.budgetbaby.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"//import seedu.budgetbaby.ablogic.commands.FindCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"//import seedu.budgetbaby.model.BudgetBabyModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"//import seedu.budgetbaby.model.BudgetBabyModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"//import seedu.budgetbaby.model.ReadOnlyBudgetTracker;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jxrrelo"},"content":"//import seedu.budgetbaby.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jxrrelo"},"content":"//import seedu.budgetbaby.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jxrrelo"},"content":"//","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"jxrrelo"},"content":"//import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"//","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"//import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"jxrrelo"},"content":"//import static seedu.budgetbaby.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"jxrrelo"},"content":"//import static seedu.budgetbaby.testutil.TypicalPersons.*;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"jxrrelo"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jxrrelo"},"content":" * Contains integration tests (interaction with the Model) for {@code ResetFilterCommand}.","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jxrrelo"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jxrrelo"},"content":"public class ResetFilterCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jxrrelo"},"content":"    //    private BudgetBabyModel model \u003d new BudgetBabyModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jxrrelo"},"content":"    //    private BudgetBabyModel expectedModel \u003d new BudgetBabyModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jxrrelo"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jxrrelo"},"content":"    public void equals() {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"        ResetFilterCommand rfc \u003d new ResetFilterCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jxrrelo"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jxrrelo"},"content":"    //    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jxrrelo"},"content":"    //    public void execute_withoutKeyword() {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jxrrelo"},"content":"    //        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"jxrrelo"},"content":"    //        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jxrrelo"},"content":"    //        ResetFilterCommand command \u003d new ResetFilterCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"    //        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"    //        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"jxrrelo"},"content":"    //        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"jxrrelo"},"content":"    //    }","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"jxrrelo"},"content":"    //","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"jxrrelo"},"content":"    //    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"jxrrelo"},"content":"    //    public void execute_withKeyword() {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"jxrrelo"},"content":"    //        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"jxrrelo"},"content":"    //        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"jxrrelo"},"content":"    //        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"jxrrelo"},"content":"    //        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"    //        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"jxrrelo"},"content":"    //        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"jxrrelo"},"content":"    //    }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"jxrrelo"},"content":"    //","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"jxrrelo"},"content":"    //    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"    //     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"    //     */","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"    //    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"jxrrelo"},"content":"    //        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"    //    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"jxrrelo"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"jxrrelo":59}},{"path":"src/test/java/seedu/budgetbaby/model/budget/BudgetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yuheem"},"content":"package seedu.budgetbaby.model.budget;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"yuheem"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"yuheem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"yuheem"},"content":"public class BudgetTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"yuheem"},"content":"    private static final double THRESHOLD \u003d 0.0001;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"yuheem"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"yuheem"},"content":"    public void getAmountTest() {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"        Budget budget \u003d new Budget(100.0);","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"yuheem"},"content":"        double amount \u003d budget.getAmount();","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"yuheem"},"content":"        assertEquals(amount, 100, THRESHOLD);","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"yuheem"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"yuheem"},"content":"    public void setAmountTest() {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"yuheem"},"content":"        Budget budget \u003d new Budget();","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        budget.setAmount(200.0);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"yuheem"},"content":"        double amount \u003d budget.amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"yuheem"},"content":"        assertEquals(amount, 200, THRESHOLD);","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"yuheem"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"yuheem"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"yuheem"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"yuheem"},"content":"        Budget budget \u003d new Budget();","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"        //        assertEquals(budget.toString(), \"No budget set\");","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        budget.setAmount(100.0);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"yuheem"},"content":"        assertEquals(budget.toString(), \"$100.00\");","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"yuheem"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"yuheem"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"yuheem":28,"eksinyue":4}},{"path":"src/test/java/seedu/budgetbaby/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":3,"-":31}},{"path":"src/test/java/seedu/budgetbaby/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"eksinyue":1,"-":33}},{"path":"src/test/java/seedu/budgetbaby/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"jxrrelo"},"content":"     * Parses the {@code categories} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"jxrrelo"},"content":"    public EditPersonDescriptorBuilder withTags(String... categories) {","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"jxrrelo"},"content":"        Set\u003cCategory\u003e categorySet \u003d Stream.of(categories).map(Category::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"jxrrelo"},"content":"        descriptor.setTags(categorySet);","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"eksinyue":7,"-":75,"jxrrelo":5}},{"path":"src/test/java/seedu/budgetbaby/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Address;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"jxrrelo"},"content":"    private Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"jxrrelo"},"content":"        categories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"jxrrelo"},"content":"        categories \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"jxrrelo"},"content":"     * Parses the {@code categories} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"jxrrelo"},"content":"    public PersonBuilder withTags(String ... categories) {","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"jxrrelo"},"content":"        this.categories \u003d SampleDataUtil.getTagSet(categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"jxrrelo"},"content":"        return new Person(name, phone, email, address, categories);","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"eksinyue":7,"-":81,"jxrrelo":8}},{"path":"src/test/java/seedu/budgetbaby/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jxrrelo"},"content":"import static seedu.budgetbaby.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.AddCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.ablogic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"jxrrelo"},"content":"import seedu.budgetbaby.model.record.Category;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"jxrrelo"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"jxrrelo"},"content":"            s -\u003e sb.append(PREFIX_CATEGORY + s.category + \" \")","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"jxrrelo"},"content":"            Set\u003cCategory\u003e categories \u003d descriptor.getTags().get();","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"jxrrelo"},"content":"            if (categories.isEmpty()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"jxrrelo"},"content":"                sb.append(PREFIX_CATEGORY);","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"jxrrelo"},"content":"                categories.forEach(s -\u003e sb.append(PREFIX_CATEGORY).append(s.category).append(\" \"));","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"eksinyue":4,"-":47,"jxrrelo":12}},{"path":"src/test/java/seedu/budgetbaby/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":1,"-":71}},{"path":"src/test/java/seedu/budgetbaby/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eksinyue":4,"-":51}},{"path":"src/test/java/seedu/budgetbaby/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.commons.core.index.Index;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"eksinyue":2,"-":10}},{"path":"src/test/java/seedu/budgetbaby/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.ablogic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.AddressBook;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.abmodel.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"eksinyue":13,"-":63}},{"path":"src/test/java/seedu/budgetbaby/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"eksinyue":1,"-":34}},{"path":"src/test/java/seedu/budgetbaby/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package seedu.budgetbaby.ui;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static seedu.budgetbaby.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"import seedu.budgetbaby.MainApp;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"eksinyue":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"\u003c?import seedu.budgetbaby.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"eksinyue":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"\u003cfx:root type\u003d\"seedu.budgetbaby.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"eksinyue":1}}]
