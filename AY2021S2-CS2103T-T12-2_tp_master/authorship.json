[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-T12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-T12-2/tp/actions)"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T12-2/tp/branch/master/graph/badge.svg?token\u003d1H94FQ5BPQ)](https://codecov.io/gh/AY2021S2-CS2103T-T12-2/tp)"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"* This is **a diet tracking app that is meant to allow users to easily track and maintain their meals so that they are able to maintain their ideal weight and body shape**.\u003cbr\u003e"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"* While the app has a GUI, inputs and feedback are primarily given via a command-line interface. This allows users to work on the app quickly and efficiently as they get used to the inputs."},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"* The app currently consists of three main components:"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"  * BMI Tracker"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"  * Diet Plan Selector"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"  * Macronutrients Tracker (for meals)"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"* The software is written in JDK 11."},{"lineNumber":14,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[DieTrack Product Website](https://ay2021s2-cs2103t-t12-2.github.io/tp/)**."},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"SoonKeatNeo":6,"sjq-sohjunqi":1,"-":8}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"We are a team from NUS School of Computing completing this as a module requirement for CS2103/T."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"You can reach us by creating a new issue on our [GitHub issues page](https://github.com/AY2021S2-CS2103T-T12-2/tp/issues)."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"### Soh Jun Qi"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"\u003cimg src\u003d\"images/sjq-sohjunqi.png\" width\u003d\"200px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"[[github](https://github.com/sjq-sohjunqi)]"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"* Role: Team Lead"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"* Responsibilities: Testing (Primary), Documentation (Primary), Model (Primary), UI (Primary), Parsing (Secondary)"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"### Kuah Wei Liang"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"\u003cimg src\u003d\"images/weilianglol.png\" width\u003d\"200px\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"[[github](https://github.com/WeiLiangLOL/)]"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"* Role: Assistant Team Lead"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"* Responsibilities: Processing (Primary), Testing (Secondary), Code quality (Secondary)"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":"### Song Soon Wee"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":"\u003cimg src\u003d\"images/ssoonwee.png\" width\u003d\"200px\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"[[github](https://github.com/ssoonwee)]"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"* Responsibilities: Parsing (Primary), UI (Secondary), Model (Secondary)"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"### Neo Soon Keat"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"\u003cimg src\u003d\"images/soonkeatneo.png\" width\u003d\"200px\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"[[github](https://github.com/SoonKeatNeo)]"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"* Responsibilities: Code quality (Primary), Processing (Secondary), Storage (Secondary)"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"### Jason Lim"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"sjq-sohjunqi"},"content":"\u003cimg src\u003d\"images/jasaaanlim.png\" width\u003d\"200px\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"sjq-sohjunqi"},"content":"[[github](https://github.com/jasaaanlim)]"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":55,"author":{"gitId":"sjq-sohjunqi"},"content":"* Responsibilities: Storage (Primary), Documentation (Secondary), Processing (Secondary)"}],"authorContributionMap":{"SoonKeatNeo":3,"sjq-sohjunqi":21,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"## Table of Contents"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"\u003c!--ts--\u003e"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"* [Product Scope](#product-scope)"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"* [User Stories](#user-stories)"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"* [Use Cases](#use-cases)"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"  * [Calculate BMI](#use-case-calculate-bmi)"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"  * [Query height and weight](#use-case-query-height-and-weight)"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"  * [Update height and weight](#use-case-update-height-and-weight)"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"  * [Add food item as consumption](#use-case-add-food-item-as-consumption)"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"  * [Get diet recommendation](#use-case-get-diet-recommendation)"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"  * [View diet plan](#use-case-view-diet-plan)"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"  * [Add food item as an intake](#use-case-add-food-item-as-an-intake)"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"  * [Display current food intake for the day](#use-case-display-current-food-intake-for-the-day)"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"* [Non-Functional Requirements](#non-functional-requirements)"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"* [Glossary](#glossary) "},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"\u003c!--te--\u003e"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"### Product Scope"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"**Target user profile**"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"  * want to start a diet"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"  * track their progress against a diet plan"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"  * track the macronutrients of the food consumed"},{"lineNumber":29,"author":{"gitId":"sjq-sohjunqi"},"content":"  * is comfortable with command-line interface"},{"lineNumber":30,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":31,"author":{"gitId":"sjq-sohjunqi"},"content":"**Value proposition**: quickly input daily food intake and calculate their macronutrients to check if diet plan is progressing as planned"},{"lineNumber":32,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"### User Stories"},{"lineNumber":34,"author":{"gitId":"sjq-sohjunqi"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`"},{"lineNumber":35,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":36,"author":{"gitId":"sjq-sohjunqi"},"content":"|Priority|   As a ...   |   I want to ...  |   So that I can​ ...   |"},{"lineNumber":37,"author":{"gitId":"sjq-sohjunqi"},"content":"|------------|------------------|----------------------|---------------------------|"},{"lineNumber":38,"author":{"gitId":"sjq-sohjunqi"},"content":"|`***`|User|Set a deadline for my diet plan|Stay on track of when the diet finishes|"},{"lineNumber":39,"author":{"gitId":"sjq-sohjunqi"},"content":"|`***`|User|Add a new diet plan|Start a new diet plan|"},{"lineNumber":40,"author":{"gitId":"sjq-sohjunqi"},"content":"|`***`|User|Delete my diet plan|Give up on the current diet plan|"},{"lineNumber":41,"author":{"gitId":"sjq-sohjunqi"},"content":"|`***`|User|Track my weight|See if the diet is working|"},{"lineNumber":42,"author":{"gitId":"sjq-sohjunqi"},"content":"|`***`|User|View a list of recommended diets|find out what to diet on as I am not sure|"},{"lineNumber":43,"author":{"gitId":"sjq-sohjunqi"},"content":"|`***`|First-time User|Skim through some example templates|Know how the application works|"},{"lineNumber":44,"author":{"gitId":"sjq-sohjunqi"},"content":"|`**`|Long-time User|See a history of my past diet|I can backtrack what diets I have been on|"},{"lineNumber":45,"author":{"gitId":"sjq-sohjunqi"},"content":"|`**`|Frequent user|Store information on the popular foods that I eat|Quickly input my intake for the day|"},{"lineNumber":46,"author":{"gitId":"sjq-sohjunqi"},"content":"|`**`|User|Customize my diet plan|Adjust my diet plan to fit my needs|"},{"lineNumber":47,"author":{"gitId":"sjq-sohjunqi"},"content":"|`**`|User with dietary requirements|Filter the list of diets to fit my dietary requirements|Choose diets that are suited to my dietary needs|"},{"lineNumber":48,"author":{"gitId":"sjq-sohjunqi"},"content":"|`*`|Social Users|See/Give reviews on diets|Know which diets are more effective for others|"},{"lineNumber":49,"author":{"gitId":"sjq-sohjunqi"},"content":"|`*`|Social Users|Connect with peers to see their dietary plans and progress|Stay up-to-date with my peers and possibly motivate myself|"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"sjq-sohjunqi"},"content":"*{More to be added}*"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"### Use Cases"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"(For all use cases below, the **Body Mass Index (BMI) Tracker** is the `BMITracker`, **Diet Plan Selector** is the `DietSelector`, **Macronutrients Tracker** is the `MacroTracker` and the **Actor** is the `user`, unless specified otherwise)"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"#### Use case: Calculate BMI"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"**MSS**"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"1.  User keys in the weight, height and ideal weight"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"2.  BMITracker calculates BMI from the user input"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"3.  BMITracker updates the height, weight and BMI of the user"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":"    Use case ends."},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"#### Use case: Query height and weight"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"**MSS**"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":"1.  User queries for height and weight"},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"2.  BMITracker displays information for height and weight"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"    Use case ends."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"#### Use case: Update height and weight"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"**MSS**"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"1.  User queries for height and weight"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"2.  BMITracker displays information for height and weight"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"3.  User updates the height and weight if they are different"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"4.  BMITracker updates the height, weight and BMI of the user"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":"    Use case ends."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"#### Use case: Add food item as consumption"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"**MSS**"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"1.  User keys in the date and food item with information such as its name, fats, carbos, proteins"},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"2.  MacroTracker keeps track of that and calculates its kilocalories"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"3.  MacroTracker computes the total kilocalories for the day"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"    Use case ends."},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"#### Use case: Get diet recommendation"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":"**MSS**"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"1.  User requests to get a list of diet recommendation"},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":"2.  DietSelector displays a list of diet recommendation based on user\u0027s BMI"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":"    Use case ends."},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":"#### Use case: View diet plan"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"**MSS**"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"ssoonwee"},"content":"1.  User requests for a certain diet type"},{"lineNumber":111,"author":{"gitId":"ssoonwee"},"content":"2.  DietSelector displays a detailed requirement for that certain diet type"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"ssoonwee"},"content":"    Use case ends."},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"ssoonwee"},"content":"#### Use case: Add food item as an intake"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"ssoonwee"},"content":"**MSS**"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"ssoonwee"},"content":"1.  User adds a particular food item"},{"lineNumber":120,"author":{"gitId":"ssoonwee"},"content":"2.  MacroTracker tracks the food and computes the total kilo calories consumption for the day"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"ssoonwee"},"content":"    Use case ends."},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"ssoonwee"},"content":"**Extensions**"},{"lineNumber":125,"author":{"gitId":"ssoonwee"},"content":"*  1a. The food item exists."},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"ssoonwee"},"content":"   * 1a1. MacroTracker updates food item details in the list of food."},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"ssoonwee"},"content":"*  1b. The food item does not exists."},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"ssoonwee"},"content":"   * 1b1. MacroTracker adds the food item into the list of food."},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"ssoonwee"},"content":"   Use case resumes at step 2."},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"ssoonwee"},"content":"#### Use case: Display current food intake for the day"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"ssoonwee"},"content":"1.  User queries a particular day intake."},{"lineNumber":140,"author":{"gitId":"ssoonwee"},"content":"2.  MacroTracker displays the summary intake for that day."},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    Use case ends."},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."},{"lineNumber":149,"author":{"gitId":"SoonKeatNeo"},"content":"2.  Should be able to hold diet plans for up to the past two years (730 days) without a noticeable sluggishness in performance for typical usage."},{"lineNumber":150,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":151,"author":{"gitId":"SoonKeatNeo"},"content":"4.  Should help users as they start the application for the first time with sample data."},{"lineNumber":152,"author":{"gitId":"SoonKeatNeo"},"content":"5.  Interface should not hinder the users\u0027 usage of the application in order to input the data they need and get the desired response."},{"lineNumber":153,"author":{"gitId":"SoonKeatNeo"},"content":"6.  The data files should be easily modifiable by a user with a basic understanding of the JavaScript Object Notation (JSON)."},{"lineNumber":154,"author":{"gitId":"SoonKeatNeo"},"content":"7.  Errors should display vividly and differently from the rest of the normal input such that users are aware something has gone wrong."},{"lineNumber":155,"author":{"gitId":"SoonKeatNeo"},"content":"8.  Should be easily deployable to all systems running any _mainstream OS_ once compiled executable is distributed via a release."},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":162,"author":{"gitId":"ssoonwee"},"content":"*{More to be added}*"}],"authorContributionMap":{"sjq-sohjunqi":27,"SoonKeatNeo":6,"ssoonwee":69,"-":60}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"sjq-sohjunqi"},"content":"## Introduction"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"sjq-sohjunqi"},"content":"DieTrack is a **desktop app with a Command-Line Interface (CLI) that allows users to easily track and maintain their meals so that they are able to maintain their ideal body weight.** If you can type fast, you’ll be able to record your meals in this app much faster than other traditional GUI-based diet tracking apps."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"sjq-sohjunqi"},"content":"## Table of Contents"},{"lineNumber":11,"author":{"gitId":"sjq-sohjunqi"},"content":""},{"lineNumber":12,"author":{"gitId":"sjq-sohjunqi"},"content":"\u003c!--ts--\u003e"},{"lineNumber":13,"author":{"gitId":"sjq-sohjunqi"},"content":"* [Introduction](#introduction)"},{"lineNumber":14,"author":{"gitId":"sjq-sohjunqi"},"content":"* [Quick start](#quick-start)"},{"lineNumber":15,"author":{"gitId":"sjq-sohjunqi"},"content":"* [Features](#features)"},{"lineNumber":16,"author":{"gitId":"sjq-sohjunqi"},"content":"* [Body Mass Index (BMI) Tracker](#1-body-mass-index-bmi-tracker)"},{"lineNumber":17,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [Input weight, height and ideal weight](#11-input-weight-height-and-ideal-weight)"},{"lineNumber":18,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [Query weight, height and BMI](#12-query-weight-height-and-bmi)"},{"lineNumber":19,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [Update weight, height and ideal weight](#13-update-weight-height-and-ideal-weight)"},{"lineNumber":20,"author":{"gitId":"sjq-sohjunqi"},"content":"* [Diet Plan Selector](#2-diet-plan-selector)"},{"lineNumber":21,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [Get diet recommendations based on current BMI](#21-get-diet-recommendation-based-on-current-bmi)"},{"lineNumber":22,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [View active diet plan](#22-view-active-diet-plan)"},{"lineNumber":23,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [Select active diet plan](#23-select-active-diet-plan)"},{"lineNumber":24,"author":{"gitId":"sjq-sohjunqi"},"content":"* [Macronutrients Tracker](#3-macronutrients-tracker)"},{"lineNumber":25,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [Input carbohydrates, fats and protein intake](#31-input-carbohydrates-fats-and-protein-intake)"},{"lineNumber":26,"author":{"gitId":"sjq-sohjunqi"},"content":"  * [List food intake for certain days](#32-list-food-intake-for-certain-days)"},{"lineNumber":27,"author":{"gitId":"sjq-sohjunqi"},"content":"* [Command summary](#command-summary)"},{"lineNumber":28,"author":{"gitId":"sjq-sohjunqi"},"content":"\u003c!--te--\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"1. Download the latest `dietrack.jar`."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"1. Copy the file to the folder you will be launching DieTrack from on a daily basis."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data."},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"   * **`bmi`**`h/150 w/70 i/75`: Initializes the current user BMI with height of 150cm, weight of 70kg and ideal weight of 75kg."},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"   * **`bmi`**`query`: Queries the current user\u0027s BMI with its height and weight information."},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"   * **`bmi`**`update h/170 w/70 i/80`: Updates the current user BMI to height of 170cm, weight of 70kg and ideal weight of 80kg."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"jasaaanlim"},"content":"   * **`plan`**`recommended`: Queries the recommended diet plan based on user\u0027s BMI."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"jasaaanlim"},"content":"   * **`plan`**`t/1`: Queries more information of the weight loss diet plan."},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"   * **`food`**`d/today n/tomatoes p/10 c/10 f/10`: Adds tomato consumption with protein of 10g, carbohydrates of 10g and fats of 10g to the food intake for today."},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"   * **`food`**`query d/today`: Queries the food intake for today."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"sjq-sohjunqi"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"sjq-sohjunqi"},"content":"## 1. Body Mass Index (BMI) Tracker"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"sjq-sohjunqi"},"content":"### 1.1 Input weight, height and ideal weight"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"WeiLiangLOL"},"content":"On application\u0027s first launch, the user is prompted to enter his/her height, weight and ideal weight."},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"WeiLiangLOL"},"content":"**Format:** `bmi h/height(cm) w/weight(kg) i/ideal_weight(kg)`"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"WeiLiangLOL"},"content":"**Example:** `bmi h/170 w/70 i/80`"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"WeiLiangLOL"},"content":"**Expected output:**"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"WeiLiangLOL"},"content":"BMI (h: 170cm, w: 70kg, i: 80kg) has been saved."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"sjq-sohjunqi"},"content":"### 1.2 Query weight, height and BMI"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"WeiLiangLOL"},"content":"The user can query their weight and height everyday to see their progress."},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"WeiLiangLOL"},"content":"**Format:** `bmi query`"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"WeiLiangLOL"},"content":"Below is your current height and weight:\\"},{"lineNumber":91,"author":{"gitId":"WeiLiangLOL"},"content":"Last Updated: 2021-02-28\\"},{"lineNumber":92,"author":{"gitId":"WeiLiangLOL"},"content":"Weight: 100kg\\"},{"lineNumber":93,"author":{"gitId":"WeiLiangLOL"},"content":"Height: 170cm\\"},{"lineNumber":94,"author":{"gitId":"WeiLiangLOL"},"content":"BMI: 34.6 (High Risk)"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"sjq-sohjunqi"},"content":"### 1.3 Update weight, height and ideal weight"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"WeiLiangLOL"},"content":"The user can query their weight and height everyday to see what they have input. "},{"lineNumber":99,"author":{"gitId":"WeiLiangLOL"},"content":"This is recommended, so the user will have a more accurate view of their BMI status."},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"WeiLiangLOL"},"content":"**Format:** `bmi update h/height(cm) w/weight(kg) i/ideal_weight(kg)`"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"WeiLiangLOL"},"content":"**Example:** `bmi update h/170 w/70 i/80`"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"WeiLiangLOL"},"content":"BMI (h: 170cm, w: 70kg, i: 80kg) updated for current user."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"sjq-sohjunqi"},"content":"## 2. Diet Plan Selector"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"jasaaanlim"},"content":"### 2.1 Get diet recommendation based on current BMI"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"jasaaanlim"},"content":"Gets a recommended diet plan based on the user\u0027s current BMI stored in the system."},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"jasaaanlim"},"content":"**Format:** `plan recommended`"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"jasaaanlim"},"content":"Here is the recommended diet plan for your BMI of 29.4:"},{"lineNumber":120,"author":{"gitId":"jasaaanlim"},"content":"1) Weight Loss Diet (Less-carbs)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"jasaaanlim"},"content":"### 2.2 View active diet plan"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"jasaaanlim"},"content":"Shows the current active diet plan previously selected by the user."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"jasaaanlim"},"content":"**Format:** `plan current`"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"jasaaanlim"},"content":"You are on the Weight Loss Diet (Less-carbs)!\\"},{"lineNumber":131,"author":{"gitId":"jasaaanlim"},"content":"Here\u0027s the information tailored to your BMI:\\"},{"lineNumber":132,"author":{"gitId":"jasaaanlim"},"content":"Daily calories intake: 1,648 kcal\\"},{"lineNumber":133,"author":{"gitId":"jasaaanlim"},"content":"Daily Protein intake: 145 g\\"},{"lineNumber":134,"author":{"gitId":"jasaaanlim"},"content":"Daily Carbohydrates intake: 143 g\\"},{"lineNumber":135,"author":{"gitId":"jasaaanlim"},"content":"Daily Fat intake: 55 g"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"jasaaanlim"},"content":"### 2.3 Select active diet plan"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"jasaaanlim"},"content":"Changes the current active diet plan to the newly specified plan."},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"jasaaanlim"},"content":"**Format:** `start p/plan`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"jasaaanlim"},"content":"**Example:** `start p/1`"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"jasaaanlim"},"content":"You are now on the Weight Loss Diet (Less-carbs)!\\"},{"lineNumber":148,"author":{"gitId":"jasaaanlim"},"content":"Here\u0027s the information tailored to your BMI:\\"},{"lineNumber":149,"author":{"gitId":"jasaaanlim"},"content":"Daily calories intake: 1,648 kcal\\"},{"lineNumber":150,"author":{"gitId":"jasaaanlim"},"content":"Daily Protein intake: 145 g\\"},{"lineNumber":151,"author":{"gitId":"jasaaanlim"},"content":"Daily Carbohydrates intake: 143 g\\"},{"lineNumber":152,"author":{"gitId":"jasaaanlim"},"content":"Daily Fat intake: 55 g"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"jasaaanlim"},"content":"### 2.4 List all available diet plans"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"jasaaanlim"},"content":"Displays a list of available diet plans."},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"jasaaanlim"},"content":"**Format:** `plans`"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"jasaaanlim"},"content":"Here are the available diet plans:"},{"lineNumber":163,"author":{"gitId":"SoonKeatNeo"},"content":"1) Weight Loss Diet"},{"lineNumber":164,"author":{"gitId":"SoonKeatNeo"},"content":"2) Weight Gain Diet"},{"lineNumber":165,"author":{"gitId":"jasaaanlim"},"content":"3) Muscle Gain Diet"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"jasaaanlim"},"content":"### 2.5 View information about a particular diet plan"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"jasaaanlim"},"content":"Displays information about a particular diet plan."},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"jasaaanlim"},"content":"**Format:** `plan \\tID`"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"jasaaanlim"},"content":"**Example:** `plan t\\1`"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"jasaaanlim"},"content":"Here\u0027s more information about the Weight Loss plan:\\"},{"lineNumber":178,"author":{"gitId":"jasaaanlim"},"content":"Daily calories intake: 1,648 kcal\\"},{"lineNumber":179,"author":{"gitId":"jasaaanlim"},"content":"Daily Protein intake: 145 g\\"},{"lineNumber":180,"author":{"gitId":"jasaaanlim"},"content":"Daily Carbohydrates intake: 143 g\\"},{"lineNumber":181,"author":{"gitId":"jasaaanlim"},"content":"Daily Fat intake: 55 g"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"sjq-sohjunqi"},"content":"## 3. Macronutrients Tracker"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"SoonKeatNeo"},"content":"### 3.1 Input carbohydrates, fats and protein intake"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"SoonKeatNeo"},"content":"For daily meals, the user is required to enter his/her current intake of macronutrients, in terms of carbohydrates, fats, and proteins. The metric unit of measurement specified is in grams, delimited by commas."},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"SoonKeatNeo"},"content":"**Format:** `food d/DATE n/NAME p/PROTEINS c/CARBOHYDRATES f/FATS`"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"SoonKeatNeo"},"content":"**Example:** `food d/today n/tomatoes p/10 c/10 f/10`\\"},{"lineNumber":193,"author":{"gitId":"SoonKeatNeo"},"content":"`food d/today n/onions p/20 c/0 f/100`"},{"lineNumber":194,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":195,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":196,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":197,"author":{"gitId":"SoonKeatNeo"},"content":"Tomatoes (Protein: 10g, Carbohydrates: 10g, Fats:10g) has been tracked. 170 kcal consumed.\\"},{"lineNumber":198,"author":{"gitId":"SoonKeatNeo"},"content":"Onions (Protein: 20g, Carbohydrates: 0g, Fats:100g) has been tracked. 340 kcal consumed."},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"sjq-sohjunqi"},"content":"### 3.2 List food intake for certain days"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"SoonKeatNeo"},"content":"The user will be able to see the current daily food intake and how far off, or if they have exceeded their daily calorie intake requirement."},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"SoonKeatNeo"},"content":"**Format:** `food query d/DATE`"},{"lineNumber":205,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":206,"author":{"gitId":"SoonKeatNeo"},"content":"**Example:** `food query d/today`"},{"lineNumber":207,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":208,"author":{"gitId":"jasaaanlim"},"content":"**Expected output:**"},{"lineNumber":209,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":210,"author":{"gitId":"SoonKeatNeo"},"content":"Summary Food Intake for the Day (2021-02-28):\\"},{"lineNumber":211,"author":{"gitId":"SoonKeatNeo"},"content":"Tomatoes: 170 kcal\\"},{"lineNumber":212,"author":{"gitId":"SoonKeatNeo"},"content":"Onions: 340 kcal\\"},{"lineNumber":213,"author":{"gitId":"SoonKeatNeo"},"content":"Total Calories Intake: 510 kcal"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"## Command summary"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":222,"author":{"gitId":"sjq-sohjunqi"},"content":"**Input weight, height and ideal weight** | `bmi h/height(cm) w/weight(kg) i/ideal_weight(kg)​` \u003cbr\u003e e.g., `bmi h/170 w/70 i/80`"},{"lineNumber":223,"author":{"gitId":"sjq-sohjunqi"},"content":"**Query weight, height and BMI** | `bmi query`"},{"lineNumber":224,"author":{"gitId":"sjq-sohjunqi"},"content":"**Update weight, height and ideal weight** | `bmi update h/height(cm) w/weight(kg) i/ideal_weight(kg)`\u003cbr\u003e e.g., `bmi update h/170 w/70 i/80`"},{"lineNumber":225,"author":{"gitId":"sjq-sohjunqi"},"content":"**Get diet recommendation based on current BMI** | `plan recommended`"},{"lineNumber":226,"author":{"gitId":"sjq-sohjunqi"},"content":"**View active diet plan** | `plan current`"},{"lineNumber":227,"author":{"gitId":"sjq-sohjunqi"},"content":"**Select active diet plan** | `start p/plan`\u003cbr\u003e e.g., `start p/1`"},{"lineNumber":228,"author":{"gitId":"sjq-sohjunqi"},"content":"**List all available diet plans** | `plans`"},{"lineNumber":229,"author":{"gitId":"sjq-sohjunqi"},"content":"**View information about a particular diet plan** | `plan \\tID​`\u003cbr\u003e e.g.,`plan t\\1`"},{"lineNumber":230,"author":{"gitId":"sjq-sohjunqi"},"content":"**Input carbohydrates, fats and protein intake** | `food d/DATE n/NAME p/PROTEINS c/CARBOHYDRATES f/FATS`\u003cbr\u003e e.g., `food d/today n/tomatoes p/10 c/10 f/10`"},{"lineNumber":231,"author":{"gitId":"sjq-sohjunqi"},"content":"**List food intake for certain days** | `food query d/DATE`\u003cbr\u003e e.g., `food query d/today`"}],"authorContributionMap":{"sjq-sohjunqi":39,"SoonKeatNeo":19,"ssoonwee":9,"WeiLiangLOL":17,"jasaaanlim":51,"-":96}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"title: DieTrack"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-T12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-T12-2/tp/actions)"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T12-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-T12-2/tp)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"**DieTrack is a desktop application that allows users to easily track and maintain their meals so that they are able to maintain their ideal body weight.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface)."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"* The product name is a play on the words \"die\", \"diet\" and \"track\". It is a syllogism that if the user does not track their diet, it could result in bad consequences that could ultimately result in death."},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"* If you are interested in using DieTrack, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start)."},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"* If you are interested in helping to develop DieTrack, the [**Developer Guide**](DeveloperGuide.html) is a good place to start."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"}],"authorContributionMap":{"SoonKeatNeo":8,"-":13}},{"path":"src/main/java/seedu/address/model/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package seedu.address.model.food;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"public class Food {"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"    public static final double PROTEIN_AND_CARBOS_MULTIPLIER \u003d 4; //Conversion to KCAL"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"    public static final double FAT_MULTIPLIER \u003d 9; //Conversion to KCAL"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"    public static final String VALIDATION_WHITESPACE_REGEX \u003d \"[^\\\\s].*\";"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    public static final String VALIDATION_CHAR_REGEX \u003d \"[a-zA-Z ]*\";"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    public static final String VALIDATION_POSITIVE_DOUBLE_REGEX \u003d \"(\\\\d*\\\\.?\\\\d+)\";"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Food name can take any alphabets charcter and it should not be\""},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"            + \"blank.\";"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"    public static final String DIGIT_CONSTRAINTS \u003d \"Double value input can only be positive and more than 0.\";"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    public final String name;"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    private double fats;"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    private double carbos;"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    private double proteins;"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    private double kiloCalories;"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    private boolean isUpdated; //Sets to True once any update function is called for this food item."},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"     * Initialises the food class."},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"     * @param name     food name"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"     * @param fats     amount of fats"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"     * @param carbos   amount of carbos"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"     * @param proteins amount of proteins"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"    public Food(String name, double fats, double carbos, double proteins) {"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"        requireNonNull(name);"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"        checkArgument(isValidFoodName(name), MESSAGE_CONSTRAINTS); //Checks for all whitespaces and valid character"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"        checkArgument(isValidNumber(fats, carbos, proteins), DIGIT_CONSTRAINTS); //Checks for positive doubles inc 0."},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"        this.name \u003d name.toLowerCase();"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"        this.fats \u003d fats;"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"        this.carbos \u003d carbos;"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"        this.proteins \u003d proteins;"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"        this.kiloCalories \u003d calculateKiloCalories();"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"        this.isUpdated \u003d false;"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"    public double getFats() {"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"        return this.fats;"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"    public double getCarbos() {"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"        return this.carbos;"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"    public double getProteins() {"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"        return this.proteins;"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"    public double getKiloCalories() {"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"        return this.kiloCalories;"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"     * Returns true if a given string is a valid email."},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"    public static boolean isValidFoodName(String test) {"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"        if (test.matches(VALIDATION_CHAR_REGEX) \u0026\u0026 test.matches(VALIDATION_WHITESPACE_REGEX)) {"},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":"            return true;"},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"            return false;"},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"     * Returns true if a given number is valid and more than 0."},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"    public static boolean isValidNumber(double fats, double carbos, double proteins) {"},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":"        String fatsString \u003d Double.toString(fats);"},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"        String carbosString \u003d Double.toString(carbos);"},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"        String proteinsString \u003d Double.toString(proteins);"},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"        if (fatsString.matches(VALIDATION_POSITIVE_DOUBLE_REGEX)"},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"                \u0026\u0026 carbosString.matches(VALIDATION_POSITIVE_DOUBLE_REGEX)"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"                \u0026\u0026 proteinsString.matches(VALIDATION_POSITIVE_DOUBLE_REGEX)) {"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"            return true;"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"            return false;"},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"     * Updates the amount of fats for this food."},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"     * @param fats new amount of fats"},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"     * @return updated food item"},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"    public Food updateFats(double fats) {"},{"lineNumber":94,"author":{"gitId":"ssoonwee"},"content":"        this.fats \u003d fats;"},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"        updateKiloCalories();"},{"lineNumber":96,"author":{"gitId":"ssoonwee"},"content":"        setUpdateTrue();"},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"        return this;"},{"lineNumber":98,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":100,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"     * Updates the amount of carbos for this food."},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"ssoonwee"},"content":"     * @param carbos new carbo value"},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":"     * @return updated food item"},{"lineNumber":105,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":107,"author":{"gitId":"ssoonwee"},"content":"    public Food updateCarbos(double carbos) {"},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"        this.carbos \u003d carbos;"},{"lineNumber":109,"author":{"gitId":"ssoonwee"},"content":"        updateKiloCalories();"},{"lineNumber":110,"author":{"gitId":"ssoonwee"},"content":"        setUpdateTrue();"},{"lineNumber":111,"author":{"gitId":"ssoonwee"},"content":"        return this;"},{"lineNumber":112,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":114,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"ssoonwee"},"content":"     * Updates the amount of proteins for this food."},{"lineNumber":116,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"ssoonwee"},"content":"     * @param proteins new protein value"},{"lineNumber":118,"author":{"gitId":"ssoonwee"},"content":"     * @return updated food item"},{"lineNumber":119,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"ssoonwee"},"content":"    public Food updateProteins(double proteins) {"},{"lineNumber":121,"author":{"gitId":"ssoonwee"},"content":"        this.proteins \u003d proteins;"},{"lineNumber":122,"author":{"gitId":"ssoonwee"},"content":"        updateKiloCalories();"},{"lineNumber":123,"author":{"gitId":"ssoonwee"},"content":"        setUpdateTrue();"},{"lineNumber":124,"author":{"gitId":"ssoonwee"},"content":"        return this;"},{"lineNumber":125,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":127,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"ssoonwee"},"content":"     * Sets food data as updated if it is updated at least once."},{"lineNumber":129,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"ssoonwee"},"content":"    public void setUpdateTrue() {"},{"lineNumber":131,"author":{"gitId":"ssoonwee"},"content":"        this.isUpdated \u003d true;"},{"lineNumber":132,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":134,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"ssoonwee"},"content":"     * Updates kilocalories each time a nutrient value is updated."},{"lineNumber":136,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"ssoonwee"},"content":"    public void updateKiloCalories() {"},{"lineNumber":138,"author":{"gitId":"ssoonwee"},"content":"        this.kiloCalories \u003d calculateKiloCalories();"},{"lineNumber":139,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":141,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"ssoonwee"},"content":"     * Calculates total kilocalories based on input fats, carbos and proteins."},{"lineNumber":143,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"ssoonwee"},"content":"     * @return total converted energy in kilocalories"},{"lineNumber":145,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"ssoonwee"},"content":"    public double calculateKiloCalories() {"},{"lineNumber":147,"author":{"gitId":"ssoonwee"},"content":"        double convertedFats \u003d this.fats * FAT_MULTIPLIER;"},{"lineNumber":148,"author":{"gitId":"ssoonwee"},"content":"        double convertedCarbos \u003d this.carbos * PROTEIN_AND_CARBOS_MULTIPLIER;"},{"lineNumber":149,"author":{"gitId":"ssoonwee"},"content":"        double convertedProteins \u003d this.proteins * PROTEIN_AND_CARBOS_MULTIPLIER;"},{"lineNumber":150,"author":{"gitId":"ssoonwee"},"content":"        double totalKiloCalories \u003d convertedCarbos + convertedFats + convertedProteins;"},{"lineNumber":151,"author":{"gitId":"ssoonwee"},"content":"        return totalKiloCalories;"},{"lineNumber":152,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":154,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":155,"author":{"gitId":"ssoonwee"},"content":"    public String toString() {"},{"lineNumber":156,"author":{"gitId":"ssoonwee"},"content":"        String statusString \u003d new String();"},{"lineNumber":157,"author":{"gitId":"ssoonwee"},"content":"        if (this.isUpdated) {"},{"lineNumber":158,"author":{"gitId":"ssoonwee"},"content":"            statusString \u003d \"updated\";"},{"lineNumber":159,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":160,"author":{"gitId":"ssoonwee"},"content":"            statusString \u003d \"saved\";"},{"lineNumber":161,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d this.name + \" (Protein: \" + this.proteins + \"g, Carbohydrates: \" + this.carbos + \"g, Fats: \""},{"lineNumber":163,"author":{"gitId":"ssoonwee"},"content":"                + this.fats + \") has been \" + statusString + \".\";"},{"lineNumber":164,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":165,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":166}},{"path":"src/main/java/seedu/address/model/food/FoodIntake.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"package seedu.address.model.food;"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"jasaaanlim"},"content":" * Represents a FoodIntake record."},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":" */"},{"lineNumber":9,"author":{"gitId":"jasaaanlim"},"content":"public class FoodIntake {"},{"lineNumber":10,"author":{"gitId":"jasaaanlim"},"content":"    private static final String DATETIME_FORMAT \u003d \"d MMM yyyy h:mma\";"},{"lineNumber":11,"author":{"gitId":"jasaaanlim"},"content":"    private LocalDateTime date;"},{"lineNumber":12,"author":{"gitId":"jasaaanlim"},"content":"    private Food food;"},{"lineNumber":13,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":14,"author":{"gitId":"jasaaanlim"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jasaaanlim"},"content":"     * Creates a FoodIntake object representing the Food consumed at a particular date and time."},{"lineNumber":16,"author":{"gitId":"jasaaanlim"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"jasaaanlim"},"content":"     * @param date LocalDateTime of when the food was eaten"},{"lineNumber":18,"author":{"gitId":"jasaaanlim"},"content":"     * @param food The related Food object that was consumed"},{"lineNumber":19,"author":{"gitId":"jasaaanlim"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jasaaanlim"},"content":"    public FoodIntake(LocalDateTime date, Food food) {"},{"lineNumber":21,"author":{"gitId":"jasaaanlim"},"content":"        this.date \u003d date;"},{"lineNumber":22,"author":{"gitId":"jasaaanlim"},"content":"        this.food \u003d food;"},{"lineNumber":23,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":25,"author":{"gitId":"jasaaanlim"},"content":"    public Food getFood() {"},{"lineNumber":26,"author":{"gitId":"jasaaanlim"},"content":"        return this.food;"},{"lineNumber":27,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":29,"author":{"gitId":"jasaaanlim"},"content":"    public LocalDateTime getDate() {"},{"lineNumber":30,"author":{"gitId":"jasaaanlim"},"content":"        return this.date;"},{"lineNumber":31,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":33,"author":{"gitId":"jasaaanlim"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jasaaanlim"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"jasaaanlim"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(DATETIME_FORMAT)) + \": \""},{"lineNumber":36,"author":{"gitId":"jasaaanlim"},"content":"                + this.food.toString();"},{"lineNumber":37,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jasaaanlim"},"content":"}"}],"authorContributionMap":{"jasaaanlim":38}},{"path":"src/main/java/seedu/address/model/food/FoodIntakeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasaaanlim"},"content":"package seedu.address.model.food;"},{"lineNumber":2,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":3,"author":{"gitId":"jasaaanlim"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jasaaanlim"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"jasaaanlim"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":7,"author":{"gitId":"jasaaanlim"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"jasaaanlim"},"content":" * Represents a list of FoodIntakes starting from the specified date."},{"lineNumber":9,"author":{"gitId":"jasaaanlim"},"content":" */"},{"lineNumber":10,"author":{"gitId":"jasaaanlim"},"content":"public class FoodIntakeList {"},{"lineNumber":11,"author":{"gitId":"jasaaanlim"},"content":"    private LocalDateTime startDate;"},{"lineNumber":12,"author":{"gitId":"jasaaanlim"},"content":"    private List\u003cFoodIntake\u003e foodIntakeList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":14,"author":{"gitId":"jasaaanlim"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jasaaanlim"},"content":"     * Constructs a FoodIntakeList."},{"lineNumber":16,"author":{"gitId":"jasaaanlim"},"content":"     * @param startDate the date that the FoodIntakeList begins collecting from"},{"lineNumber":17,"author":{"gitId":"jasaaanlim"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jasaaanlim"},"content":"    public FoodIntakeList(LocalDateTime startDate) {"},{"lineNumber":19,"author":{"gitId":"jasaaanlim"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":20,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":22,"author":{"gitId":"jasaaanlim"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jasaaanlim"},"content":"     * Adds a FoodIntake object to the FoodIntakeList."},{"lineNumber":24,"author":{"gitId":"jasaaanlim"},"content":"     * @param foodIntake FoodIntake object to add to list"},{"lineNumber":25,"author":{"gitId":"jasaaanlim"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jasaaanlim"},"content":"    public void addFoodIntake(FoodIntake foodIntake) {"},{"lineNumber":27,"author":{"gitId":"jasaaanlim"},"content":"        this.foodIntakeList.add(foodIntake);"},{"lineNumber":28,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jasaaanlim"},"content":""},{"lineNumber":30,"author":{"gitId":"jasaaanlim"},"content":"    public List\u003cFoodIntake\u003e getList() {"},{"lineNumber":31,"author":{"gitId":"jasaaanlim"},"content":"        return this.foodIntakeList;"},{"lineNumber":32,"author":{"gitId":"jasaaanlim"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jasaaanlim"},"content":"}"}],"authorContributionMap":{"jasaaanlim":33}},{"path":"src/main/java/seedu/address/model/user/Bmi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package seedu.address.model.user;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":" * Represents a User\u0027s Bmi."},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"public class Bmi {"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"    private static final double HEALTHY_BMI_LOWER_BOUND \u003d 18.5;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"    private static final double HEALTHY_BMI_UPPER_BOUND \u003d 22.9;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"    // Identity fields"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"    private final double weight;"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    private final double height;"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"    // Data fields"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    private final double bmi;"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     * Creates the Bmi object representing the user."},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param weight Current input weight"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param height Current input height"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"    public Bmi(double weight, double height) {"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"        this.weight \u003d weight;"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"        this.height \u003d height;"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"        this.bmi \u003d calculateBmi();"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns the Double value representing the Bmi."},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return Double value representing the Bmi"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"    protected double calculateBmi() {"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.weight / Math.pow(this.height, 2);"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns the lower bound of weight for the healthy Bmi."},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return Double value representing lower bound of healthy weight"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"    protected double getLowerBoundWeight() {"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":"        return HEALTHY_BMI_LOWER_BOUND * Math.pow(this.height, 2);"},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns the upper bound of weight for the healthy Bmi."},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"     * @return Double value representing upper bound of healthy weight"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"    protected double getUpperBoundWeight() {"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"        return HEALTHY_BMI_UPPER_BOUND * Math.pow(this.height, 2);"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"    protected Double getHeight() {"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.height;"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"    protected Double getWeight() {"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.weight;"},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"    protected Double getBmi() {"},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.bmi;"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"        return String.valueOf(this.bmi);"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"SoonKeatNeo"},"content":"    public boolean equals(Object other) {"},{"lineNumber":71,"author":{"gitId":"SoonKeatNeo"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":72,"author":{"gitId":"SoonKeatNeo"},"content":"            return true;"},{"lineNumber":73,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":75,"author":{"gitId":"SoonKeatNeo"},"content":"        if (!(other instanceof Bmi)) {"},{"lineNumber":76,"author":{"gitId":"SoonKeatNeo"},"content":"            return false;"},{"lineNumber":77,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":79,"author":{"gitId":"SoonKeatNeo"},"content":"        Bmi otherBmi \u003d (Bmi) other;"},{"lineNumber":80,"author":{"gitId":"SoonKeatNeo"},"content":"        return otherBmi.getWeight().equals(getWeight())"},{"lineNumber":81,"author":{"gitId":"SoonKeatNeo"},"content":"                \u0026\u0026 otherBmi.getHeight().equals(getHeight())"},{"lineNumber":82,"author":{"gitId":"SoonKeatNeo"},"content":"                \u0026\u0026 otherBmi.getBmi().equals(getBmi());"},{"lineNumber":83,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":85,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":85}},{"path":"src/main/java/seedu/address/model/user/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package seedu.address.model.user;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":" * Represents a User\u0027s name in DieTrack."},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":"public class Name {"},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"    /*"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"     * The first character of the address must not be a whitespace,"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"    public final String fullName;"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"     * Constructs a {@code Name}."},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param name A valid name."},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"    public Name(String name) {"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"        requireNonNull(name);"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"        fullName \u003d name;"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns true if a given string is a valid name."},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"    public static boolean isValidName(String test) {"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"        return fullName;"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"                || (other instanceof Name // instanceof handles nulls"},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check"},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":"    public int hashCode() {"},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"        return fullName.hashCode();"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":59}},{"path":"src/main/java/seedu/address/model/user/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package seedu.address.model.user;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import seedu.address.model.food.Food;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":"import seedu.address.model.person.Name;"},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":" * Handles the representation of the User class in DieTrack."},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":" */"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":"public class User {"},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"    // Identity fields"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    private final Name name;"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"    // Data fields"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    private final Bmi bmi;"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":"    private final List\u003cFood\u003e foodList;"},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"     * Creates a representation of the user with the given parameters."},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":"     * All fields must not be empty."},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param name Name of the user"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param bmi Bmi object of the user"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"     * @param foodList Food list of the user"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"    public User(Name name, Bmi bmi, List\u003cFood\u003e foodList) {"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":"        requireAllNonNull(name, bmi, foodList);"},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"        this.name \u003d name;"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"        this.bmi \u003d bmi;"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"        this.foodList \u003d foodList;"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"    public Name getName() {"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.name;"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":42,"author":{"gitId":"SoonKeatNeo"},"content":"    public Bmi getBmi() {"},{"lineNumber":43,"author":{"gitId":"SoonKeatNeo"},"content":"        return this.bmi;"},{"lineNumber":44,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":46,"author":{"gitId":"SoonKeatNeo"},"content":"    public List\u003cFood\u003e getFoodList() {"},{"lineNumber":47,"author":{"gitId":"SoonKeatNeo"},"content":"        return foodList;"},{"lineNumber":48,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":50,"author":{"gitId":"SoonKeatNeo"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"SoonKeatNeo"},"content":"     * Returns true if both users have the same identity and data fields."},{"lineNumber":52,"author":{"gitId":"SoonKeatNeo"},"content":"     * This defines a stronger notion of equality between two users."},{"lineNumber":53,"author":{"gitId":"SoonKeatNeo"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"SoonKeatNeo"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"SoonKeatNeo"},"content":"    public boolean equals(Object other) {"},{"lineNumber":56,"author":{"gitId":"SoonKeatNeo"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":57,"author":{"gitId":"SoonKeatNeo"},"content":"            return true;"},{"lineNumber":58,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":60,"author":{"gitId":"SoonKeatNeo"},"content":"        if (!(other instanceof User)) {"},{"lineNumber":61,"author":{"gitId":"SoonKeatNeo"},"content":"            return false;"},{"lineNumber":62,"author":{"gitId":"SoonKeatNeo"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":64,"author":{"gitId":"SoonKeatNeo"},"content":"        User otherUser \u003d (User) other;"},{"lineNumber":65,"author":{"gitId":"SoonKeatNeo"},"content":"        return otherUser.getName().equals(getName())"},{"lineNumber":66,"author":{"gitId":"SoonKeatNeo"},"content":"                \u0026\u0026 otherUser.getBmi().equals(getBmi())"},{"lineNumber":67,"author":{"gitId":"SoonKeatNeo"},"content":"                \u0026\u0026 otherUser.getFoodList().equals(getFoodList());"},{"lineNumber":68,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":69}},{"path":"src/test/java/seedu/address/model/food/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package seedu.address.model.food;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"public class FoodTest {"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Food(null, 0, 0, 0));"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    public void constructor_invalidFood_throwsIllegalArgumentException() {"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"        String invalidFood \u003d \"^.^\";"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Food(invalidFood, 0, 0, 0));"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Food(\"Jellies\", -1, 0, 0));"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Food(\"Sweet\", 10, 15, -5));"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Food(\"Flour\", 10, -5, 10));"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"    public void isValidFood() {"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"        // null address"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(NullPointerException.class, () -\u003e Food.isValidFoodName(null));"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"        // invalid addresses"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"        assertFalse(Food.isValidFoodName(\"\")); // empty string"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"        assertFalse(Food.isValidFoodName(\":)abc\")); //string filled with mixture of alphabets and special chars"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"        assertFalse(Food.isValidFoodName(\"^.^\")); //string filled with only special characters"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"        assertFalse(Food.isValidFoodName(\" \")); // spaces only"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"        // valid addresses"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"        assertTrue(Food.isValidFoodName(\"Jellies\"));"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"        assertTrue(Food.isValidFoodName(\"A\")); // one character"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"    public void isValidNumber() {"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"        //invalid inputs"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"        assertFalse(Food.isValidNumber(-1, 0, 0));"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"        assertFalse(Food.isValidNumber(0, -1, 0));"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"        assertFalse(Food.isValidNumber(0, 0, -1));"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"        //valid inputs"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"        assertTrue(Food.isValidNumber(0, 0, 0));"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"        assertTrue(Food.isValidNumber(1, 10, 100));"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":52}},{"path":"src/test/java/seedu/address/model/user/BmiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package seedu.address.model.user;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"public class BmiTest {"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":4}},{"path":"src/test/java/seedu/address/model/user/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package seedu.address.model.user;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"SoonKeatNeo"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":6,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":7,"author":{"gitId":"SoonKeatNeo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":9,"author":{"gitId":"SoonKeatNeo"},"content":"public class NameTest {"},{"lineNumber":10,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":11,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"SoonKeatNeo"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitId":"SoonKeatNeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.address.model.user.Name(null));"},{"lineNumber":14,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":16,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"SoonKeatNeo"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {"},{"lineNumber":18,"author":{"gitId":"SoonKeatNeo"},"content":"        String invalidName \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"SoonKeatNeo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.user.Name(invalidName));"},{"lineNumber":20,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":22,"author":{"gitId":"SoonKeatNeo"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"SoonKeatNeo"},"content":"    public void isValidName() {"},{"lineNumber":24,"author":{"gitId":"SoonKeatNeo"},"content":"        // null name"},{"lineNumber":25,"author":{"gitId":"SoonKeatNeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.user.Name.isValidName(null));"},{"lineNumber":26,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":27,"author":{"gitId":"SoonKeatNeo"},"content":"        // invalid name"},{"lineNumber":28,"author":{"gitId":"SoonKeatNeo"},"content":"        assertFalse(seedu.address.model.user.Name.isValidName(\"\")); // empty string"},{"lineNumber":29,"author":{"gitId":"SoonKeatNeo"},"content":"        assertFalse(seedu.address.model.user.Name.isValidName(\" \")); // spaces only"},{"lineNumber":30,"author":{"gitId":"SoonKeatNeo"},"content":"        assertFalse(seedu.address.model.user.Name.isValidName(\"^\")); // only non-alphanumeric characters"},{"lineNumber":31,"author":{"gitId":"SoonKeatNeo"},"content":"        assertFalse(seedu.address.model.user.Name.isValidName(\"peter*\")); // contains non-alphanumeric characters"},{"lineNumber":32,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":33,"author":{"gitId":"SoonKeatNeo"},"content":"        // valid name"},{"lineNumber":34,"author":{"gitId":"SoonKeatNeo"},"content":"        assertTrue(seedu.address.model.user.Name.isValidName(\"peter jack\")); // alphabets only"},{"lineNumber":35,"author":{"gitId":"SoonKeatNeo"},"content":"        assertTrue(seedu.address.model.user.Name.isValidName(\"12345\")); // numbers only"},{"lineNumber":36,"author":{"gitId":"SoonKeatNeo"},"content":"        assertTrue(seedu.address.model.user.Name.isValidName(\"peter the 2nd\")); // alphanumeric characters"},{"lineNumber":37,"author":{"gitId":"SoonKeatNeo"},"content":"        assertTrue(seedu.address.model.user.Name.isValidName(\"Capital Tan\")); // with capital letters"},{"lineNumber":38,"author":{"gitId":"SoonKeatNeo"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names"},{"lineNumber":39,"author":{"gitId":"SoonKeatNeo"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":40}},{"path":"src/test/java/seedu/address/model/user/UserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoonKeatNeo"},"content":"package seedu.address.model.user;"},{"lineNumber":2,"author":{"gitId":"SoonKeatNeo"},"content":""},{"lineNumber":3,"author":{"gitId":"SoonKeatNeo"},"content":"public class UserTest {"},{"lineNumber":4,"author":{"gitId":"SoonKeatNeo"},"content":"}"}],"authorContributionMap":{"SoonKeatNeo":4}}]
